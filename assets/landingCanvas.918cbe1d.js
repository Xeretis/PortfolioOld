import{r as Ne,u as sm,g as Jx,j as Vt,a as Vg,b as Qx,c as Kx}from"./index.04dc2a84.js";const om={passive:!0};function $x(){const[l,e]=Ne.exports.useState({width:0,height:0}),t=Ne.exports.useCallback(()=>{e({width:window.innerWidth||0,height:window.innerHeight||0})},[]);return sm("resize",t,om),sm("orientationchange",t,om),Ne.exports.useEffect(t,[]),l}/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Bc="145",Zr={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},jr={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Hg=0,jh=1,Gg=2,ey=3,ty=0,kf=1,Uf=2,to=3,us=0,Fn=1,Xi=2,Zi=0,rs=1,Jh=2,Qh=3,Kh=4,Wg=5,Qr=100,Xg=101,qg=102,$h=103,ef=104,Yg=200,Zg=201,jg=202,Jg=203,Bf=204,Vf=205,Qg=206,Kg=207,$g=208,e0=209,t0=210,n0=0,i0=1,r0=2,Ic=3,s0=4,o0=5,a0=6,l0=7,ya=0,c0=1,u0=2,di=0,h0=1,f0=2,d0=3,Hf=4,p0=5,Vc=300,Mr=301,Sr=302,ta=303,na=304,ho=306,ia=1e3,Sn=1001,ra=1002,Jt=1003,Dc=1004,ny=1004,zc=1005,iy=1005,Xt=1006,Gf=1007,ry=1007,ps=1008,sy=1008,wr=1009,m0=1010,g0=1011,Wf=1012,v0=1013,vr=1014,qi=1015,ao=1016,x0=1017,y0=1018,ss=1020,_0=1021,M0=1022,ii=1023,S0=1024,w0=1025,yr=1026,hs=1027,b0=1028,T0=1029,E0=1030,A0=1031,C0=1033,bc=33776,Tc=33777,Ec=33778,Ac=33779,tf=35840,nf=35841,rf=35842,sf=35843,P0=36196,of=37492,af=37496,lf=37808,cf=37809,uf=37810,hf=37811,ff=37812,df=37813,pf=37814,mf=37815,gf=37816,vf=37817,xf=37818,yf=37819,_f=37820,Mf=37821,Sf=36492,L0=2200,R0=2201,I0=2202,sa=2300,oa=2301,Cc=2302,$r=2400,es=2401,aa=2402,Hc=2500,Xf=2501,oy=0,ay=1,ly=2,ji=3e3,Lt=3001,D0=3200,z0=3201,Er=0,N0=1,cy="",bi="srgb",xr="srgb-linear",uy=0,Pc=7680,hy=7681,fy=7682,dy=7683,py=34055,my=34056,gy=5386,vy=512,xy=513,yy=514,_y=515,My=516,Sy=517,wy=518,O0=519,la=35044,by=35048,Ty=35040,Ey=35045,Ay=35049,Cy=35041,Py=35046,Ly=35050,Ry=35042,Iy="100",wf="300 es",Nc=1035;class Ai{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const r=i.indexOf(t);r!==-1&&i.splice(r,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let r=0,a=i.length;r<a;r++)i[r].call(this,e);e.target=null}}}const mn=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let am=1234567;const os=Math.PI/180,ca=180/Math.PI;function kn(){const l=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(mn[l&255]+mn[l>>8&255]+mn[l>>16&255]+mn[l>>24&255]+"-"+mn[e&255]+mn[e>>8&255]+"-"+mn[e>>16&15|64]+mn[e>>24&255]+"-"+mn[t&63|128]+mn[t>>8&255]+"-"+mn[t>>16&255]+mn[t>>24&255]+mn[n&255]+mn[n>>8&255]+mn[n>>16&255]+mn[n>>24&255]).toLowerCase()}function qt(l,e,t){return Math.max(e,Math.min(t,l))}function qf(l,e){return(l%e+e)%e}function Dy(l,e,t,n,i){return n+(l-e)*(i-n)/(t-e)}function zy(l,e,t){return l!==e?(t-l)/(e-l):0}function Ko(l,e,t){return(1-t)*l+t*e}function Ny(l,e,t,n){return Ko(l,e,1-Math.exp(-t*n))}function Oy(l,e=1){return e-Math.abs(qf(l,e*2)-e)}function Fy(l,e,t){return l<=e?0:l>=t?1:(l=(l-e)/(t-e),l*l*(3-2*l))}function ky(l,e,t){return l<=e?0:l>=t?1:(l=(l-e)/(t-e),l*l*l*(l*(l*6-15)+10))}function Uy(l,e){return l+Math.floor(Math.random()*(e-l+1))}function By(l,e){return l+Math.random()*(e-l)}function Vy(l){return l*(.5-Math.random())}function Hy(l){l!==void 0&&(am=l);let e=am+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function Gy(l){return l*os}function Wy(l){return l*ca}function bf(l){return(l&l-1)===0&&l!==0}function F0(l){return Math.pow(2,Math.ceil(Math.log(l)/Math.LN2))}function Oc(l){return Math.pow(2,Math.floor(Math.log(l)/Math.LN2))}function Xy(l,e,t,n,i){const r=Math.cos,a=Math.sin,c=r(t/2),u=a(t/2),h=r((e+n)/2),d=a((e+n)/2),p=r((e-n)/2),m=a((e-n)/2),v=r((n-e)/2),y=a((n-e)/2);switch(i){case"XYX":l.set(c*d,u*p,u*m,c*h);break;case"YZY":l.set(u*m,c*d,u*p,c*h);break;case"ZXZ":l.set(u*p,u*m,c*d,c*h);break;case"XZX":l.set(c*d,u*y,u*v,c*h);break;case"YXY":l.set(u*v,c*d,u*y,c*h);break;case"ZYZ":l.set(u*y,u*v,c*d,c*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Yi(l,e){switch(e.constructor){case Float32Array:return l;case Uint16Array:return l/65535;case Uint8Array:return l/255;case Int16Array:return Math.max(l/32767,-1);case Int8Array:return Math.max(l/127,-1);default:throw new Error("Invalid component type.")}}function Ct(l,e){switch(e.constructor){case Float32Array:return l;case Uint16Array:return Math.round(l*65535);case Uint8Array:return Math.round(l*255);case Int16Array:return Math.round(l*32767);case Int8Array:return Math.round(l*127);default:throw new Error("Invalid component type.")}}var qy=Object.freeze({__proto__:null,DEG2RAD:os,RAD2DEG:ca,generateUUID:kn,clamp:qt,euclideanModulo:qf,mapLinear:Dy,inverseLerp:zy,lerp:Ko,damp:Ny,pingpong:Oy,smoothstep:Fy,smootherstep:ky,randInt:Uy,randFloat:By,randFloatSpread:Vy,seededRandom:Hy,degToRad:Gy,radToDeg:Wy,isPowerOfTwo:bf,ceilPowerOfTwo:F0,floorPowerOfTwo:Oc,setQuaternionFromProperEuler:Xy,normalize:Ct,denormalize:Yi});class fe{constructor(e=0,t=0){fe.prototype.isVector2=!0,this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e){return this.x+=e.x,this.y+=e.y,this}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),r=this.x-e.x,a=this.y-e.y;return this.x=r*n-a*i+e.x,this.y=r*i+a*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Ln{constructor(){Ln.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1]}set(e,t,n,i,r,a,c,u,h){const d=this.elements;return d[0]=e,d[1]=i,d[2]=c,d[3]=t,d[4]=r,d[5]=u,d[6]=n,d[7]=a,d[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],c=n[3],u=n[6],h=n[1],d=n[4],p=n[7],m=n[2],v=n[5],y=n[8],x=i[0],_=i[3],S=i[6],w=i[1],T=i[4],E=i[7],C=i[2],P=i[5],N=i[8];return r[0]=a*x+c*w+u*C,r[3]=a*_+c*T+u*P,r[6]=a*S+c*E+u*N,r[1]=h*x+d*w+p*C,r[4]=h*_+d*T+p*P,r[7]=h*S+d*E+p*N,r[2]=m*x+v*w+y*C,r[5]=m*_+v*T+y*P,r[8]=m*S+v*E+y*N,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],c=e[5],u=e[6],h=e[7],d=e[8];return t*a*d-t*c*h-n*r*d+n*c*u+i*r*h-i*a*u}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],c=e[5],u=e[6],h=e[7],d=e[8],p=d*a-c*h,m=c*u-d*r,v=h*r-a*u,y=t*p+n*m+i*v;if(y===0)return this.set(0,0,0,0,0,0,0,0,0);const x=1/y;return e[0]=p*x,e[1]=(i*h-d*n)*x,e[2]=(c*n-i*a)*x,e[3]=m*x,e[4]=(d*t-i*u)*x,e[5]=(i*r-c*t)*x,e[6]=v*x,e[7]=(n*u-h*t)*x,e[8]=(a*t-n*r)*x,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,r,a,c){const u=Math.cos(r),h=Math.sin(r);return this.set(n*u,n*h,-n*(u*a+h*c)+a+e,-i*h,i*u,-i*(-h*a+u*c)+c+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,r=i[0],a=i[3],c=i[6],u=i[1],h=i[4],d=i[7];return i[0]=t*r+n*u,i[3]=t*a+n*h,i[6]=t*c+n*d,i[1]=-n*r+t*u,i[4]=-n*a+t*h,i[7]=-n*c+t*d,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}function k0(l){for(let e=l.length-1;e>=0;--e)if(l[e]>=65535)return!0;return!1}const Yy={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function no(l,e){return new Yy[l](e)}function ua(l){return document.createElementNS("http://www.w3.org/1999/xhtml",l)}function as(l){return l<.04045?l*.0773993808:Math.pow(l*.9478672986+.0521327014,2.4)}function Lc(l){return l<.0031308?l*12.92:1.055*Math.pow(l,.41666)-.055}const oh={[bi]:{[xr]:as},[xr]:{[bi]:Lc}},ei={legacyMode:!0,get workingColorSpace(){return xr},set workingColorSpace(l){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(l,e,t){if(this.legacyMode||e===t||!e||!t)return l;if(oh[e]&&oh[e][t]!==void 0){const n=oh[e][t];return l.r=n(l.r),l.g=n(l.g),l.b=n(l.b),l}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(l,e){return this.convert(l,this.workingColorSpace,e)},toWorkingColorSpace:function(l,e){return this.convert(l,e,this.workingColorSpace)}},U0={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},$t={r:0,g:0,b:0},ci={h:0,s:0,l:0},Nl={h:0,s:0,l:0};function ah(l,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?l+(e-l)*6*t:t<1/2?e:t<2/3?l+(e-l)*6*(2/3-t):l}function Ol(l,e){return e.r=l.r,e.g=l.g,e.b=l.b,e}class De{constructor(e,t,n){return this.isColor=!0,this.r=1,this.g=1,this.b=1,t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=bi){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,ei.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=xr){return this.r=e,this.g=t,this.b=n,ei.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=xr){if(e=qf(e,1),t=qt(t,0,1),n=qt(n,0,1),t===0)this.r=this.g=this.b=n;else{const r=n<=.5?n*(1+t):n+t-n*t,a=2*n-r;this.r=ah(a,r,e+1/3),this.g=ah(a,r,e),this.b=ah(a,r,e-1/3)}return ei.toWorkingColorSpace(this,i),this}setStyle(e,t=bi){function n(r){r!==void 0&&parseFloat(r)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let r;const a=i[1],c=i[2];switch(a){case"rgb":case"rgba":if(r=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return this.r=Math.min(255,parseInt(r[1],10))/255,this.g=Math.min(255,parseInt(r[2],10))/255,this.b=Math.min(255,parseInt(r[3],10))/255,ei.toWorkingColorSpace(this,t),n(r[4]),this;if(r=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c))return this.r=Math.min(100,parseInt(r[1],10))/100,this.g=Math.min(100,parseInt(r[2],10))/100,this.b=Math.min(100,parseInt(r[3],10))/100,ei.toWorkingColorSpace(this,t),n(r[4]),this;break;case"hsl":case"hsla":if(r=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(c)){const u=parseFloat(r[1])/360,h=parseFloat(r[2])/100,d=parseFloat(r[3])/100;return n(r[4]),this.setHSL(u,h,d,t)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const r=i[1],a=r.length;if(a===3)return this.r=parseInt(r.charAt(0)+r.charAt(0),16)/255,this.g=parseInt(r.charAt(1)+r.charAt(1),16)/255,this.b=parseInt(r.charAt(2)+r.charAt(2),16)/255,ei.toWorkingColorSpace(this,t),this;if(a===6)return this.r=parseInt(r.charAt(0)+r.charAt(1),16)/255,this.g=parseInt(r.charAt(2)+r.charAt(3),16)/255,this.b=parseInt(r.charAt(4)+r.charAt(5),16)/255,ei.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=bi){const n=U0[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=as(e.r),this.g=as(e.g),this.b=as(e.b),this}copyLinearToSRGB(e){return this.r=Lc(e.r),this.g=Lc(e.g),this.b=Lc(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=bi){return ei.fromWorkingColorSpace(Ol(this,$t),e),qt($t.r*255,0,255)<<16^qt($t.g*255,0,255)<<8^qt($t.b*255,0,255)<<0}getHexString(e=bi){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=xr){ei.fromWorkingColorSpace(Ol(this,$t),t);const n=$t.r,i=$t.g,r=$t.b,a=Math.max(n,i,r),c=Math.min(n,i,r);let u,h;const d=(c+a)/2;if(c===a)u=0,h=0;else{const p=a-c;switch(h=d<=.5?p/(a+c):p/(2-a-c),a){case n:u=(i-r)/p+(i<r?6:0);break;case i:u=(r-n)/p+2;break;case r:u=(n-i)/p+4;break}u/=6}return e.h=u,e.s=h,e.l=d,e}getRGB(e,t=xr){return ei.fromWorkingColorSpace(Ol(this,$t),t),e.r=$t.r,e.g=$t.g,e.b=$t.b,e}getStyle(e=bi){return ei.fromWorkingColorSpace(Ol(this,$t),e),e!==bi?`color(${e} ${$t.r} ${$t.g} ${$t.b})`:`rgb(${$t.r*255|0},${$t.g*255|0},${$t.b*255|0})`}offsetHSL(e,t,n){return this.getHSL(ci),ci.h+=e,ci.s+=t,ci.l+=n,this.setHSL(ci.h,ci.s,ci.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(ci),e.getHSL(Nl);const n=Ko(ci.h,Nl.h,t),i=Ko(ci.s,Nl.s,t),r=Ko(ci.l,Nl.l,t);return this.setHSL(n,i,r),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}De.NAMES=U0;let zs;class Yf{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement>"u")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{zs===void 0&&(zs=ua("canvas")),zs.width=e.width,zs.height=e.height;const n=zs.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=zs}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement<"u"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&e instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&e instanceof ImageBitmap){const t=ua("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),r=i.data;for(let a=0;a<r.length;a++)r[a]=as(r[a]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(as(t[n]/255)*255):t[n]=as(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class ts{constructor(e=null){this.isSource=!0,this.uuid=kn(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let r;if(Array.isArray(i)){r=[];for(let a=0,c=i.length;a<c;a++)i[a].isDataTexture?r.push(lh(i[a].image)):r.push(lh(i[a]))}else r=lh(i);n.url=r}return t||(e.images[this.uuid]=n),n}}function lh(l){return typeof HTMLImageElement<"u"&&l instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&l instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&l instanceof ImageBitmap?Yf.getDataURL(l):l.data?{data:Array.from(l.data),width:l.width,height:l.height,type:l.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let Zy=0;class Qt extends Ai{constructor(e=Qt.DEFAULT_IMAGE,t=Qt.DEFAULT_MAPPING,n=Sn,i=Sn,r=Xt,a=ps,c=ii,u=wr,h=1,d=ji){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:Zy++}),this.uuid=kn(),this.name="",this.source=new ts(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=r,this.minFilter=a,this.anisotropy=h,this.format=c,this.internalFormat=null,this.type=u,this.offset=new fe(0,0),this.repeat=new fe(1,1),this.center=new fe(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Ln,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=d,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==Vc)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ia:e.x=e.x-Math.floor(e.x);break;case Sn:e.x=e.x<0?0:1;break;case ra:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case ia:e.y=e.y-Math.floor(e.y);break;case Sn:e.y=e.y<0?0:1;break;case ra:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}Qt.DEFAULT_IMAGE=null;Qt.DEFAULT_MAPPING=Vc;class Tt{constructor(e=0,t=0,n=0,i=1){Tt.prototype.isVector4=!0,this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=this.w,a=e.elements;return this.x=a[0]*t+a[4]*n+a[8]*i+a[12]*r,this.y=a[1]*t+a[5]*n+a[9]*i+a[13]*r,this.z=a[2]*t+a[6]*n+a[10]*i+a[14]*r,this.w=a[3]*t+a[7]*n+a[11]*i+a[15]*r,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,r;const u=e.elements,h=u[0],d=u[4],p=u[8],m=u[1],v=u[5],y=u[9],x=u[2],_=u[6],S=u[10];if(Math.abs(d-m)<.01&&Math.abs(p-x)<.01&&Math.abs(y-_)<.01){if(Math.abs(d+m)<.1&&Math.abs(p+x)<.1&&Math.abs(y+_)<.1&&Math.abs(h+v+S-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const T=(h+1)/2,E=(v+1)/2,C=(S+1)/2,P=(d+m)/4,N=(p+x)/4,A=(y+_)/4;return T>E&&T>C?T<.01?(n=0,i=.707106781,r=.707106781):(n=Math.sqrt(T),i=P/n,r=N/n):E>C?E<.01?(n=.707106781,i=0,r=.707106781):(i=Math.sqrt(E),n=P/i,r=A/i):C<.01?(n=.707106781,i=.707106781,r=0):(r=Math.sqrt(C),n=N/r,i=A/r),this.set(n,i,r,t),this}let w=Math.sqrt((_-y)*(_-y)+(p-x)*(p-x)+(m-d)*(m-d));return Math.abs(w)<.001&&(w=1),this.x=(_-y)/w,this.y=(p-x)/w,this.z=(m-d)/w,this.w=Math.acos((h+v+S-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class ri extends Ai{constructor(e,t,n={}){super(),this.isWebGLRenderTarget=!0,this.width=e,this.height=t,this.depth=1,this.scissor=new Tt(0,0,e,t),this.scissorTest=!1,this.viewport=new Tt(0,0,e,t);const i={width:e,height:t,depth:1};this.texture=new Qt(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:Xt,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0;const t=Object.assign({},e.texture.image);return this.texture.source=new ts(t),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class _a extends Qt{constructor(e=null,t=1,n=1,i=1){super(null),this.isDataArrayTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Jt,this.minFilter=Jt,this.wrapR=Sn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class jy extends ri{constructor(e,t,n){super(e,t),this.isWebGLArrayRenderTarget=!0,this.depth=n,this.texture=new _a(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Gc extends Qt{constructor(e=null,t=1,n=1,i=1){super(null),this.isData3DTexture=!0,this.image={data:e,width:t,height:n,depth:i},this.magFilter=Jt,this.minFilter=Jt,this.wrapR=Sn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class Jy extends ri{constructor(e,t,n){super(e,t),this.isWebGL3DRenderTarget=!0,this.depth=n,this.texture=new Gc(null,e,t,n),this.texture.isRenderTargetTexture=!0}}class Qy extends ri{constructor(e,t,n,i={}){super(e,t,i),this.isWebGLMultipleRenderTargets=!0;const r=this.texture;this.texture=[];for(let a=0;a<n;a++)this.texture[a]=r.clone(),this.texture[a].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,r=this.texture.length;i<r;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone(),this.texture[t].isRenderTargetTexture=!0;return this}}class vn{constructor(e=0,t=0,n=0,i=1){this.isQuaternion=!0,this._x=e,this._y=t,this._z=n,this._w=i}static slerpFlat(e,t,n,i,r,a,c){let u=n[i+0],h=n[i+1],d=n[i+2],p=n[i+3];const m=r[a+0],v=r[a+1],y=r[a+2],x=r[a+3];if(c===0){e[t+0]=u,e[t+1]=h,e[t+2]=d,e[t+3]=p;return}if(c===1){e[t+0]=m,e[t+1]=v,e[t+2]=y,e[t+3]=x;return}if(p!==x||u!==m||h!==v||d!==y){let _=1-c;const S=u*m+h*v+d*y+p*x,w=S>=0?1:-1,T=1-S*S;if(T>Number.EPSILON){const C=Math.sqrt(T),P=Math.atan2(C,S*w);_=Math.sin(_*P)/C,c=Math.sin(c*P)/C}const E=c*w;if(u=u*_+m*E,h=h*_+v*E,d=d*_+y*E,p=p*_+x*E,_===1-c){const C=1/Math.sqrt(u*u+h*h+d*d+p*p);u*=C,h*=C,d*=C,p*=C}}e[t]=u,e[t+1]=h,e[t+2]=d,e[t+3]=p}static multiplyQuaternionsFlat(e,t,n,i,r,a){const c=n[i],u=n[i+1],h=n[i+2],d=n[i+3],p=r[a],m=r[a+1],v=r[a+2],y=r[a+3];return e[t]=c*y+d*p+u*v-h*m,e[t+1]=u*y+d*m+h*p-c*v,e[t+2]=h*y+d*v+c*m-u*p,e[t+3]=d*y-c*p-u*m-h*v,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){const n=e._x,i=e._y,r=e._z,a=e._order,c=Math.cos,u=Math.sin,h=c(n/2),d=c(i/2),p=c(r/2),m=u(n/2),v=u(i/2),y=u(r/2);switch(a){case"XYZ":this._x=m*d*p+h*v*y,this._y=h*v*p-m*d*y,this._z=h*d*y+m*v*p,this._w=h*d*p-m*v*y;break;case"YXZ":this._x=m*d*p+h*v*y,this._y=h*v*p-m*d*y,this._z=h*d*y-m*v*p,this._w=h*d*p+m*v*y;break;case"ZXY":this._x=m*d*p-h*v*y,this._y=h*v*p+m*d*y,this._z=h*d*y+m*v*p,this._w=h*d*p-m*v*y;break;case"ZYX":this._x=m*d*p-h*v*y,this._y=h*v*p+m*d*y,this._z=h*d*y-m*v*p,this._w=h*d*p+m*v*y;break;case"YZX":this._x=m*d*p+h*v*y,this._y=h*v*p+m*d*y,this._z=h*d*y-m*v*p,this._w=h*d*p-m*v*y;break;case"XZY":this._x=m*d*p-h*v*y,this._y=h*v*p-m*d*y,this._z=h*d*y+m*v*p,this._w=h*d*p+m*v*y;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+a)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],r=t[8],a=t[1],c=t[5],u=t[9],h=t[2],d=t[6],p=t[10],m=n+c+p;if(m>0){const v=.5/Math.sqrt(m+1);this._w=.25/v,this._x=(d-u)*v,this._y=(r-h)*v,this._z=(a-i)*v}else if(n>c&&n>p){const v=2*Math.sqrt(1+n-c-p);this._w=(d-u)/v,this._x=.25*v,this._y=(i+a)/v,this._z=(r+h)/v}else if(c>p){const v=2*Math.sqrt(1+c-n-p);this._w=(r-h)/v,this._x=(i+a)/v,this._y=.25*v,this._z=(u+d)/v}else{const v=2*Math.sqrt(1+p-n-c);this._w=(a-i)/v,this._x=(r+h)/v,this._y=(u+d)/v,this._z=.25*v}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(qt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e){return this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,r=e._z,a=e._w,c=t._x,u=t._y,h=t._z,d=t._w;return this._x=n*d+a*c+i*h-r*u,this._y=i*d+a*u+r*c-n*h,this._z=r*d+a*h+n*u-i*c,this._w=a*d-n*c-i*u-r*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,r=this._z,a=this._w;let c=a*e._w+n*e._x+i*e._y+r*e._z;if(c<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,c=-c):this.copy(e),c>=1)return this._w=a,this._x=n,this._y=i,this._z=r,this;const u=1-c*c;if(u<=Number.EPSILON){const v=1-t;return this._w=v*a+t*this._w,this._x=v*n+t*this._x,this._y=v*i+t*this._y,this._z=v*r+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(u),d=Math.atan2(h,c),p=Math.sin((1-t)*d)/h,m=Math.sin(t*d)/h;return this._w=a*p+this._w*m,this._x=n*p+this._x*m,this._y=i*p+this._y*m,this._z=r*p+this._z*m,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),r=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(r),n*Math.cos(r),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class I{constructor(e=0,t=0,n=0){I.prototype.isVector3=!0,this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e){return this.x+=e.x,this.y+=e.y,this.z+=e.z,this}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e){return this.x-=e.x,this.y-=e.y,this.z-=e.z,this}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return this.applyQuaternion(lm.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(lm.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[3]*n+r[6]*i,this.y=r[1]*t+r[4]*n+r[7]*i,this.z=r[2]*t+r[5]*n+r[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,r=e.elements,a=1/(r[3]*t+r[7]*n+r[11]*i+r[15]);return this.x=(r[0]*t+r[4]*n+r[8]*i+r[12])*a,this.y=(r[1]*t+r[5]*n+r[9]*i+r[13])*a,this.z=(r[2]*t+r[6]*n+r[10]*i+r[14])*a,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,r=e.x,a=e.y,c=e.z,u=e.w,h=u*t+a*i-c*n,d=u*n+c*t-r*i,p=u*i+r*n-a*t,m=-r*t-a*n-c*i;return this.x=h*u+m*-r+d*-c-p*-a,this.y=d*u+m*-a+p*-r-h*-c,this.z=p*u+m*-c+h*-a-d*-r,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,r=e.elements;return this.x=r[0]*t+r[4]*n+r[8]*i,this.y=r[1]*t+r[5]*n+r[9]*i,this.z=r[2]*t+r[6]*n+r[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e){return this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,r=e.z,a=t.x,c=t.y,u=t.z;return this.x=i*u-r*c,this.y=r*a-n*u,this.z=n*c-i*a,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return ch.copy(this).projectOnVector(e),this.sub(ch)}reflect(e){return this.sub(ch.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(qt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t){return this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const ch=new I,lm=new vn;class ms{constructor(e=new I(1/0,1/0,1/0),t=new I(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,c=-1/0;for(let u=0,h=e.length;u<h;u+=3){const d=e[u],p=e[u+1],m=e[u+2];d<t&&(t=d),p<n&&(n=p),m<i&&(i=m),d>r&&(r=d),p>a&&(a=p),m>c&&(c=m)}return this.min.set(t,n,i),this.max.set(r,a,c),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,r=-1/0,a=-1/0,c=-1/0;for(let u=0,h=e.count;u<h;u++){const d=e.getX(u),p=e.getY(u),m=e.getZ(u);d<t&&(t=d),p<n&&(n=p),m<i&&(i=m),d>r&&(r=d),p>a&&(a=p),m>c&&(c=m)}return this.min.set(t,n,i),this.max.set(r,a,c),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Ur.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const r=n.attributes.position;for(let a=0,c=r.count;a<c;a++)Ur.fromBufferAttribute(r,a).applyMatrix4(e.matrixWorld),this.expandByPoint(Ur)}else n.boundingBox===null&&n.computeBoundingBox(),uh.copy(n.boundingBox),uh.applyMatrix4(e.matrixWorld),this.union(uh);const i=e.children;for(let r=0,a=i.length;r<a;r++)this.expandByObject(i[r],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Ur),Ur.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(Bo),Fl.subVectors(this.max,Bo),Ns.subVectors(e.a,Bo),Os.subVectors(e.b,Bo),Fs.subVectors(e.c,Bo),lr.subVectors(Os,Ns),cr.subVectors(Fs,Os),Br.subVectors(Ns,Fs);let t=[0,-lr.z,lr.y,0,-cr.z,cr.y,0,-Br.z,Br.y,lr.z,0,-lr.x,cr.z,0,-cr.x,Br.z,0,-Br.x,-lr.y,lr.x,0,-cr.y,cr.x,0,-Br.y,Br.x,0];return!hh(t,Ns,Os,Fs,Fl)||(t=[1,0,0,0,1,0,0,0,1],!hh(t,Ns,Os,Fs,Fl))?!1:(kl.crossVectors(lr,cr),t=[kl.x,kl.y,kl.z],hh(t,Ns,Os,Fs,Fl))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Ur.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(Ur).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(ki[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),ki[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),ki[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),ki[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),ki[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),ki[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),ki[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),ki[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(ki),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const ki=[new I,new I,new I,new I,new I,new I,new I,new I],Ur=new I,uh=new ms,Ns=new I,Os=new I,Fs=new I,lr=new I,cr=new I,Br=new I,Bo=new I,Fl=new I,kl=new I,Vr=new I;function hh(l,e,t,n,i){for(let r=0,a=l.length-3;r<=a;r+=3){Vr.fromArray(l,r);const c=i.x*Math.abs(Vr.x)+i.y*Math.abs(Vr.y)+i.z*Math.abs(Vr.z),u=e.dot(Vr),h=t.dot(Vr),d=n.dot(Vr);if(Math.max(-Math.max(u,h,d),Math.min(u,h,d))>c)return!1}return!0}const Ky=new ms,cm=new I,Ul=new I,fh=new I;class gs{constructor(e=new I,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):Ky.setFromPoints(e).getCenter(n);let i=0;for(let r=0,a=e.length;r<a;r++)i=Math.max(i,n.distanceToSquared(e[r]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){if(this.isEmpty())return this.center.copy(e),this.radius=0,this;fh.subVectors(e,this.center);const t=fh.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.add(fh.multiplyScalar(i/n)),this.radius+=i}return this}union(e){return e.isEmpty()?this:this.isEmpty()?(this.copy(e),this):(this.center.equals(e.center)===!0?Ul.set(0,0,1).multiplyScalar(e.radius):Ul.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(cm.copy(e.center).add(Ul)),this.expandByPoint(cm.copy(e.center).sub(Ul)),this)}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Ui=new I,dh=new I,Bl=new I,ur=new I,ph=new I,Vl=new I,mh=new I;class Ma{constructor(e=new I,t=new I(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Ui)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Ui.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Ui.copy(this.direction).multiplyScalar(t).add(this.origin),Ui.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){dh.copy(e).add(t).multiplyScalar(.5),Bl.copy(t).sub(e).normalize(),ur.copy(this.origin).sub(dh);const r=e.distanceTo(t)*.5,a=-this.direction.dot(Bl),c=ur.dot(this.direction),u=-ur.dot(Bl),h=ur.lengthSq(),d=Math.abs(1-a*a);let p,m,v,y;if(d>0)if(p=a*u-c,m=a*c-u,y=r*d,p>=0)if(m>=-y)if(m<=y){const x=1/d;p*=x,m*=x,v=p*(p+a*m+2*c)+m*(a*p+m+2*u)+h}else m=r,p=Math.max(0,-(a*m+c)),v=-p*p+m*(m+2*u)+h;else m=-r,p=Math.max(0,-(a*m+c)),v=-p*p+m*(m+2*u)+h;else m<=-y?(p=Math.max(0,-(-a*r+c)),m=p>0?-r:Math.min(Math.max(-r,-u),r),v=-p*p+m*(m+2*u)+h):m<=y?(p=0,m=Math.min(Math.max(-r,-u),r),v=m*(m+2*u)+h):(p=Math.max(0,-(a*r+c)),m=p>0?r:Math.min(Math.max(-r,-u),r),v=-p*p+m*(m+2*u)+h);else m=a>0?-r:r,p=Math.max(0,-(a*m+c)),v=-p*p+m*(m+2*u)+h;return n&&n.copy(this.direction).multiplyScalar(p).add(this.origin),i&&i.copy(Bl).multiplyScalar(m).add(dh),v}intersectSphere(e,t){Ui.subVectors(e.center,this.origin);const n=Ui.dot(this.direction),i=Ui.dot(Ui)-n*n,r=e.radius*e.radius;if(i>r)return null;const a=Math.sqrt(r-i),c=n-a,u=n+a;return c<0&&u<0?null:c<0?this.at(u,t):this.at(c,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,r,a,c,u;const h=1/this.direction.x,d=1/this.direction.y,p=1/this.direction.z,m=this.origin;return h>=0?(n=(e.min.x-m.x)*h,i=(e.max.x-m.x)*h):(n=(e.max.x-m.x)*h,i=(e.min.x-m.x)*h),d>=0?(r=(e.min.y-m.y)*d,a=(e.max.y-m.y)*d):(r=(e.max.y-m.y)*d,a=(e.min.y-m.y)*d),n>a||r>i||((r>n||n!==n)&&(n=r),(a<i||i!==i)&&(i=a),p>=0?(c=(e.min.z-m.z)*p,u=(e.max.z-m.z)*p):(c=(e.max.z-m.z)*p,u=(e.min.z-m.z)*p),n>u||c>i)||((c>n||n!==n)&&(n=c),(u<i||i!==i)&&(i=u),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Ui)!==null}intersectTriangle(e,t,n,i,r){ph.subVectors(t,e),Vl.subVectors(n,e),mh.crossVectors(ph,Vl);let a=this.direction.dot(mh),c;if(a>0){if(i)return null;c=1}else if(a<0)c=-1,a=-a;else return null;ur.subVectors(this.origin,e);const u=c*this.direction.dot(Vl.crossVectors(ur,Vl));if(u<0)return null;const h=c*this.direction.dot(ph.cross(ur));if(h<0||u+h>a)return null;const d=-c*ur.dot(mh);return d<0?null:this.at(d/a,r)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class ot{constructor(){ot.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1]}set(e,t,n,i,r,a,c,u,h,d,p,m,v,y,x,_){const S=this.elements;return S[0]=e,S[4]=t,S[8]=n,S[12]=i,S[1]=r,S[5]=a,S[9]=c,S[13]=u,S[2]=h,S[6]=d,S[10]=p,S[14]=m,S[3]=v,S[7]=y,S[11]=x,S[15]=_,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new ot().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/ks.setFromMatrixColumn(e,0).length(),r=1/ks.setFromMatrixColumn(e,1).length(),a=1/ks.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*r,t[5]=n[5]*r,t[6]=n[6]*r,t[7]=0,t[8]=n[8]*a,t[9]=n[9]*a,t[10]=n[10]*a,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){const t=this.elements,n=e.x,i=e.y,r=e.z,a=Math.cos(n),c=Math.sin(n),u=Math.cos(i),h=Math.sin(i),d=Math.cos(r),p=Math.sin(r);if(e.order==="XYZ"){const m=a*d,v=a*p,y=c*d,x=c*p;t[0]=u*d,t[4]=-u*p,t[8]=h,t[1]=v+y*h,t[5]=m-x*h,t[9]=-c*u,t[2]=x-m*h,t[6]=y+v*h,t[10]=a*u}else if(e.order==="YXZ"){const m=u*d,v=u*p,y=h*d,x=h*p;t[0]=m+x*c,t[4]=y*c-v,t[8]=a*h,t[1]=a*p,t[5]=a*d,t[9]=-c,t[2]=v*c-y,t[6]=x+m*c,t[10]=a*u}else if(e.order==="ZXY"){const m=u*d,v=u*p,y=h*d,x=h*p;t[0]=m-x*c,t[4]=-a*p,t[8]=y+v*c,t[1]=v+y*c,t[5]=a*d,t[9]=x-m*c,t[2]=-a*h,t[6]=c,t[10]=a*u}else if(e.order==="ZYX"){const m=a*d,v=a*p,y=c*d,x=c*p;t[0]=u*d,t[4]=y*h-v,t[8]=m*h+x,t[1]=u*p,t[5]=x*h+m,t[9]=v*h-y,t[2]=-h,t[6]=c*u,t[10]=a*u}else if(e.order==="YZX"){const m=a*u,v=a*h,y=c*u,x=c*h;t[0]=u*d,t[4]=x-m*p,t[8]=y*p+v,t[1]=p,t[5]=a*d,t[9]=-c*d,t[2]=-h*d,t[6]=v*p+y,t[10]=m-x*p}else if(e.order==="XZY"){const m=a*u,v=a*h,y=c*u,x=c*h;t[0]=u*d,t[4]=-p,t[8]=h*d,t[1]=m*p+x,t[5]=a*d,t[9]=v*p-y,t[2]=y*p-v,t[6]=c*d,t[10]=x*p+m}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose($y,e,e_)}lookAt(e,t,n){const i=this.elements;return Nn.subVectors(e,t),Nn.lengthSq()===0&&(Nn.z=1),Nn.normalize(),hr.crossVectors(n,Nn),hr.lengthSq()===0&&(Math.abs(n.z)===1?Nn.x+=1e-4:Nn.z+=1e-4,Nn.normalize(),hr.crossVectors(n,Nn)),hr.normalize(),Hl.crossVectors(Nn,hr),i[0]=hr.x,i[4]=Hl.x,i[8]=Nn.x,i[1]=hr.y,i[5]=Hl.y,i[9]=Nn.y,i[2]=hr.z,i[6]=Hl.z,i[10]=Nn.z,this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,r=this.elements,a=n[0],c=n[4],u=n[8],h=n[12],d=n[1],p=n[5],m=n[9],v=n[13],y=n[2],x=n[6],_=n[10],S=n[14],w=n[3],T=n[7],E=n[11],C=n[15],P=i[0],N=i[4],A=i[8],L=i[12],F=i[1],q=i[5],se=i[9],J=i[13],W=i[2],$=i[6],te=i[10],pe=i[14],V=i[3],k=i[7],U=i[11],le=i[15];return r[0]=a*P+c*F+u*W+h*V,r[4]=a*N+c*q+u*$+h*k,r[8]=a*A+c*se+u*te+h*U,r[12]=a*L+c*J+u*pe+h*le,r[1]=d*P+p*F+m*W+v*V,r[5]=d*N+p*q+m*$+v*k,r[9]=d*A+p*se+m*te+v*U,r[13]=d*L+p*J+m*pe+v*le,r[2]=y*P+x*F+_*W+S*V,r[6]=y*N+x*q+_*$+S*k,r[10]=y*A+x*se+_*te+S*U,r[14]=y*L+x*J+_*pe+S*le,r[3]=w*P+T*F+E*W+C*V,r[7]=w*N+T*q+E*$+C*k,r[11]=w*A+T*se+E*te+C*U,r[15]=w*L+T*J+E*pe+C*le,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],r=e[12],a=e[1],c=e[5],u=e[9],h=e[13],d=e[2],p=e[6],m=e[10],v=e[14],y=e[3],x=e[7],_=e[11],S=e[15];return y*(+r*u*p-i*h*p-r*c*m+n*h*m+i*c*v-n*u*v)+x*(+t*u*v-t*h*m+r*a*m-i*a*v+i*h*d-r*u*d)+_*(+t*h*p-t*c*v-r*a*p+n*a*v+r*c*d-n*h*d)+S*(-i*c*d-t*u*p+t*c*m+i*a*p-n*a*m+n*u*d)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],r=e[3],a=e[4],c=e[5],u=e[6],h=e[7],d=e[8],p=e[9],m=e[10],v=e[11],y=e[12],x=e[13],_=e[14],S=e[15],w=p*_*h-x*m*h+x*u*v-c*_*v-p*u*S+c*m*S,T=y*m*h-d*_*h-y*u*v+a*_*v+d*u*S-a*m*S,E=d*x*h-y*p*h+y*c*v-a*x*v-d*c*S+a*p*S,C=y*p*u-d*x*u-y*c*m+a*x*m+d*c*_-a*p*_,P=t*w+n*T+i*E+r*C;if(P===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const N=1/P;return e[0]=w*N,e[1]=(x*m*r-p*_*r-x*i*v+n*_*v+p*i*S-n*m*S)*N,e[2]=(c*_*r-x*u*r+x*i*h-n*_*h-c*i*S+n*u*S)*N,e[3]=(p*u*r-c*m*r-p*i*h+n*m*h+c*i*v-n*u*v)*N,e[4]=T*N,e[5]=(d*_*r-y*m*r+y*i*v-t*_*v-d*i*S+t*m*S)*N,e[6]=(y*u*r-a*_*r-y*i*h+t*_*h+a*i*S-t*u*S)*N,e[7]=(a*m*r-d*u*r+d*i*h-t*m*h-a*i*v+t*u*v)*N,e[8]=E*N,e[9]=(y*p*r-d*x*r-y*n*v+t*x*v+d*n*S-t*p*S)*N,e[10]=(a*x*r-y*c*r+y*n*h-t*x*h-a*n*S+t*c*S)*N,e[11]=(d*c*r-a*p*r-d*n*h+t*p*h+a*n*v-t*c*v)*N,e[12]=C*N,e[13]=(d*x*i-y*p*i+y*n*m-t*x*m-d*n*_+t*p*_)*N,e[14]=(y*c*i-a*x*i-y*n*u+t*x*u+a*n*_-t*c*_)*N,e[15]=(a*p*i-d*c*i+d*n*u-t*p*u-a*n*m+t*c*m)*N,this}scale(e){const t=this.elements,n=e.x,i=e.y,r=e.z;return t[0]*=n,t[4]*=i,t[8]*=r,t[1]*=n,t[5]*=i,t[9]*=r,t[2]*=n,t[6]*=i,t[10]*=r,t[3]*=n,t[7]*=i,t[11]*=r,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),r=1-n,a=e.x,c=e.y,u=e.z,h=r*a,d=r*c;return this.set(h*a+n,h*c-i*u,h*u+i*c,0,h*c+i*u,d*c+n,d*u-i*a,0,h*u-i*c,d*u+i*a,r*u*u+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,r,a){return this.set(1,n,r,0,e,1,a,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,r=t._x,a=t._y,c=t._z,u=t._w,h=r+r,d=a+a,p=c+c,m=r*h,v=r*d,y=r*p,x=a*d,_=a*p,S=c*p,w=u*h,T=u*d,E=u*p,C=n.x,P=n.y,N=n.z;return i[0]=(1-(x+S))*C,i[1]=(v+E)*C,i[2]=(y-T)*C,i[3]=0,i[4]=(v-E)*P,i[5]=(1-(m+S))*P,i[6]=(_+w)*P,i[7]=0,i[8]=(y+T)*N,i[9]=(_-w)*N,i[10]=(1-(m+x))*N,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let r=ks.set(i[0],i[1],i[2]).length();const a=ks.set(i[4],i[5],i[6]).length(),c=ks.set(i[8],i[9],i[10]).length();this.determinant()<0&&(r=-r),e.x=i[12],e.y=i[13],e.z=i[14],ui.copy(this);const h=1/r,d=1/a,p=1/c;return ui.elements[0]*=h,ui.elements[1]*=h,ui.elements[2]*=h,ui.elements[4]*=d,ui.elements[5]*=d,ui.elements[6]*=d,ui.elements[8]*=p,ui.elements[9]*=p,ui.elements[10]*=p,t.setFromRotationMatrix(ui),n.x=r,n.y=a,n.z=c,this}makePerspective(e,t,n,i,r,a){const c=this.elements,u=2*r/(t-e),h=2*r/(n-i),d=(t+e)/(t-e),p=(n+i)/(n-i),m=-(a+r)/(a-r),v=-2*a*r/(a-r);return c[0]=u,c[4]=0,c[8]=d,c[12]=0,c[1]=0,c[5]=h,c[9]=p,c[13]=0,c[2]=0,c[6]=0,c[10]=m,c[14]=v,c[3]=0,c[7]=0,c[11]=-1,c[15]=0,this}makeOrthographic(e,t,n,i,r,a){const c=this.elements,u=1/(t-e),h=1/(n-i),d=1/(a-r),p=(t+e)*u,m=(n+i)*h,v=(a+r)*d;return c[0]=2*u,c[4]=0,c[8]=0,c[12]=-p,c[1]=0,c[5]=2*h,c[9]=0,c[13]=-m,c[2]=0,c[6]=0,c[10]=-2*d,c[14]=-v,c[3]=0,c[7]=0,c[11]=0,c[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}const ks=new I,ui=new ot,$y=new I(0,0,0),e_=new I(1,1,1),hr=new I,Hl=new I,Nn=new I,um=new ot,hm=new vn;class fo{constructor(e=0,t=0,n=0,i=fo.DefaultOrder){this.isEuler=!0,this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,r=i[0],a=i[4],c=i[8],u=i[1],h=i[5],d=i[9],p=i[2],m=i[6],v=i[10];switch(t){case"XYZ":this._y=Math.asin(qt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-d,v),this._z=Math.atan2(-a,r)):(this._x=Math.atan2(m,h),this._z=0);break;case"YXZ":this._x=Math.asin(-qt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(c,v),this._z=Math.atan2(u,h)):(this._y=Math.atan2(-p,r),this._z=0);break;case"ZXY":this._x=Math.asin(qt(m,-1,1)),Math.abs(m)<.9999999?(this._y=Math.atan2(-p,v),this._z=Math.atan2(-a,h)):(this._y=0,this._z=Math.atan2(u,r));break;case"ZYX":this._y=Math.asin(-qt(p,-1,1)),Math.abs(p)<.9999999?(this._x=Math.atan2(m,v),this._z=Math.atan2(u,r)):(this._x=0,this._z=Math.atan2(-a,h));break;case"YZX":this._z=Math.asin(qt(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(-d,h),this._y=Math.atan2(-p,r)):(this._x=0,this._y=Math.atan2(c,v));break;case"XZY":this._z=Math.asin(-qt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(m,h),this._y=Math.atan2(c,r)):(this._x=Math.atan2(-d,v),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return um.makeRotationFromQuaternion(e),this.setFromRotationMatrix(um,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return hm.setFromEuler(this),this.setFromQuaternion(hm,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}toVector3(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")}}fo.DefaultOrder="XYZ";fo.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class ls{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let t_=0;const fm=new I,Us=new vn,Bi=new ot,Gl=new I,Vo=new I,n_=new I,i_=new vn,dm=new I(1,0,0),pm=new I(0,1,0),mm=new I(0,0,1),r_={type:"added"},gm={type:"removed"};class St extends Ai{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:t_++}),this.uuid=kn(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=St.DefaultUp.clone();const e=new I,t=new fo,n=new vn,i=new I(1,1,1);function r(){n.setFromEuler(t,!1)}function a(){t.setFromQuaternion(n,void 0,!1)}t._onChange(r),n._onChange(a),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new ot},normalMatrix:{value:new Ln}}),this.matrix=new ot,this.matrixWorld=new ot,this.matrixAutoUpdate=St.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.matrixWorldAutoUpdate=St.DefaultMatrixWorldAutoUpdate,this.layers=new ls,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return Us.setFromAxisAngle(e,t),this.quaternion.multiply(Us),this}rotateOnWorldAxis(e,t){return Us.setFromAxisAngle(e,t),this.quaternion.premultiply(Us),this}rotateX(e){return this.rotateOnAxis(dm,e)}rotateY(e){return this.rotateOnAxis(pm,e)}rotateZ(e){return this.rotateOnAxis(mm,e)}translateOnAxis(e,t){return fm.copy(e).applyQuaternion(this.quaternion),this.position.add(fm.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(dm,e)}translateY(e){return this.translateOnAxis(pm,e)}translateZ(e){return this.translateOnAxis(mm,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(Bi.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?Gl.copy(e):Gl.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),Vo.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Bi.lookAt(Vo,Gl,this.up):Bi.lookAt(Gl,Vo,this.up),this.quaternion.setFromRotationMatrix(Bi),i&&(Bi.extractRotation(i.matrixWorld),Us.setFromRotationMatrix(Bi),this.quaternion.premultiply(Us.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(r_)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(gm)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(gm)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),Bi.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),Bi.multiply(e.parent.matrixWorld)),e.applyMatrix4(Bi),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const a=this.children[n].getObjectByProperty(e,t);if(a!==void 0)return a}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Vo,e,n_),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Vo,i_,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++){const r=t[n];(r.matrixWorldAutoUpdate===!0||e===!0)&&r.updateMatrixWorld(e)}}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.matrixWorldAutoUpdate===!0&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let r=0,a=i.length;r<a;r++){const c=i[r];c.matrixWorldAutoUpdate===!0&&c.updateWorldMatrix(!1,!0)}}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function r(c,u){return c[u.uuid]===void 0&&(c[u.uuid]=u.toJSON(e)),u.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=r(e.geometries,this.geometry);const c=this.geometry.parameters;if(c!==void 0&&c.shapes!==void 0){const u=c.shapes;if(Array.isArray(u))for(let h=0,d=u.length;h<d;h++){const p=u[h];r(e.shapes,p)}else r(e.shapes,u)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(r(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const c=[];for(let u=0,h=this.material.length;u<h;u++)c.push(r(e.materials,this.material[u]));i.material=c}else i.material=r(e.materials,this.material);if(this.children.length>0){i.children=[];for(let c=0;c<this.children.length;c++)i.children.push(this.children[c].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let c=0;c<this.animations.length;c++){const u=this.animations[c];i.animations.push(r(e.animations,u))}}if(t){const c=a(e.geometries),u=a(e.materials),h=a(e.textures),d=a(e.images),p=a(e.shapes),m=a(e.skeletons),v=a(e.animations),y=a(e.nodes);c.length>0&&(n.geometries=c),u.length>0&&(n.materials=u),h.length>0&&(n.textures=h),d.length>0&&(n.images=d),p.length>0&&(n.shapes=p),m.length>0&&(n.skeletons=m),v.length>0&&(n.animations=v),y.length>0&&(n.nodes=y)}return n.object=i,n;function a(c){const u=[];for(const h in c){const d=c[h];delete d.metadata,u.push(d)}return u}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.matrixWorldAutoUpdate=e.matrixWorldAutoUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}St.DefaultUp=new I(0,1,0);St.DefaultMatrixAutoUpdate=!0;St.DefaultMatrixWorldAutoUpdate=!0;const hi=new I,Vi=new I,gh=new I,Hi=new I,Bs=new I,Vs=new I,vm=new I,vh=new I,xh=new I,yh=new I;class ni{constructor(e=new I,t=new I,n=new I){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),hi.subVectors(e,t),i.cross(hi);const r=i.lengthSq();return r>0?i.multiplyScalar(1/Math.sqrt(r)):i.set(0,0,0)}static getBarycoord(e,t,n,i,r){hi.subVectors(i,t),Vi.subVectors(n,t),gh.subVectors(e,t);const a=hi.dot(hi),c=hi.dot(Vi),u=hi.dot(gh),h=Vi.dot(Vi),d=Vi.dot(gh),p=a*h-c*c;if(p===0)return r.set(-2,-1,-1);const m=1/p,v=(h*u-c*d)*m,y=(a*d-c*u)*m;return r.set(1-v-y,y,v)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Hi),Hi.x>=0&&Hi.y>=0&&Hi.x+Hi.y<=1}static getUV(e,t,n,i,r,a,c,u){return this.getBarycoord(e,t,n,i,Hi),u.set(0,0),u.addScaledVector(r,Hi.x),u.addScaledVector(a,Hi.y),u.addScaledVector(c,Hi.z),u}static isFrontFacing(e,t,n,i){return hi.subVectors(n,t),Vi.subVectors(e,t),hi.cross(Vi).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return hi.subVectors(this.c,this.b),Vi.subVectors(this.a,this.b),hi.cross(Vi).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return ni.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return ni.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,r){return ni.getUV(e,this.a,this.b,this.c,t,n,i,r)}containsPoint(e){return ni.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return ni.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,r=this.c;let a,c;Bs.subVectors(i,n),Vs.subVectors(r,n),vh.subVectors(e,n);const u=Bs.dot(vh),h=Vs.dot(vh);if(u<=0&&h<=0)return t.copy(n);xh.subVectors(e,i);const d=Bs.dot(xh),p=Vs.dot(xh);if(d>=0&&p<=d)return t.copy(i);const m=u*p-d*h;if(m<=0&&u>=0&&d<=0)return a=u/(u-d),t.copy(n).addScaledVector(Bs,a);yh.subVectors(e,r);const v=Bs.dot(yh),y=Vs.dot(yh);if(y>=0&&v<=y)return t.copy(r);const x=v*h-u*y;if(x<=0&&h>=0&&y<=0)return c=h/(h-y),t.copy(n).addScaledVector(Vs,c);const _=d*y-v*p;if(_<=0&&p-d>=0&&v-y>=0)return vm.subVectors(r,i),c=(p-d)/(p-d+(v-y)),t.copy(i).addScaledVector(vm,c);const S=1/(_+x+m);return a=x*S,c=m*S,t.copy(n).addScaledVector(Bs,a).addScaledVector(Vs,c)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let s_=0;class un extends Ai{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:s_++}),this.uuid=kn(),this.name="",this.type="Material",this.blending=rs,this.side=us,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Bf,this.blendDst=Vf,this.blendEquation=Qr,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Ic,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=O0,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Pc,this.stencilZFail=Pc,this.stencilZPass=Pc,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.iridescence!==void 0&&(n.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(n.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(n.iridescenceMap=this.iridescenceMap.toJSON(e).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(n.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(e).uuid),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==rs&&(n.blending=this.blending),this.side!==us&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),this.fog===!1&&(n.fog=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(r){const a=[];for(const c in r){const u=r[c];delete u.metadata,a.push(u)}return a}if(t){const r=i(e.textures),a=i(e.images);r.length>0&&(n.textures=r),a.length>0&&(n.images=a)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let r=0;r!==i;++r)n[r]=t[r].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}class Ar extends un{constructor(e){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new De(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ya,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}const jt=new I,Wl=new fe;class Pt{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=la,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,r=this.itemSize;i<r;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)Wl.fromBufferAttribute(this,t),Wl.applyMatrix3(e),this.setXY(t,Wl.x,Wl.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)jt.fromBufferAttribute(this,t),jt.applyMatrix3(e),this.setXYZ(t,jt.x,jt.y,jt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)jt.fromBufferAttribute(this,t),jt.applyMatrix4(e),this.setXYZ(t,jt.x,jt.y,jt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)jt.fromBufferAttribute(this,t),jt.applyNormalMatrix(e),this.setXYZ(t,jt.x,jt.y,jt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)jt.fromBufferAttribute(this,t),jt.transformDirection(e),this.setXYZ(t,jt.x,jt.y,jt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){let t=this.array[e*this.itemSize];return this.normalized&&(t=Yi(t,this.array)),t}setX(e,t){return this.normalized&&(t=Ct(t,this.array)),this.array[e*this.itemSize]=t,this}getY(e){let t=this.array[e*this.itemSize+1];return this.normalized&&(t=Yi(t,this.array)),t}setY(e,t){return this.normalized&&(t=Ct(t,this.array)),this.array[e*this.itemSize+1]=t,this}getZ(e){let t=this.array[e*this.itemSize+2];return this.normalized&&(t=Yi(t,this.array)),t}setZ(e,t){return this.normalized&&(t=Ct(t,this.array)),this.array[e*this.itemSize+2]=t,this}getW(e){let t=this.array[e*this.itemSize+3];return this.normalized&&(t=Yi(t,this.array)),t}setW(e,t){return this.normalized&&(t=Ct(t,this.array)),this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.normalized&&(t=Ct(t,this.array),n=Ct(n,this.array)),this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.normalized&&(t=Ct(t,this.array),n=Ct(n,this.array),i=Ct(i,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e*=this.itemSize,this.normalized&&(t=Ct(t,this.array),n=Ct(n,this.array),i=Ct(i,this.array),r=Ct(r,this.array)),this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=r,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==la&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}copyColorsArray(){console.error("THREE.BufferAttribute: copyColorsArray() was removed in r144.")}copyVector2sArray(){console.error("THREE.BufferAttribute: copyVector2sArray() was removed in r144.")}copyVector3sArray(){console.error("THREE.BufferAttribute: copyVector3sArray() was removed in r144.")}copyVector4sArray(){console.error("THREE.BufferAttribute: copyVector4sArray() was removed in r144.")}}class o_ extends Pt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class a_ extends Pt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class l_ extends Pt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class c_ extends Pt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class Zf extends Pt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class u_ extends Pt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class jf extends Pt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class h_ extends Pt{constructor(e,t,n){super(new Uint16Array(e),t,n),this.isFloat16BufferAttribute=!0}}class Fe extends Pt{constructor(e,t,n){super(new Float32Array(e),t,n)}}class f_ extends Pt{constructor(e,t,n){super(new Float64Array(e),t,n)}}let d_=0;const $n=new ot,_h=new St,Hs=new I,On=new ms,Ho=new ms,an=new I;class ct extends Ai{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:d_++}),this.uuid=kn(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(k0(e)?jf:Zf)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const r=new Ln().getNormalMatrix(e);n.applyNormalMatrix(r),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return $n.makeRotationFromQuaternion(e),this.applyMatrix4($n),this}rotateX(e){return $n.makeRotationX(e),this.applyMatrix4($n),this}rotateY(e){return $n.makeRotationY(e),this.applyMatrix4($n),this}rotateZ(e){return $n.makeRotationZ(e),this.applyMatrix4($n),this}translate(e,t,n){return $n.makeTranslation(e,t,n),this.applyMatrix4($n),this}scale(e,t,n){return $n.makeScale(e,t,n),this.applyMatrix4($n),this}lookAt(e){return _h.lookAt(e),_h.updateMatrix(),this.applyMatrix4(_h.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Hs).negate(),this.translate(Hs.x,Hs.y,Hs.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const r=e[n];t.push(r.x,r.y,r.z||0)}return this.setAttribute("position",new Fe(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new ms);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new I(-1/0,-1/0,-1/0),new I(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const r=t[n];On.setFromBufferAttribute(r),this.morphTargetsRelative?(an.addVectors(this.boundingBox.min,On.min),this.boundingBox.expandByPoint(an),an.addVectors(this.boundingBox.max,On.max),this.boundingBox.expandByPoint(an)):(this.boundingBox.expandByPoint(On.min),this.boundingBox.expandByPoint(On.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new gs);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new I,1/0);return}if(e){const n=this.boundingSphere.center;if(On.setFromBufferAttribute(e),t)for(let r=0,a=t.length;r<a;r++){const c=t[r];Ho.setFromBufferAttribute(c),this.morphTargetsRelative?(an.addVectors(On.min,Ho.min),On.expandByPoint(an),an.addVectors(On.max,Ho.max),On.expandByPoint(an)):(On.expandByPoint(Ho.min),On.expandByPoint(Ho.max))}On.getCenter(n);let i=0;for(let r=0,a=e.count;r<a;r++)an.fromBufferAttribute(e,r),i=Math.max(i,n.distanceToSquared(an));if(t)for(let r=0,a=t.length;r<a;r++){const c=t[r],u=this.morphTargetsRelative;for(let h=0,d=c.count;h<d;h++)an.fromBufferAttribute(c,h),u&&(Hs.fromBufferAttribute(e,h),an.add(Hs)),i=Math.max(i,n.distanceToSquared(an))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,r=t.normal.array,a=t.uv.array,c=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new Pt(new Float32Array(4*c),4));const u=this.getAttribute("tangent").array,h=[],d=[];for(let F=0;F<c;F++)h[F]=new I,d[F]=new I;const p=new I,m=new I,v=new I,y=new fe,x=new fe,_=new fe,S=new I,w=new I;function T(F,q,se){p.fromArray(i,F*3),m.fromArray(i,q*3),v.fromArray(i,se*3),y.fromArray(a,F*2),x.fromArray(a,q*2),_.fromArray(a,se*2),m.sub(p),v.sub(p),x.sub(y),_.sub(y);const J=1/(x.x*_.y-_.x*x.y);!isFinite(J)||(S.copy(m).multiplyScalar(_.y).addScaledVector(v,-x.y).multiplyScalar(J),w.copy(v).multiplyScalar(x.x).addScaledVector(m,-_.x).multiplyScalar(J),h[F].add(S),h[q].add(S),h[se].add(S),d[F].add(w),d[q].add(w),d[se].add(w))}let E=this.groups;E.length===0&&(E=[{start:0,count:n.length}]);for(let F=0,q=E.length;F<q;++F){const se=E[F],J=se.start,W=se.count;for(let $=J,te=J+W;$<te;$+=3)T(n[$+0],n[$+1],n[$+2])}const C=new I,P=new I,N=new I,A=new I;function L(F){N.fromArray(r,F*3),A.copy(N);const q=h[F];C.copy(q),C.sub(N.multiplyScalar(N.dot(q))).normalize(),P.crossVectors(A,q);const J=P.dot(d[F])<0?-1:1;u[F*4]=C.x,u[F*4+1]=C.y,u[F*4+2]=C.z,u[F*4+3]=J}for(let F=0,q=E.length;F<q;++F){const se=E[F],J=se.start,W=se.count;for(let $=J,te=J+W;$<te;$+=3)L(n[$+0]),L(n[$+1]),L(n[$+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new Pt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let m=0,v=n.count;m<v;m++)n.setXYZ(m,0,0,0);const i=new I,r=new I,a=new I,c=new I,u=new I,h=new I,d=new I,p=new I;if(e)for(let m=0,v=e.count;m<v;m+=3){const y=e.getX(m+0),x=e.getX(m+1),_=e.getX(m+2);i.fromBufferAttribute(t,y),r.fromBufferAttribute(t,x),a.fromBufferAttribute(t,_),d.subVectors(a,r),p.subVectors(i,r),d.cross(p),c.fromBufferAttribute(n,y),u.fromBufferAttribute(n,x),h.fromBufferAttribute(n,_),c.add(d),u.add(d),h.add(d),n.setXYZ(y,c.x,c.y,c.z),n.setXYZ(x,u.x,u.y,u.z),n.setXYZ(_,h.x,h.y,h.z)}else for(let m=0,v=t.count;m<v;m+=3)i.fromBufferAttribute(t,m+0),r.fromBufferAttribute(t,m+1),a.fromBufferAttribute(t,m+2),d.subVectors(a,r),p.subVectors(i,r),d.cross(p),n.setXYZ(m+0,d.x,d.y,d.z),n.setXYZ(m+1,d.x,d.y,d.z),n.setXYZ(m+2,d.x,d.y,d.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(){return console.error("THREE.BufferGeometry.merge() has been removed. Use THREE.BufferGeometryUtils.mergeBufferGeometries() instead."),this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)an.fromBufferAttribute(e,t),an.normalize(),e.setXYZ(t,an.x,an.y,an.z)}toNonIndexed(){function e(c,u){const h=c.array,d=c.itemSize,p=c.normalized,m=new h.constructor(u.length*d);let v=0,y=0;for(let x=0,_=u.length;x<_;x++){c.isInterleavedBufferAttribute?v=u[x]*c.data.stride+c.offset:v=u[x]*d;for(let S=0;S<d;S++)m[y++]=h[v++]}return new Pt(m,d,p)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new ct,n=this.index.array,i=this.attributes;for(const c in i){const u=i[c],h=e(u,n);t.setAttribute(c,h)}const r=this.morphAttributes;for(const c in r){const u=[],h=r[c];for(let d=0,p=h.length;d<p;d++){const m=h[d],v=e(m,n);u.push(v)}t.morphAttributes[c]=u}t.morphTargetsRelative=this.morphTargetsRelative;const a=this.groups;for(let c=0,u=a.length;c<u;c++){const h=a[c];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const u=this.parameters;for(const h in u)u[h]!==void 0&&(e[h]=u[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const u in n){const h=n[u];e.data.attributes[u]=h.toJSON(e.data)}const i={};let r=!1;for(const u in this.morphAttributes){const h=this.morphAttributes[u],d=[];for(let p=0,m=h.length;p<m;p++){const v=h[p];d.push(v.toJSON(e.data))}d.length>0&&(i[u]=d,r=!0)}r&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const a=this.groups;a.length>0&&(e.data.groups=JSON.parse(JSON.stringify(a)));const c=this.boundingSphere;return c!==null&&(e.data.boundingSphere={center:c.center.toArray(),radius:c.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const d=i[h];this.setAttribute(h,d.clone(t))}const r=e.morphAttributes;for(const h in r){const d=[],p=r[h];for(let m=0,v=p.length;m<v;m++)d.push(p[m].clone(t));this.morphAttributes[h]=d}this.morphTargetsRelative=e.morphTargetsRelative;const a=e.groups;for(let h=0,d=a.length;h<d;h++){const p=a[h];this.addGroup(p.start,p.count,p.materialIndex)}const c=e.boundingBox;c!==null&&(this.boundingBox=c.clone());const u=e.boundingSphere;return u!==null&&(this.boundingSphere=u.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}const xm=new ot,Gs=new Ma,Mh=new gs,fr=new I,dr=new I,pr=new I,Sh=new I,wh=new I,bh=new I,Xl=new I,ql=new I,Yl=new I,Zl=new fe,jl=new fe,Jl=new fe,Th=new I,Ql=new I;class cn extends St{constructor(e=new ct,t=new Ar){super(),this.isMesh=!0,this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const c=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=r}}}}raycast(e,t){const n=this.geometry,i=this.material,r=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),Mh.copy(n.boundingSphere),Mh.applyMatrix4(r),e.ray.intersectsSphere(Mh)===!1)||(xm.copy(r).invert(),Gs.copy(e.ray).applyMatrix4(xm),n.boundingBox!==null&&Gs.intersectsBox(n.boundingBox)===!1))return;let a;const c=n.index,u=n.attributes.position,h=n.morphAttributes.position,d=n.morphTargetsRelative,p=n.attributes.uv,m=n.attributes.uv2,v=n.groups,y=n.drawRange;if(c!==null)if(Array.isArray(i))for(let x=0,_=v.length;x<_;x++){const S=v[x],w=i[S.materialIndex],T=Math.max(S.start,y.start),E=Math.min(c.count,Math.min(S.start+S.count,y.start+y.count));for(let C=T,P=E;C<P;C+=3){const N=c.getX(C),A=c.getX(C+1),L=c.getX(C+2);a=Kl(this,w,e,Gs,u,h,d,p,m,N,A,L),a&&(a.faceIndex=Math.floor(C/3),a.face.materialIndex=S.materialIndex,t.push(a))}}else{const x=Math.max(0,y.start),_=Math.min(c.count,y.start+y.count);for(let S=x,w=_;S<w;S+=3){const T=c.getX(S),E=c.getX(S+1),C=c.getX(S+2);a=Kl(this,i,e,Gs,u,h,d,p,m,T,E,C),a&&(a.faceIndex=Math.floor(S/3),t.push(a))}}else if(u!==void 0)if(Array.isArray(i))for(let x=0,_=v.length;x<_;x++){const S=v[x],w=i[S.materialIndex],T=Math.max(S.start,y.start),E=Math.min(u.count,Math.min(S.start+S.count,y.start+y.count));for(let C=T,P=E;C<P;C+=3){const N=C,A=C+1,L=C+2;a=Kl(this,w,e,Gs,u,h,d,p,m,N,A,L),a&&(a.faceIndex=Math.floor(C/3),a.face.materialIndex=S.materialIndex,t.push(a))}}else{const x=Math.max(0,y.start),_=Math.min(u.count,y.start+y.count);for(let S=x,w=_;S<w;S+=3){const T=S,E=S+1,C=S+2;a=Kl(this,i,e,Gs,u,h,d,p,m,T,E,C),a&&(a.faceIndex=Math.floor(S/3),t.push(a))}}}}function p_(l,e,t,n,i,r,a,c){let u;if(e.side===Fn?u=n.intersectTriangle(a,r,i,!0,c):u=n.intersectTriangle(i,r,a,e.side!==Xi,c),u===null)return null;Ql.copy(c),Ql.applyMatrix4(l.matrixWorld);const h=t.ray.origin.distanceTo(Ql);return h<t.near||h>t.far?null:{distance:h,point:Ql.clone(),object:l}}function Kl(l,e,t,n,i,r,a,c,u,h,d,p){fr.fromBufferAttribute(i,h),dr.fromBufferAttribute(i,d),pr.fromBufferAttribute(i,p);const m=l.morphTargetInfluences;if(r&&m){Xl.set(0,0,0),ql.set(0,0,0),Yl.set(0,0,0);for(let y=0,x=r.length;y<x;y++){const _=m[y],S=r[y];_!==0&&(Sh.fromBufferAttribute(S,h),wh.fromBufferAttribute(S,d),bh.fromBufferAttribute(S,p),a?(Xl.addScaledVector(Sh,_),ql.addScaledVector(wh,_),Yl.addScaledVector(bh,_)):(Xl.addScaledVector(Sh.sub(fr),_),ql.addScaledVector(wh.sub(dr),_),Yl.addScaledVector(bh.sub(pr),_)))}fr.add(Xl),dr.add(ql),pr.add(Yl)}l.isSkinnedMesh&&(l.boneTransform(h,fr),l.boneTransform(d,dr),l.boneTransform(p,pr));const v=p_(l,e,t,n,fr,dr,pr,Th);if(v){c&&(Zl.fromBufferAttribute(c,h),jl.fromBufferAttribute(c,d),Jl.fromBufferAttribute(c,p),v.uv=ni.getUV(Th,fr,dr,pr,Zl,jl,Jl,new fe)),u&&(Zl.fromBufferAttribute(u,h),jl.fromBufferAttribute(u,d),Jl.fromBufferAttribute(u,p),v.uv2=ni.getUV(Th,fr,dr,pr,Zl,jl,Jl,new fe));const y={a:h,b:d,c:p,normal:new I,materialIndex:0};ni.getNormal(fr,dr,pr,y.normal),v.face=y}return v}class Cr extends ct{constructor(e=1,t=1,n=1,i=1,r=1,a=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:r,depthSegments:a};const c=this;i=Math.floor(i),r=Math.floor(r),a=Math.floor(a);const u=[],h=[],d=[],p=[];let m=0,v=0;y("z","y","x",-1,-1,n,t,e,a,r,0),y("z","y","x",1,-1,n,t,-e,a,r,1),y("x","z","y",1,1,e,n,t,i,a,2),y("x","z","y",1,-1,e,n,-t,i,a,3),y("x","y","z",1,-1,e,t,n,i,r,4),y("x","y","z",-1,-1,e,t,-n,i,r,5),this.setIndex(u),this.setAttribute("position",new Fe(h,3)),this.setAttribute("normal",new Fe(d,3)),this.setAttribute("uv",new Fe(p,2));function y(x,_,S,w,T,E,C,P,N,A,L){const F=E/N,q=C/A,se=E/2,J=C/2,W=P/2,$=N+1,te=A+1;let pe=0,V=0;const k=new I;for(let U=0;U<te;U++){const le=U*q-J;for(let re=0;re<$;re++){const me=re*F-se;k[x]=me*w,k[_]=le*T,k[S]=W,h.push(k.x,k.y,k.z),k[x]=0,k[_]=0,k[S]=P>0?1:-1,d.push(k.x,k.y,k.z),p.push(re/N),p.push(1-U/A),pe+=1}}for(let U=0;U<A;U++)for(let le=0;le<N;le++){const re=m+le+$*U,me=m+le+$*(U+1),Ee=m+(le+1)+$*(U+1),Ve=m+(le+1)+$*U;u.push(re,me,Ve),u.push(me,Ee,Ve),V+=6}c.addGroup(v,V,L),v+=V,m+=pe}}static fromJSON(e){return new Cr(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function lo(l){const e={};for(const t in l){e[t]={};for(const n in l[t]){const i=l[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function gn(l){const e={};for(let t=0;t<l.length;t++){const n=lo(l[t]);for(const i in n)e[i]=n[i]}return e}function m_(l){const e=[];for(let t=0;t<l.length;t++)e.push(l[t].clone());return e}const B0={clone:lo,merge:gn};var g_=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,v_=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class Ei extends un{constructor(e){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=g_,this.fragmentShader=v_,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&this.setValues(e)}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=lo(e.uniforms),this.uniformsGroups=m_(e.uniformsGroups),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.fog=e.fog,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const a=this.uniforms[i].value;a&&a.isTexture?t.uniforms[i]={type:"t",value:a.toJSON(e).uuid}:a&&a.isColor?t.uniforms[i]={type:"c",value:a.getHex()}:a&&a.isVector2?t.uniforms[i]={type:"v2",value:a.toArray()}:a&&a.isVector3?t.uniforms[i]={type:"v3",value:a.toArray()}:a&&a.isVector4?t.uniforms[i]={type:"v4",value:a.toArray()}:a&&a.isMatrix3?t.uniforms[i]={type:"m3",value:a.toArray()}:a&&a.isMatrix4?t.uniforms[i]={type:"m4",value:a.toArray()}:t.uniforms[i]={value:a}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}class Sa extends St{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new ot,this.projectionMatrix=new ot,this.projectionMatrixInverse=new ot}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}class Ot extends Sa{constructor(e=50,t=1,n=.1,i=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=ca*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(os*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return ca*2*Math.atan(Math.tan(os*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,r,a){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(os*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,r=-.5*i;const a=this.view;if(this.view!==null&&this.view.enabled){const u=a.fullWidth,h=a.fullHeight;r+=a.offsetX*i/u,t-=a.offsetY*n/h,i*=a.width/u,n*=a.height/h}const c=this.filmOffset;c!==0&&(r+=e*c/this.getFilmWidth()),this.projectionMatrix.makePerspective(r,r+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}const Ws=90,Xs=1;class V0 extends St{constructor(e,t,n){super(),this.type="CubeCamera",this.renderTarget=n;const i=new Ot(Ws,Xs,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new I(1,0,0)),this.add(i);const r=new Ot(Ws,Xs,e,t);r.layers=this.layers,r.up.set(0,-1,0),r.lookAt(new I(-1,0,0)),this.add(r);const a=new Ot(Ws,Xs,e,t);a.layers=this.layers,a.up.set(0,0,1),a.lookAt(new I(0,1,0)),this.add(a);const c=new Ot(Ws,Xs,e,t);c.layers=this.layers,c.up.set(0,0,-1),c.lookAt(new I(0,-1,0)),this.add(c);const u=new Ot(Ws,Xs,e,t);u.layers=this.layers,u.up.set(0,-1,0),u.lookAt(new I(0,0,1)),this.add(u);const h=new Ot(Ws,Xs,e,t);h.layers=this.layers,h.up.set(0,-1,0),h.lookAt(new I(0,0,-1)),this.add(h)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,r,a,c,u,h]=this.children,d=e.getRenderTarget(),p=e.toneMapping,m=e.xr.enabled;e.toneMapping=di,e.xr.enabled=!1;const v=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,r),e.setRenderTarget(n,2),e.render(t,a),e.setRenderTarget(n,3),e.render(t,c),e.setRenderTarget(n,4),e.render(t,u),n.texture.generateMipmaps=v,e.setRenderTarget(n,5),e.render(t,h),e.setRenderTarget(d),e.toneMapping=p,e.xr.enabled=m,n.texture.needsPMREMUpdate=!0}}class wa extends Qt{constructor(e,t,n,i,r,a,c,u,h,d){e=e!==void 0?e:[],t=t!==void 0?t:Mr,super(e,t,n,i,r,a,c,u,h,d),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}class H0 extends ri{constructor(e,t={}){super(e,e,t),this.isWebGLCubeRenderTarget=!0;const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new wa(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:Xt}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Cr(5,5,5),r=new Ei({name:"CubemapFromEquirect",uniforms:lo(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:Fn,blending:Zi});r.uniforms.tEquirect.value=t;const a=new cn(i,r),c=t.minFilter;return t.minFilter===ps&&(t.minFilter=Xt),new V0(1,10,this).update(e,a),t.minFilter=c,a.geometry.dispose(),a.material.dispose(),this}clear(e,t,n,i){const r=e.getRenderTarget();for(let a=0;a<6;a++)e.setRenderTarget(this,a),e.clear(t,n,i);e.setRenderTarget(r)}}const Eh=new I,x_=new I,y_=new Ln;class gr{constructor(e=new I(1,0,0),t=0){this.isPlane=!0,this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Eh.subVectors(n,t).cross(x_.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(Eh),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const r=-(e.start.dot(this.normal)+this.constant)/i;return r<0||r>1?null:t.copy(n).multiplyScalar(r).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||y_.getNormalMatrix(e),i=this.coplanarPoint(Eh).applyMatrix4(e),r=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(r),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}const qs=new gs,$l=new I;class Wc{constructor(e=new gr,t=new gr,n=new gr,i=new gr,r=new gr,a=new gr){this.planes=[e,t,n,i,r,a]}set(e,t,n,i,r,a){const c=this.planes;return c[0].copy(e),c[1].copy(t),c[2].copy(n),c[3].copy(i),c[4].copy(r),c[5].copy(a),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],r=n[1],a=n[2],c=n[3],u=n[4],h=n[5],d=n[6],p=n[7],m=n[8],v=n[9],y=n[10],x=n[11],_=n[12],S=n[13],w=n[14],T=n[15];return t[0].setComponents(c-i,p-u,x-m,T-_).normalize(),t[1].setComponents(c+i,p+u,x+m,T+_).normalize(),t[2].setComponents(c+r,p+h,x+v,T+S).normalize(),t[3].setComponents(c-r,p-h,x-v,T-S).normalize(),t[4].setComponents(c-a,p-d,x-y,T-w).normalize(),t[5].setComponents(c+a,p+d,x+y,T+w).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),qs.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(qs)}intersectsSprite(e){return qs.center.set(0,0,0),qs.radius=.7071067811865476,qs.applyMatrix4(e.matrixWorld),this.intersectsSphere(qs)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let r=0;r<6;r++)if(t[r].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if($l.x=i.normal.x>0?e.max.x:e.min.x,$l.y=i.normal.y>0?e.max.y:e.min.y,$l.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint($l)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function G0(){let l=null,e=!1,t=null,n=null;function i(r,a){t(r,a),n=l.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=l.requestAnimationFrame(i),e=!0)},stop:function(){l.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(r){t=r},setContext:function(r){l=r}}}function __(l,e){const t=e.isWebGL2,n=new WeakMap;function i(h,d){const p=h.array,m=h.usage,v=l.createBuffer();l.bindBuffer(d,v),l.bufferData(d,p,m),h.onUploadCallback();let y;if(p instanceof Float32Array)y=5126;else if(p instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)y=5131;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else y=5123;else if(p instanceof Int16Array)y=5122;else if(p instanceof Uint32Array)y=5125;else if(p instanceof Int32Array)y=5124;else if(p instanceof Int8Array)y=5120;else if(p instanceof Uint8Array)y=5121;else if(p instanceof Uint8ClampedArray)y=5121;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+p);return{buffer:v,type:y,bytesPerElement:p.BYTES_PER_ELEMENT,version:h.version}}function r(h,d,p){const m=d.array,v=d.updateRange;l.bindBuffer(p,h),v.count===-1?l.bufferSubData(p,0,m):(t?l.bufferSubData(p,v.offset*m.BYTES_PER_ELEMENT,m,v.offset,v.count):l.bufferSubData(p,v.offset*m.BYTES_PER_ELEMENT,m.subarray(v.offset,v.offset+v.count)),v.count=-1)}function a(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function c(h){h.isInterleavedBufferAttribute&&(h=h.data);const d=n.get(h);d&&(l.deleteBuffer(d.buffer),n.delete(h))}function u(h,d){if(h.isGLBufferAttribute){const m=n.get(h);(!m||m.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const p=n.get(h);p===void 0?n.set(h,i(h,d)):p.version<h.version&&(r(p.buffer,h,d),p.version=h.version)}return{get:a,remove:c,update:u}}class po extends ct{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const r=e/2,a=t/2,c=Math.floor(n),u=Math.floor(i),h=c+1,d=u+1,p=e/c,m=t/u,v=[],y=[],x=[],_=[];for(let S=0;S<d;S++){const w=S*m-a;for(let T=0;T<h;T++){const E=T*p-r;y.push(E,-w,0),x.push(0,0,1),_.push(T/c),_.push(1-S/u)}}for(let S=0;S<u;S++)for(let w=0;w<c;w++){const T=w+h*S,E=w+h*(S+1),C=w+1+h*(S+1),P=w+1+h*S;v.push(T,E,P),v.push(E,C,P)}this.setIndex(v),this.setAttribute("position",new Fe(y,3)),this.setAttribute("normal",new Fe(x,3)),this.setAttribute("uv",new Fe(_,2))}static fromJSON(e){return new po(e.width,e.height,e.widthSegments,e.heightSegments)}}var M_=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,S_=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,w_=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,b_=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,T_=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,E_=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,A_="vec3 transformed = vec3( position );",C_=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,P_=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
#ifdef USE_IRIDESCENCE
	vec3 BRDF_GGX_Iridescence( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float iridescence, const in vec3 iridescenceFresnel, const in float roughness ) {
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = mix( F_Schlick( f0, f90, dotVH ), iridescenceFresnel, iridescence );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,L_=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			 return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float R21 = R12;
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,R_=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = dFdx( surf_pos.xyz );
		vec3 vSigmaY = dFdy( surf_pos.xyz );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,I_=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,D_=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,z_=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,N_=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,O_=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,F_=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,k_=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,U_=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,B_=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float luminance( const in vec3 rgb ) {
	const vec3 weights = vec3( 0.2126729, 0.7151522, 0.0721750 );
	return dot( weights, rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,V_=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_v0 0.339
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_v1 0.276
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_v4 0.046
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_v5 0.016
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_v6 0.0038
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,H_=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,G_=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,W_=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,X_=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,q_=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Y_="gl_FragColor = linearToOutputTexel( gl_FragColor );",Z_=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,j_=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,J_=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Q_=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,K_=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,$_=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,e1=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,t1=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,n1=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,i1=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,r1=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,s1=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,o1=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,a1=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,l1=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in GeometricContext geometry, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert
#define Material_LightProbeLOD( material )	(0)`,c1=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,u1=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,h1=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,f1=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,d1=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,p1=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,m1=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,g1=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	#ifdef USE_IRIDESCENCE
		reflectedLight.directSpecular += irradiance * BRDF_GGX_Iridescence( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness );
	#else
		reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	#endif
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,v1=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometry.viewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,x1=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,y1=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,_1=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,M1=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,S1=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,w1=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,b1=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,T1=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,E1=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,A1=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,C1=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,P1=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,L1=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,R1=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,I1=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,D1=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,z1=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,N1=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,O1=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,F1=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,k1=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,U1=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,B1=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,V1=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,H1=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,G1=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,W1=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,X1=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,q1=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Y1=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Z1=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,j1=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,J1=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Q1=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,K1=`#if NUM_SPOT_LIGHT_COORDS > 0
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
  uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,$1=`#if NUM_SPOT_LIGHT_COORDS > 0
  uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
  varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,eM=`#if defined( USE_SHADOWMAP ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_COORDS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,tM=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,nM=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,iM=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	uniform int boneTextureSize;
	mat4 getBoneMatrix( const in float i ) {
		float j = i * 4.0;
		float x = mod( j, float( boneTextureSize ) );
		float y = floor( j / float( boneTextureSize ) );
		float dx = 1.0 / float( boneTextureSize );
		float dy = 1.0 / float( boneTextureSize );
		y = dy * ( y + 0.5 );
		vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
		vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
		vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
		vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
		mat4 bone = mat4( v1, v2, v3, v4 );
		return bone;
	}
#endif`,rM=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,sM=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,oM=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,aM=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,lM=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,cM=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,uM=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmission.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, material.transmission );
#endif`,hM=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,fM=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,dM=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,pM=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,mM=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,gM=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,vM=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,xM=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const yM=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,_M=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,MM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,SM=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,wM=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,bM=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,TM=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,EM=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,AM=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,CM=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,PM=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,LM=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,RM=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,IM=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,DM=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,zM=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,NM=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,OM=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,FM=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,kM=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,UM=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,BM=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,VM=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,HM=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,GM=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,WM=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,XM=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,qM=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,YM=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,ZM=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,jM=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,JM=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,ht={alphamap_fragment:M_,alphamap_pars_fragment:S_,alphatest_fragment:w_,alphatest_pars_fragment:b_,aomap_fragment:T_,aomap_pars_fragment:E_,begin_vertex:A_,beginnormal_vertex:C_,bsdfs:P_,iridescence_fragment:L_,bumpmap_pars_fragment:R_,clipping_planes_fragment:I_,clipping_planes_pars_fragment:D_,clipping_planes_pars_vertex:z_,clipping_planes_vertex:N_,color_fragment:O_,color_pars_fragment:F_,color_pars_vertex:k_,color_vertex:U_,common:B_,cube_uv_reflection_fragment:V_,defaultnormal_vertex:H_,displacementmap_pars_vertex:G_,displacementmap_vertex:W_,emissivemap_fragment:X_,emissivemap_pars_fragment:q_,encodings_fragment:Y_,encodings_pars_fragment:Z_,envmap_fragment:j_,envmap_common_pars_fragment:J_,envmap_pars_fragment:Q_,envmap_pars_vertex:K_,envmap_physical_pars_fragment:u1,envmap_vertex:$_,fog_vertex:e1,fog_pars_vertex:t1,fog_fragment:n1,fog_pars_fragment:i1,gradientmap_pars_fragment:r1,lightmap_fragment:s1,lightmap_pars_fragment:o1,lights_lambert_fragment:a1,lights_lambert_pars_fragment:l1,lights_pars_begin:c1,lights_toon_fragment:h1,lights_toon_pars_fragment:f1,lights_phong_fragment:d1,lights_phong_pars_fragment:p1,lights_physical_fragment:m1,lights_physical_pars_fragment:g1,lights_fragment_begin:v1,lights_fragment_maps:x1,lights_fragment_end:y1,logdepthbuf_fragment:_1,logdepthbuf_pars_fragment:M1,logdepthbuf_pars_vertex:S1,logdepthbuf_vertex:w1,map_fragment:b1,map_pars_fragment:T1,map_particle_fragment:E1,map_particle_pars_fragment:A1,metalnessmap_fragment:C1,metalnessmap_pars_fragment:P1,morphcolor_vertex:L1,morphnormal_vertex:R1,morphtarget_pars_vertex:I1,morphtarget_vertex:D1,normal_fragment_begin:z1,normal_fragment_maps:N1,normal_pars_fragment:O1,normal_pars_vertex:F1,normal_vertex:k1,normalmap_pars_fragment:U1,clearcoat_normal_fragment_begin:B1,clearcoat_normal_fragment_maps:V1,clearcoat_pars_fragment:H1,iridescence_pars_fragment:G1,output_fragment:W1,packing:X1,premultiplied_alpha_fragment:q1,project_vertex:Y1,dithering_fragment:Z1,dithering_pars_fragment:j1,roughnessmap_fragment:J1,roughnessmap_pars_fragment:Q1,shadowmap_pars_fragment:K1,shadowmap_pars_vertex:$1,shadowmap_vertex:eM,shadowmask_pars_fragment:tM,skinbase_vertex:nM,skinning_pars_vertex:iM,skinning_vertex:rM,skinnormal_vertex:sM,specularmap_fragment:oM,specularmap_pars_fragment:aM,tonemapping_fragment:lM,tonemapping_pars_fragment:cM,transmission_fragment:uM,transmission_pars_fragment:hM,uv_pars_fragment:fM,uv_pars_vertex:dM,uv_vertex:pM,uv2_pars_fragment:mM,uv2_pars_vertex:gM,uv2_vertex:vM,worldpos_vertex:xM,background_vert:yM,background_frag:_M,cube_vert:MM,cube_frag:SM,depth_vert:wM,depth_frag:bM,distanceRGBA_vert:TM,distanceRGBA_frag:EM,equirect_vert:AM,equirect_frag:CM,linedashed_vert:PM,linedashed_frag:LM,meshbasic_vert:RM,meshbasic_frag:IM,meshlambert_vert:DM,meshlambert_frag:zM,meshmatcap_vert:NM,meshmatcap_frag:OM,meshnormal_vert:FM,meshnormal_frag:kM,meshphong_vert:UM,meshphong_frag:BM,meshphysical_vert:VM,meshphysical_frag:HM,meshtoon_vert:GM,meshtoon_frag:WM,points_vert:XM,points_frag:qM,shadow_vert:YM,shadow_frag:ZM,sprite_vert:jM,sprite_frag:JM},we={common:{diffuse:{value:new De(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Ln},uv2Transform:{value:new Ln},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new fe(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new De(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new De(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Ln}},sprite:{diffuse:{value:new De(16777215)},opacity:{value:1},center:{value:new fe(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Ln}}},fi={basic:{uniforms:gn([we.common,we.specularmap,we.envmap,we.aomap,we.lightmap,we.fog]),vertexShader:ht.meshbasic_vert,fragmentShader:ht.meshbasic_frag},lambert:{uniforms:gn([we.common,we.specularmap,we.envmap,we.aomap,we.lightmap,we.emissivemap,we.bumpmap,we.normalmap,we.displacementmap,we.fog,we.lights,{emissive:{value:new De(0)}}]),vertexShader:ht.meshlambert_vert,fragmentShader:ht.meshlambert_frag},phong:{uniforms:gn([we.common,we.specularmap,we.envmap,we.aomap,we.lightmap,we.emissivemap,we.bumpmap,we.normalmap,we.displacementmap,we.fog,we.lights,{emissive:{value:new De(0)},specular:{value:new De(1118481)},shininess:{value:30}}]),vertexShader:ht.meshphong_vert,fragmentShader:ht.meshphong_frag},standard:{uniforms:gn([we.common,we.envmap,we.aomap,we.lightmap,we.emissivemap,we.bumpmap,we.normalmap,we.displacementmap,we.roughnessmap,we.metalnessmap,we.fog,we.lights,{emissive:{value:new De(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:ht.meshphysical_vert,fragmentShader:ht.meshphysical_frag},toon:{uniforms:gn([we.common,we.aomap,we.lightmap,we.emissivemap,we.bumpmap,we.normalmap,we.displacementmap,we.gradientmap,we.fog,we.lights,{emissive:{value:new De(0)}}]),vertexShader:ht.meshtoon_vert,fragmentShader:ht.meshtoon_frag},matcap:{uniforms:gn([we.common,we.bumpmap,we.normalmap,we.displacementmap,we.fog,{matcap:{value:null}}]),vertexShader:ht.meshmatcap_vert,fragmentShader:ht.meshmatcap_frag},points:{uniforms:gn([we.points,we.fog]),vertexShader:ht.points_vert,fragmentShader:ht.points_frag},dashed:{uniforms:gn([we.common,we.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:ht.linedashed_vert,fragmentShader:ht.linedashed_frag},depth:{uniforms:gn([we.common,we.displacementmap]),vertexShader:ht.depth_vert,fragmentShader:ht.depth_frag},normal:{uniforms:gn([we.common,we.bumpmap,we.normalmap,we.displacementmap,{opacity:{value:1}}]),vertexShader:ht.meshnormal_vert,fragmentShader:ht.meshnormal_frag},sprite:{uniforms:gn([we.sprite,we.fog]),vertexShader:ht.sprite_vert,fragmentShader:ht.sprite_frag},background:{uniforms:{uvTransform:{value:new Ln},t2D:{value:null}},vertexShader:ht.background_vert,fragmentShader:ht.background_frag},cube:{uniforms:gn([we.envmap,{opacity:{value:1}}]),vertexShader:ht.cube_vert,fragmentShader:ht.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:ht.equirect_vert,fragmentShader:ht.equirect_frag},distanceRGBA:{uniforms:gn([we.common,we.displacementmap,{referencePosition:{value:new I},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:ht.distanceRGBA_vert,fragmentShader:ht.distanceRGBA_frag},shadow:{uniforms:gn([we.lights,we.fog,{color:{value:new De(0)},opacity:{value:1}}]),vertexShader:ht.shadow_vert,fragmentShader:ht.shadow_frag}};fi.physical={uniforms:gn([fi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new fe(1,1)},clearcoatNormalMap:{value:null},iridescence:{value:0},iridescenceMap:{value:null},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},sheen:{value:0},sheenColor:{value:new De(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new fe},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new De(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new De(1,1,1)},specularColorMap:{value:null}}]),vertexShader:ht.meshphysical_vert,fragmentShader:ht.meshphysical_frag};function QM(l,e,t,n,i,r){const a=new De(0);let c=i===!0?0:1,u,h,d=null,p=0,m=null;function v(x,_){let S=!1,w=_.isScene===!0?_.background:null;w&&w.isTexture&&(w=e.get(w));const T=l.xr,E=T.getSession&&T.getSession();E&&E.environmentBlendMode==="additive"&&(w=null),w===null?y(a,c):w&&w.isColor&&(y(w,1),S=!0),(l.autoClear||S)&&l.clear(l.autoClearColor,l.autoClearDepth,l.autoClearStencil),w&&(w.isCubeTexture||w.mapping===ho)?(h===void 0&&(h=new cn(new Cr(1,1,1),new Ei({name:"BackgroundCubeMaterial",uniforms:lo(fi.cube.uniforms),vertexShader:fi.cube.vertexShader,fragmentShader:fi.cube.fragmentShader,side:Fn,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(C,P,N){this.matrixWorld.copyPosition(N.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(h)),h.material.uniforms.envMap.value=w,h.material.uniforms.flipEnvMap.value=w.isCubeTexture&&w.isRenderTargetTexture===!1?-1:1,(d!==w||p!==w.version||m!==l.toneMapping)&&(h.material.needsUpdate=!0,d=w,p=w.version,m=l.toneMapping),h.layers.enableAll(),x.unshift(h,h.geometry,h.material,0,0,null)):w&&w.isTexture&&(u===void 0&&(u=new cn(new po(2,2),new Ei({name:"BackgroundMaterial",uniforms:lo(fi.background.uniforms),vertexShader:fi.background.vertexShader,fragmentShader:fi.background.fragmentShader,side:us,depthTest:!1,depthWrite:!1,fog:!1})),u.geometry.deleteAttribute("normal"),Object.defineProperty(u.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(u)),u.material.uniforms.t2D.value=w,w.matrixAutoUpdate===!0&&w.updateMatrix(),u.material.uniforms.uvTransform.value.copy(w.matrix),(d!==w||p!==w.version||m!==l.toneMapping)&&(u.material.needsUpdate=!0,d=w,p=w.version,m=l.toneMapping),u.layers.enableAll(),x.unshift(u,u.geometry,u.material,0,0,null))}function y(x,_){t.buffers.color.setClear(x.r,x.g,x.b,_,r)}return{getClearColor:function(){return a},setClearColor:function(x,_=1){a.set(x),c=_,y(a,c)},getClearAlpha:function(){return c},setClearAlpha:function(x){c=x,y(a,c)},render:v}}function KM(l,e,t,n){const i=l.getParameter(34921),r=n.isWebGL2?null:e.get("OES_vertex_array_object"),a=n.isWebGL2||r!==null,c={},u=_(null);let h=u,d=!1;function p(W,$,te,pe,V){let k=!1;if(a){const U=x(pe,te,$);h!==U&&(h=U,v(h.object)),k=S(W,pe,te,V),k&&w(W,pe,te,V)}else{const U=$.wireframe===!0;(h.geometry!==pe.id||h.program!==te.id||h.wireframe!==U)&&(h.geometry=pe.id,h.program=te.id,h.wireframe=U,k=!0)}V!==null&&t.update(V,34963),(k||d)&&(d=!1,A(W,$,te,pe),V!==null&&l.bindBuffer(34963,t.get(V).buffer))}function m(){return n.isWebGL2?l.createVertexArray():r.createVertexArrayOES()}function v(W){return n.isWebGL2?l.bindVertexArray(W):r.bindVertexArrayOES(W)}function y(W){return n.isWebGL2?l.deleteVertexArray(W):r.deleteVertexArrayOES(W)}function x(W,$,te){const pe=te.wireframe===!0;let V=c[W.id];V===void 0&&(V={},c[W.id]=V);let k=V[$.id];k===void 0&&(k={},V[$.id]=k);let U=k[pe];return U===void 0&&(U=_(m()),k[pe]=U),U}function _(W){const $=[],te=[],pe=[];for(let V=0;V<i;V++)$[V]=0,te[V]=0,pe[V]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:$,enabledAttributes:te,attributeDivisors:pe,object:W,attributes:{},index:null}}function S(W,$,te,pe){const V=h.attributes,k=$.attributes;let U=0;const le=te.getAttributes();for(const re in le)if(le[re].location>=0){const Ee=V[re];let Ve=k[re];if(Ve===void 0&&(re==="instanceMatrix"&&W.instanceMatrix&&(Ve=W.instanceMatrix),re==="instanceColor"&&W.instanceColor&&(Ve=W.instanceColor)),Ee===void 0||Ee.attribute!==Ve||Ve&&Ee.data!==Ve.data)return!0;U++}return h.attributesNum!==U||h.index!==pe}function w(W,$,te,pe){const V={},k=$.attributes;let U=0;const le=te.getAttributes();for(const re in le)if(le[re].location>=0){let Ee=k[re];Ee===void 0&&(re==="instanceMatrix"&&W.instanceMatrix&&(Ee=W.instanceMatrix),re==="instanceColor"&&W.instanceColor&&(Ee=W.instanceColor));const Ve={};Ve.attribute=Ee,Ee&&Ee.data&&(Ve.data=Ee.data),V[re]=Ve,U++}h.attributes=V,h.attributesNum=U,h.index=pe}function T(){const W=h.newAttributes;for(let $=0,te=W.length;$<te;$++)W[$]=0}function E(W){C(W,0)}function C(W,$){const te=h.newAttributes,pe=h.enabledAttributes,V=h.attributeDivisors;te[W]=1,pe[W]===0&&(l.enableVertexAttribArray(W),pe[W]=1),V[W]!==$&&((n.isWebGL2?l:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](W,$),V[W]=$)}function P(){const W=h.newAttributes,$=h.enabledAttributes;for(let te=0,pe=$.length;te<pe;te++)$[te]!==W[te]&&(l.disableVertexAttribArray(te),$[te]=0)}function N(W,$,te,pe,V,k){n.isWebGL2===!0&&(te===5124||te===5125)?l.vertexAttribIPointer(W,$,te,V,k):l.vertexAttribPointer(W,$,te,pe,V,k)}function A(W,$,te,pe){if(n.isWebGL2===!1&&(W.isInstancedMesh||pe.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;T();const V=pe.attributes,k=te.getAttributes(),U=$.defaultAttributeValues;for(const le in k){const re=k[le];if(re.location>=0){let me=V[le];if(me===void 0&&(le==="instanceMatrix"&&W.instanceMatrix&&(me=W.instanceMatrix),le==="instanceColor"&&W.instanceColor&&(me=W.instanceColor)),me!==void 0){const Ee=me.normalized,Ve=me.itemSize,oe=t.get(me);if(oe===void 0)continue;const je=oe.buffer,Ge=oe.type,Ye=oe.bytesPerElement;if(me.isInterleavedBufferAttribute){const be=me.data,Ze=be.stride,he=me.offset;if(be.isInstancedInterleavedBuffer){for(let ne=0;ne<re.locationSize;ne++)C(re.location+ne,be.meshPerAttribute);W.isInstancedMesh!==!0&&pe._maxInstanceCount===void 0&&(pe._maxInstanceCount=be.meshPerAttribute*be.count)}else for(let ne=0;ne<re.locationSize;ne++)E(re.location+ne);l.bindBuffer(34962,je);for(let ne=0;ne<re.locationSize;ne++)N(re.location+ne,Ve/re.locationSize,Ge,Ee,Ze*Ye,(he+Ve/re.locationSize*ne)*Ye)}else{if(me.isInstancedBufferAttribute){for(let be=0;be<re.locationSize;be++)C(re.location+be,me.meshPerAttribute);W.isInstancedMesh!==!0&&pe._maxInstanceCount===void 0&&(pe._maxInstanceCount=me.meshPerAttribute*me.count)}else for(let be=0;be<re.locationSize;be++)E(re.location+be);l.bindBuffer(34962,je);for(let be=0;be<re.locationSize;be++)N(re.location+be,Ve/re.locationSize,Ge,Ee,Ve*Ye,Ve/re.locationSize*be*Ye)}}else if(U!==void 0){const Ee=U[le];if(Ee!==void 0)switch(Ee.length){case 2:l.vertexAttrib2fv(re.location,Ee);break;case 3:l.vertexAttrib3fv(re.location,Ee);break;case 4:l.vertexAttrib4fv(re.location,Ee);break;default:l.vertexAttrib1fv(re.location,Ee)}}}}P()}function L(){se();for(const W in c){const $=c[W];for(const te in $){const pe=$[te];for(const V in pe)y(pe[V].object),delete pe[V];delete $[te]}delete c[W]}}function F(W){if(c[W.id]===void 0)return;const $=c[W.id];for(const te in $){const pe=$[te];for(const V in pe)y(pe[V].object),delete pe[V];delete $[te]}delete c[W.id]}function q(W){for(const $ in c){const te=c[$];if(te[W.id]===void 0)continue;const pe=te[W.id];for(const V in pe)y(pe[V].object),delete pe[V];delete te[W.id]}}function se(){J(),d=!0,h!==u&&(h=u,v(h.object))}function J(){u.geometry=null,u.program=null,u.wireframe=!1}return{setup:p,reset:se,resetDefaultState:J,dispose:L,releaseStatesOfGeometry:F,releaseStatesOfProgram:q,initAttributes:T,enableAttribute:E,disableUnusedAttributes:P}}function $M(l,e,t,n){const i=n.isWebGL2;let r;function a(h){r=h}function c(h,d){l.drawArrays(r,h,d),t.update(d,r,1)}function u(h,d,p){if(p===0)return;let m,v;if(i)m=l,v="drawArraysInstanced";else if(m=e.get("ANGLE_instanced_arrays"),v="drawArraysInstancedANGLE",m===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[v](r,h,d,p),t.update(d,r,p)}this.setMode=a,this.render=c,this.renderInstances=u}function eS(l,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const N=e.get("EXT_texture_filter_anisotropic");n=l.getParameter(N.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function r(N){if(N==="highp"){if(l.getShaderPrecisionFormat(35633,36338).precision>0&&l.getShaderPrecisionFormat(35632,36338).precision>0)return"highp";N="mediump"}return N==="mediump"&&l.getShaderPrecisionFormat(35633,36337).precision>0&&l.getShaderPrecisionFormat(35632,36337).precision>0?"mediump":"lowp"}const a=typeof WebGL2RenderingContext<"u"&&l instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext<"u"&&l instanceof WebGL2ComputeRenderingContext;let c=t.precision!==void 0?t.precision:"highp";const u=r(c);u!==c&&(console.warn("THREE.WebGLRenderer:",c,"not supported, using",u,"instead."),c=u);const h=a||e.has("WEBGL_draw_buffers"),d=t.logarithmicDepthBuffer===!0,p=l.getParameter(34930),m=l.getParameter(35660),v=l.getParameter(3379),y=l.getParameter(34076),x=l.getParameter(34921),_=l.getParameter(36347),S=l.getParameter(36348),w=l.getParameter(36349),T=m>0,E=a||e.has("OES_texture_float"),C=T&&E,P=a?l.getParameter(36183):0;return{isWebGL2:a,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:r,precision:c,logarithmicDepthBuffer:d,maxTextures:p,maxVertexTextures:m,maxTextureSize:v,maxCubemapSize:y,maxAttributes:x,maxVertexUniforms:_,maxVaryings:S,maxFragmentUniforms:w,vertexTextures:T,floatFragmentTextures:E,floatVertexTextures:C,maxSamples:P}}function tS(l){const e=this;let t=null,n=0,i=!1,r=!1;const a=new gr,c=new Ln,u={value:null,needsUpdate:!1};this.uniform=u,this.numPlanes=0,this.numIntersection=0,this.init=function(p,m,v){const y=p.length!==0||m||n!==0||i;return i=m,t=d(p,v,0),n=p.length,y},this.beginShadows=function(){r=!0,d(null)},this.endShadows=function(){r=!1,h()},this.setState=function(p,m,v){const y=p.clippingPlanes,x=p.clipIntersection,_=p.clipShadows,S=l.get(p);if(!i||y===null||y.length===0||r&&!_)r?d(null):h();else{const w=r?0:n,T=w*4;let E=S.clippingState||null;u.value=E,E=d(y,m,T,v);for(let C=0;C!==T;++C)E[C]=t[C];S.clippingState=E,this.numIntersection=x?this.numPlanes:0,this.numPlanes+=w}};function h(){u.value!==t&&(u.value=t,u.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function d(p,m,v,y){const x=p!==null?p.length:0;let _=null;if(x!==0){if(_=u.value,y!==!0||_===null){const S=v+x*4,w=m.matrixWorldInverse;c.getNormalMatrix(w),(_===null||_.length<S)&&(_=new Float32Array(S));for(let T=0,E=v;T!==x;++T,E+=4)a.copy(p[T]).applyMatrix4(w,c),a.normal.toArray(_,E),_[E+3]=a.constant}u.value=_,u.needsUpdate=!0}return e.numPlanes=x,e.numIntersection=0,_}}function nS(l){let e=new WeakMap;function t(a,c){return c===ta?a.mapping=Mr:c===na&&(a.mapping=Sr),a}function n(a){if(a&&a.isTexture&&a.isRenderTargetTexture===!1){const c=a.mapping;if(c===ta||c===na)if(e.has(a)){const u=e.get(a).texture;return t(u,a.mapping)}else{const u=a.image;if(u&&u.height>0){const h=new H0(u.height/2);return h.fromEquirectangularTexture(l,a),e.set(a,h),a.addEventListener("dispose",i),t(h.texture,a.mapping)}else return null}}return a}function i(a){const c=a.target;c.removeEventListener("dispose",i);const u=e.get(c);u!==void 0&&(e.delete(c),u.dispose())}function r(){e=new WeakMap}return{get:n,dispose:r}}class _r extends Sa{constructor(e=-1,t=1,n=1,i=-1,r=.1,a=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=r,this.far=a,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,r,a){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=r,this.view.height=a,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let r=n-e,a=n+e,c=i+t,u=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,d=(this.top-this.bottom)/this.view.fullHeight/this.zoom;r+=h*this.view.offsetX,a=r+h*this.view.width,c-=d*this.view.offsetY,u=c-d*this.view.height}this.projectionMatrix.makeOrthographic(r,a,c,u,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}const io=4,ym=[.125,.215,.35,.446,.526,.582],Kr=20,Ah=new _r,_m=new De;let Ch=null;const Jr=(1+Math.sqrt(5))/2,Ys=1/Jr,Mm=[new I(1,1,1),new I(-1,1,1),new I(1,1,-1),new I(-1,1,-1),new I(0,Jr,Ys),new I(0,Jr,-Ys),new I(Ys,0,Jr),new I(-Ys,0,Jr),new I(Jr,Ys,0),new I(-Jr,Ys,0)];class Tf{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){Ch=this._renderer.getRenderTarget(),this._setSize(256);const r=this._allocateTargets();return r.depthBuffer=!0,this._sceneToCubeUV(e,n,i,r),t>0&&this._blur(r,0,0,t),this._applyPMREM(r),this._cleanup(r),r}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=bm(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=wm(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(Ch),e.scissorTest=!1,ec(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===Mr||e.mapping===Sr?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),Ch=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize,n={magFilter:Xt,minFilter:Xt,generateMipmaps:!1,type:ao,format:ii,encoding:ji,depthBuffer:!1},i=Sm(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=Sm(e,t,n);const{_lodMax:r}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=iS(r)),this._blurMaterial=rS(r,e,t)}return i}_compileMaterial(e){const t=new cn(this._lodPlanes[0],e);this._renderer.compile(t,Ah)}_sceneToCubeUV(e,t,n,i){const c=new Ot(90,1,t,n),u=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],d=this._renderer,p=d.autoClear,m=d.toneMapping;d.getClearColor(_m),d.toneMapping=di,d.autoClear=!1;const v=new Ar({name:"PMREM.Background",side:Fn,depthWrite:!1,depthTest:!1}),y=new cn(new Cr,v);let x=!1;const _=e.background;_?_.isColor&&(v.color.copy(_),e.background=null,x=!0):(v.color.copy(_m),x=!0);for(let S=0;S<6;S++){const w=S%3;w===0?(c.up.set(0,u[S],0),c.lookAt(h[S],0,0)):w===1?(c.up.set(0,0,u[S]),c.lookAt(0,h[S],0)):(c.up.set(0,u[S],0),c.lookAt(0,0,h[S]));const T=this._cubeSize;ec(i,w*T,S>2?T:0,T,T),d.setRenderTarget(i),x&&d.render(y,c),d.render(e,c)}y.geometry.dispose(),y.material.dispose(),d.toneMapping=m,d.autoClear=p,e.background=_}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===Mr||e.mapping===Sr;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=bm()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=wm());const r=i?this._cubemapMaterial:this._equirectMaterial,a=new cn(this._lodPlanes[0],r),c=r.uniforms;c.envMap.value=e;const u=this._cubeSize;ec(t,0,0,3*u,2*u),n.setRenderTarget(t),n.render(a,Ah)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const r=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),a=Mm[(i-1)%Mm.length];this._blur(e,i-1,i,r,a)}t.autoClear=n}_blur(e,t,n,i,r){const a=this._pingPongRenderTarget;this._halfBlur(e,a,t,n,i,"latitudinal",r),this._halfBlur(a,e,n,n,i,"longitudinal",r)}_halfBlur(e,t,n,i,r,a,c){const u=this._renderer,h=this._blurMaterial;a!=="latitudinal"&&a!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const d=3,p=new cn(this._lodPlanes[i],h),m=h.uniforms,v=this._sizeLods[n]-1,y=isFinite(r)?Math.PI/(2*v):2*Math.PI/(2*Kr-1),x=r/y,_=isFinite(r)?1+Math.floor(d*x):Kr;_>Kr&&console.warn(`sigmaRadians, ${r}, is too large and will clip, as it requested ${_} samples when the maximum is set to ${Kr}`);const S=[];let w=0;for(let N=0;N<Kr;++N){const A=N/x,L=Math.exp(-A*A/2);S.push(L),N===0?w+=L:N<_&&(w+=2*L)}for(let N=0;N<S.length;N++)S[N]=S[N]/w;m.envMap.value=e.texture,m.samples.value=_,m.weights.value=S,m.latitudinal.value=a==="latitudinal",c&&(m.poleAxis.value=c);const{_lodMax:T}=this;m.dTheta.value=y,m.mipInt.value=T-n;const E=this._sizeLods[i],C=3*E*(i>T-io?i-T+io:0),P=4*(this._cubeSize-E);ec(t,C,P,3*E,2*E),u.setRenderTarget(t),u.render(p,Ah)}}function iS(l){const e=[],t=[],n=[];let i=l;const r=l-io+1+ym.length;for(let a=0;a<r;a++){const c=Math.pow(2,i);t.push(c);let u=1/c;a>l-io?u=ym[a-l+io-1]:a===0&&(u=0),n.push(u);const h=1/(c-2),d=-h,p=1+h,m=[d,d,p,d,p,p,d,d,p,p,d,p],v=6,y=6,x=3,_=2,S=1,w=new Float32Array(x*y*v),T=new Float32Array(_*y*v),E=new Float32Array(S*y*v);for(let P=0;P<v;P++){const N=P%3*2/3-1,A=P>2?0:-1,L=[N,A,0,N+2/3,A,0,N+2/3,A+1,0,N,A,0,N+2/3,A+1,0,N,A+1,0];w.set(L,x*y*P),T.set(m,_*y*P);const F=[P,P,P,P,P,P];E.set(F,S*y*P)}const C=new ct;C.setAttribute("position",new Pt(w,x)),C.setAttribute("uv",new Pt(T,_)),C.setAttribute("faceIndex",new Pt(E,S)),e.push(C),i>io&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function Sm(l,e,t){const n=new ri(l,e,t);return n.texture.mapping=ho,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function ec(l,e,t,n,i){l.viewport.set(e,t,n,i),l.scissor.set(e,t,n,i)}function rS(l,e,t){const n=new Float32Array(Kr),i=new I(0,1,0);return new Ei({name:"SphericalGaussianBlur",defines:{n:Kr,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${l}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Jf(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Zi,depthTest:!1,depthWrite:!1})}function wm(){return new Ei({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Jf(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Zi,depthTest:!1,depthWrite:!1})}function bm(){return new Ei({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Jf(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Zi,depthTest:!1,depthWrite:!1})}function Jf(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function sS(l){let e=new WeakMap,t=null;function n(c){if(c&&c.isTexture){const u=c.mapping,h=u===ta||u===na,d=u===Mr||u===Sr;if(h||d)if(c.isRenderTargetTexture&&c.needsPMREMUpdate===!0){c.needsPMREMUpdate=!1;let p=e.get(c);return t===null&&(t=new Tf(l)),p=h?t.fromEquirectangular(c,p):t.fromCubemap(c,p),e.set(c,p),p.texture}else{if(e.has(c))return e.get(c).texture;{const p=c.image;if(h&&p&&p.height>0||d&&p&&i(p)){t===null&&(t=new Tf(l));const m=h?t.fromEquirectangular(c):t.fromCubemap(c);return e.set(c,m),c.addEventListener("dispose",r),m.texture}else return null}}}return c}function i(c){let u=0;const h=6;for(let d=0;d<h;d++)c[d]!==void 0&&u++;return u===h}function r(c){const u=c.target;u.removeEventListener("dispose",r);const h=e.get(u);h!==void 0&&(e.delete(u),h.dispose())}function a(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:a}}function oS(l){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=l.getExtension("WEBGL_depth_texture")||l.getExtension("MOZ_WEBGL_depth_texture")||l.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=l.getExtension("EXT_texture_filter_anisotropic")||l.getExtension("MOZ_EXT_texture_filter_anisotropic")||l.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=l.getExtension("WEBGL_compressed_texture_s3tc")||l.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||l.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=l.getExtension("WEBGL_compressed_texture_pvrtc")||l.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=l.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function aS(l,e,t,n){const i={},r=new WeakMap;function a(p){const m=p.target;m.index!==null&&e.remove(m.index);for(const y in m.attributes)e.remove(m.attributes[y]);m.removeEventListener("dispose",a),delete i[m.id];const v=r.get(m);v&&(e.remove(v),r.delete(m)),n.releaseStatesOfGeometry(m),m.isInstancedBufferGeometry===!0&&delete m._maxInstanceCount,t.memory.geometries--}function c(p,m){return i[m.id]===!0||(m.addEventListener("dispose",a),i[m.id]=!0,t.memory.geometries++),m}function u(p){const m=p.attributes;for(const y in m)e.update(m[y],34962);const v=p.morphAttributes;for(const y in v){const x=v[y];for(let _=0,S=x.length;_<S;_++)e.update(x[_],34962)}}function h(p){const m=[],v=p.index,y=p.attributes.position;let x=0;if(v!==null){const w=v.array;x=v.version;for(let T=0,E=w.length;T<E;T+=3){const C=w[T+0],P=w[T+1],N=w[T+2];m.push(C,P,P,N,N,C)}}else{const w=y.array;x=y.version;for(let T=0,E=w.length/3-1;T<E;T+=3){const C=T+0,P=T+1,N=T+2;m.push(C,P,P,N,N,C)}}const _=new(k0(m)?jf:Zf)(m,1);_.version=x;const S=r.get(p);S&&e.remove(S),r.set(p,_)}function d(p){const m=r.get(p);if(m){const v=p.index;v!==null&&m.version<v.version&&h(p)}else h(p);return r.get(p)}return{get:c,update:u,getWireframeAttribute:d}}function lS(l,e,t,n){const i=n.isWebGL2;let r;function a(m){r=m}let c,u;function h(m){c=m.type,u=m.bytesPerElement}function d(m,v){l.drawElements(r,v,c,m*u),t.update(v,r,1)}function p(m,v,y){if(y===0)return;let x,_;if(i)x=l,_="drawElementsInstanced";else if(x=e.get("ANGLE_instanced_arrays"),_="drawElementsInstancedANGLE",x===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}x[_](r,v,c,m*u,y),t.update(v,r,y)}this.setMode=a,this.setIndex=h,this.render=d,this.renderInstances=p}function cS(l){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(r,a,c){switch(t.calls++,a){case 4:t.triangles+=c*(r/3);break;case 1:t.lines+=c*(r/2);break;case 3:t.lines+=c*(r-1);break;case 2:t.lines+=c*r;break;case 0:t.points+=c*r;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",a);break}}function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function uS(l,e){return l[0]-e[0]}function hS(l,e){return Math.abs(e[1])-Math.abs(l[1])}function fS(l,e,t){const n={},i=new Float32Array(8),r=new WeakMap,a=new Tt,c=[];for(let h=0;h<8;h++)c[h]=[h,0];function u(h,d,p,m){const v=h.morphTargetInfluences;if(e.isWebGL2===!0){const y=d.morphAttributes.position||d.morphAttributes.normal||d.morphAttributes.color,x=y!==void 0?y.length:0;let _=r.get(d);if(_===void 0||_.count!==x){let $=function(){J.dispose(),r.delete(d),d.removeEventListener("dispose",$)};_!==void 0&&_.texture.dispose();const T=d.morphAttributes.position!==void 0,E=d.morphAttributes.normal!==void 0,C=d.morphAttributes.color!==void 0,P=d.morphAttributes.position||[],N=d.morphAttributes.normal||[],A=d.morphAttributes.color||[];let L=0;T===!0&&(L=1),E===!0&&(L=2),C===!0&&(L=3);let F=d.attributes.position.count*L,q=1;F>e.maxTextureSize&&(q=Math.ceil(F/e.maxTextureSize),F=e.maxTextureSize);const se=new Float32Array(F*q*4*x),J=new _a(se,F,q,x);J.type=qi,J.needsUpdate=!0;const W=L*4;for(let te=0;te<x;te++){const pe=P[te],V=N[te],k=A[te],U=F*q*4*te;for(let le=0;le<pe.count;le++){const re=le*W;T===!0&&(a.fromBufferAttribute(pe,le),se[U+re+0]=a.x,se[U+re+1]=a.y,se[U+re+2]=a.z,se[U+re+3]=0),E===!0&&(a.fromBufferAttribute(V,le),se[U+re+4]=a.x,se[U+re+5]=a.y,se[U+re+6]=a.z,se[U+re+7]=0),C===!0&&(a.fromBufferAttribute(k,le),se[U+re+8]=a.x,se[U+re+9]=a.y,se[U+re+10]=a.z,se[U+re+11]=k.itemSize===4?a.w:1)}}_={count:x,texture:J,size:new fe(F,q)},r.set(d,_),d.addEventListener("dispose",$)}let S=0;for(let T=0;T<v.length;T++)S+=v[T];const w=d.morphTargetsRelative?1:1-S;m.getUniforms().setValue(l,"morphTargetBaseInfluence",w),m.getUniforms().setValue(l,"morphTargetInfluences",v),m.getUniforms().setValue(l,"morphTargetsTexture",_.texture,t),m.getUniforms().setValue(l,"morphTargetsTextureSize",_.size)}else{const y=v===void 0?0:v.length;let x=n[d.id];if(x===void 0||x.length!==y){x=[];for(let E=0;E<y;E++)x[E]=[E,0];n[d.id]=x}for(let E=0;E<y;E++){const C=x[E];C[0]=E,C[1]=v[E]}x.sort(hS);for(let E=0;E<8;E++)E<y&&x[E][1]?(c[E][0]=x[E][0],c[E][1]=x[E][1]):(c[E][0]=Number.MAX_SAFE_INTEGER,c[E][1]=0);c.sort(uS);const _=d.morphAttributes.position,S=d.morphAttributes.normal;let w=0;for(let E=0;E<8;E++){const C=c[E],P=C[0],N=C[1];P!==Number.MAX_SAFE_INTEGER&&N?(_&&d.getAttribute("morphTarget"+E)!==_[P]&&d.setAttribute("morphTarget"+E,_[P]),S&&d.getAttribute("morphNormal"+E)!==S[P]&&d.setAttribute("morphNormal"+E,S[P]),i[E]=N,w+=N):(_&&d.hasAttribute("morphTarget"+E)===!0&&d.deleteAttribute("morphTarget"+E),S&&d.hasAttribute("morphNormal"+E)===!0&&d.deleteAttribute("morphNormal"+E),i[E]=0)}const T=d.morphTargetsRelative?1:1-w;m.getUniforms().setValue(l,"morphTargetBaseInfluence",T),m.getUniforms().setValue(l,"morphTargetInfluences",i)}}return{update:u}}function dS(l,e,t,n){let i=new WeakMap;function r(u){const h=n.render.frame,d=u.geometry,p=e.get(u,d);return i.get(p)!==h&&(e.update(p),i.set(p,h)),u.isInstancedMesh&&(u.hasEventListener("dispose",c)===!1&&u.addEventListener("dispose",c),t.update(u.instanceMatrix,34962),u.instanceColor!==null&&t.update(u.instanceColor,34962)),p}function a(){i=new WeakMap}function c(u){const h=u.target;h.removeEventListener("dispose",c),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:r,dispose:a}}const W0=new Qt,X0=new _a,q0=new Gc,Y0=new wa,Tm=[],Em=[],Am=new Float32Array(16),Cm=new Float32Array(9),Pm=new Float32Array(4);function mo(l,e,t){const n=l[0];if(n<=0||n>0)return l;const i=e*t;let r=Tm[i];if(r===void 0&&(r=new Float32Array(i),Tm[i]=r),e!==0){n.toArray(r,0);for(let a=1,c=0;a!==e;++a)c+=t,l[a].toArray(r,c)}return r}function en(l,e){if(l.length!==e.length)return!1;for(let t=0,n=l.length;t<n;t++)if(l[t]!==e[t])return!1;return!0}function tn(l,e){for(let t=0,n=e.length;t<n;t++)l[t]=e[t]}function Xc(l,e){let t=Em[e];t===void 0&&(t=new Int32Array(e),Em[e]=t);for(let n=0;n!==e;++n)t[n]=l.allocateTextureUnit();return t}function pS(l,e){const t=this.cache;t[0]!==e&&(l.uniform1f(this.addr,e),t[0]=e)}function mS(l,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(l.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(en(t,e))return;l.uniform2fv(this.addr,e),tn(t,e)}}function gS(l,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(l.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(l.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(en(t,e))return;l.uniform3fv(this.addr,e),tn(t,e)}}function vS(l,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(l.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(en(t,e))return;l.uniform4fv(this.addr,e),tn(t,e)}}function xS(l,e){const t=this.cache,n=e.elements;if(n===void 0){if(en(t,e))return;l.uniformMatrix2fv(this.addr,!1,e),tn(t,e)}else{if(en(t,n))return;Pm.set(n),l.uniformMatrix2fv(this.addr,!1,Pm),tn(t,n)}}function yS(l,e){const t=this.cache,n=e.elements;if(n===void 0){if(en(t,e))return;l.uniformMatrix3fv(this.addr,!1,e),tn(t,e)}else{if(en(t,n))return;Cm.set(n),l.uniformMatrix3fv(this.addr,!1,Cm),tn(t,n)}}function _S(l,e){const t=this.cache,n=e.elements;if(n===void 0){if(en(t,e))return;l.uniformMatrix4fv(this.addr,!1,e),tn(t,e)}else{if(en(t,n))return;Am.set(n),l.uniformMatrix4fv(this.addr,!1,Am),tn(t,n)}}function MS(l,e){const t=this.cache;t[0]!==e&&(l.uniform1i(this.addr,e),t[0]=e)}function SS(l,e){const t=this.cache;en(t,e)||(l.uniform2iv(this.addr,e),tn(t,e))}function wS(l,e){const t=this.cache;en(t,e)||(l.uniform3iv(this.addr,e),tn(t,e))}function bS(l,e){const t=this.cache;en(t,e)||(l.uniform4iv(this.addr,e),tn(t,e))}function TS(l,e){const t=this.cache;t[0]!==e&&(l.uniform1ui(this.addr,e),t[0]=e)}function ES(l,e){const t=this.cache;en(t,e)||(l.uniform2uiv(this.addr,e),tn(t,e))}function AS(l,e){const t=this.cache;en(t,e)||(l.uniform3uiv(this.addr,e),tn(t,e))}function CS(l,e){const t=this.cache;en(t,e)||(l.uniform4uiv(this.addr,e),tn(t,e))}function PS(l,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(l.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||W0,i)}function LS(l,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(l.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||q0,i)}function RS(l,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(l.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Y0,i)}function IS(l,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(l.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||X0,i)}function DS(l){switch(l){case 5126:return pS;case 35664:return mS;case 35665:return gS;case 35666:return vS;case 35674:return xS;case 35675:return yS;case 35676:return _S;case 5124:case 35670:return MS;case 35667:case 35671:return SS;case 35668:case 35672:return wS;case 35669:case 35673:return bS;case 5125:return TS;case 36294:return ES;case 36295:return AS;case 36296:return CS;case 35678:case 36198:case 36298:case 36306:case 35682:return PS;case 35679:case 36299:case 36307:return LS;case 35680:case 36300:case 36308:case 36293:return RS;case 36289:case 36303:case 36311:case 36292:return IS}}function zS(l,e){l.uniform1fv(this.addr,e)}function NS(l,e){const t=mo(e,this.size,2);l.uniform2fv(this.addr,t)}function OS(l,e){const t=mo(e,this.size,3);l.uniform3fv(this.addr,t)}function FS(l,e){const t=mo(e,this.size,4);l.uniform4fv(this.addr,t)}function kS(l,e){const t=mo(e,this.size,4);l.uniformMatrix2fv(this.addr,!1,t)}function US(l,e){const t=mo(e,this.size,9);l.uniformMatrix3fv(this.addr,!1,t)}function BS(l,e){const t=mo(e,this.size,16);l.uniformMatrix4fv(this.addr,!1,t)}function VS(l,e){l.uniform1iv(this.addr,e)}function HS(l,e){l.uniform2iv(this.addr,e)}function GS(l,e){l.uniform3iv(this.addr,e)}function WS(l,e){l.uniform4iv(this.addr,e)}function XS(l,e){l.uniform1uiv(this.addr,e)}function qS(l,e){l.uniform2uiv(this.addr,e)}function YS(l,e){l.uniform3uiv(this.addr,e)}function ZS(l,e){l.uniform4uiv(this.addr,e)}function jS(l,e,t){const n=this.cache,i=e.length,r=Xc(t,i);en(n,r)||(l.uniform1iv(this.addr,r),tn(n,r));for(let a=0;a!==i;++a)t.setTexture2D(e[a]||W0,r[a])}function JS(l,e,t){const n=this.cache,i=e.length,r=Xc(t,i);en(n,r)||(l.uniform1iv(this.addr,r),tn(n,r));for(let a=0;a!==i;++a)t.setTexture3D(e[a]||q0,r[a])}function QS(l,e,t){const n=this.cache,i=e.length,r=Xc(t,i);en(n,r)||(l.uniform1iv(this.addr,r),tn(n,r));for(let a=0;a!==i;++a)t.setTextureCube(e[a]||Y0,r[a])}function KS(l,e,t){const n=this.cache,i=e.length,r=Xc(t,i);en(n,r)||(l.uniform1iv(this.addr,r),tn(n,r));for(let a=0;a!==i;++a)t.setTexture2DArray(e[a]||X0,r[a])}function $S(l){switch(l){case 5126:return zS;case 35664:return NS;case 35665:return OS;case 35666:return FS;case 35674:return kS;case 35675:return US;case 35676:return BS;case 5124:case 35670:return VS;case 35667:case 35671:return HS;case 35668:case 35672:return GS;case 35669:case 35673:return WS;case 5125:return XS;case 36294:return qS;case 36295:return YS;case 36296:return ZS;case 35678:case 36198:case 36298:case 36306:case 35682:return jS;case 35679:case 36299:case 36307:return JS;case 35680:case 36300:case 36308:case 36293:return QS;case 36289:case 36303:case 36311:case 36292:return KS}}class ew{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.setValue=DS(t.type)}}class tw{constructor(e,t,n){this.id=e,this.addr=n,this.cache=[],this.size=t.size,this.setValue=$S(t.type)}}class nw{constructor(e){this.id=e,this.seq=[],this.map={}}setValue(e,t,n){const i=this.seq;for(let r=0,a=i.length;r!==a;++r){const c=i[r];c.setValue(e,t[c.id],n)}}}const Ph=/(\w+)(\])?(\[|\.)?/g;function Lm(l,e){l.seq.push(e),l.map[e.id]=e}function iw(l,e,t){const n=l.name,i=n.length;for(Ph.lastIndex=0;;){const r=Ph.exec(n),a=Ph.lastIndex;let c=r[1];const u=r[2]==="]",h=r[3];if(u&&(c=c|0),h===void 0||h==="["&&a+2===i){Lm(t,h===void 0?new ew(c,l,e):new tw(c,l,e));break}else{let p=t.map[c];p===void 0&&(p=new nw(c),Lm(t,p)),t=p}}}class Rc{constructor(e,t){this.seq=[],this.map={};const n=e.getProgramParameter(t,35718);for(let i=0;i<n;++i){const r=e.getActiveUniform(t,i),a=e.getUniformLocation(t,r.name);iw(r,a,this)}}setValue(e,t,n,i){const r=this.map[t];r!==void 0&&r.setValue(e,n,i)}setOptional(e,t,n){const i=t[n];i!==void 0&&this.setValue(e,n,i)}static upload(e,t,n,i){for(let r=0,a=t.length;r!==a;++r){const c=t[r],u=n[c.id];u.needsUpdate!==!1&&c.setValue(e,u.value,i)}}static seqWithValue(e,t){const n=[];for(let i=0,r=e.length;i!==r;++i){const a=e[i];a.id in t&&n.push(a)}return n}}function Rm(l,e,t){const n=l.createShader(e);return l.shaderSource(n,t),l.compileShader(n),n}let rw=0;function sw(l,e){const t=l.split(`
`),n=[],i=Math.max(e-6,0),r=Math.min(e+6,t.length);for(let a=i;a<r;a++){const c=a+1;n.push(`${c===e?">":" "} ${c}: ${t[a]}`)}return n.join(`
`)}function ow(l){switch(l){case ji:return["Linear","( value )"];case Lt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",l),["Linear","( value )"]}}function Im(l,e,t){const n=l.getShaderParameter(e,35713),i=l.getShaderInfoLog(e).trim();if(n&&i==="")return"";const r=/ERROR: 0:(\d+)/.exec(i);if(r){const a=parseInt(r[1]);return t.toUpperCase()+`

`+i+`

`+sw(l.getShaderSource(e),a)}else return i}function aw(l,e){const t=ow(e);return"vec4 "+l+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function lw(l,e){let t;switch(e){case h0:t="Linear";break;case f0:t="Reinhard";break;case d0:t="OptimizedCineon";break;case Hf:t="ACESFilmic";break;case p0:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+l+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function cw(l){return[l.extensionDerivatives||!!l.envMapCubeUVHeight||l.bumpMap||l.tangentSpaceNormalMap||l.clearcoatNormalMap||l.flatShading||l.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(l.extensionFragDepth||l.logarithmicDepthBuffer)&&l.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",l.extensionDrawBuffers&&l.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(l.extensionShaderTextureLOD||l.envMap||l.transmission)&&l.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(Qo).join(`
`)}function uw(l){const e=[];for(const t in l){const n=l[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function hw(l,e){const t={},n=l.getProgramParameter(e,35721);for(let i=0;i<n;i++){const r=l.getActiveAttrib(e,i),a=r.name;let c=1;r.type===35674&&(c=2),r.type===35675&&(c=3),r.type===35676&&(c=4),t[a]={type:r.type,location:l.getAttribLocation(e,a),locationSize:c}}return t}function Qo(l){return l!==""}function Dm(l,e){const t=e.numSpotLightShadows+e.numSpotLightMaps-e.numSpotLightShadowsWithMaps;return l.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,e.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,t).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,e.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function zm(l,e){return l.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const fw=/^[ \t]*#include +<([\w\d./]+)>/gm;function Ef(l){return l.replace(fw,dw)}function dw(l,e){const t=ht[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return Ef(t)}const pw=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function Nm(l){return l.replace(pw,mw)}function mw(l,e,t,n){let i="";for(let r=parseInt(e);r<parseInt(t);r++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+r+" ]").replace(/UNROLLED_LOOP_INDEX/g,r);return i}function Om(l){let e="precision "+l.precision+` float;
precision `+l.precision+" int;";return l.precision==="highp"?e+=`
#define HIGH_PRECISION`:l.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:l.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function gw(l){let e="SHADOWMAP_TYPE_BASIC";return l.shadowMapType===kf?e="SHADOWMAP_TYPE_PCF":l.shadowMapType===Uf?e="SHADOWMAP_TYPE_PCF_SOFT":l.shadowMapType===to&&(e="SHADOWMAP_TYPE_VSM"),e}function vw(l){let e="ENVMAP_TYPE_CUBE";if(l.envMap)switch(l.envMapMode){case Mr:case Sr:e="ENVMAP_TYPE_CUBE";break;case ho:e="ENVMAP_TYPE_CUBE_UV";break}return e}function xw(l){let e="ENVMAP_MODE_REFLECTION";if(l.envMap)switch(l.envMapMode){case Sr:e="ENVMAP_MODE_REFRACTION";break}return e}function yw(l){let e="ENVMAP_BLENDING_NONE";if(l.envMap)switch(l.combine){case ya:e="ENVMAP_BLENDING_MULTIPLY";break;case c0:e="ENVMAP_BLENDING_MIX";break;case u0:e="ENVMAP_BLENDING_ADD";break}return e}function _w(l){const e=l.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e)-2,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function Mw(l,e,t,n){const i=l.getContext(),r=t.defines;let a=t.vertexShader,c=t.fragmentShader;const u=gw(t),h=vw(t),d=xw(t),p=yw(t),m=_w(t),v=t.isWebGL2?"":cw(t),y=uw(r),x=i.createProgram();let _,S,w=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(_=[y].filter(Qo).join(`
`),_.length>0&&(_+=`
`),S=[v,y].filter(Qo).join(`
`),S.length>0&&(S+=`
`)):(_=[Om(t),"#define SHADER_NAME "+t.shaderName,y,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"",t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+d:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(Qo).join(`
`),S=[v,Om(t),"#define SHADER_NAME "+t.shaderName,y,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+d:"",t.envMap?"#define "+p:"",m?"#define CUBEUV_TEXEL_WIDTH "+m.texelWidth:"",m?"#define CUBEUV_TEXEL_HEIGHT "+m.texelHeight:"",m?"#define CUBEUV_MAX_MIP "+m.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.iridescence?"#define USE_IRIDESCENCE":"",t.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",t.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+u:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==di?"#define TONE_MAPPING":"",t.toneMapping!==di?ht.tonemapping_pars_fragment:"",t.toneMapping!==di?lw("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",ht.encodings_pars_fragment,aw("linearToOutputTexel",t.outputEncoding),t.useDepthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(Qo).join(`
`)),a=Ef(a),a=Dm(a,t),a=zm(a,t),c=Ef(c),c=Dm(c,t),c=zm(c,t),a=Nm(a),c=Nm(c),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(w=`#version 300 es
`,_=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+_,S=["#define varying in",t.glslVersion===wf?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===wf?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+S);const T=w+_+a,E=w+S+c,C=Rm(i,35633,T),P=Rm(i,35632,E);if(i.attachShader(x,C),i.attachShader(x,P),t.index0AttributeName!==void 0?i.bindAttribLocation(x,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(x,0,"position"),i.linkProgram(x),l.debug.checkShaderErrors){const L=i.getProgramInfoLog(x).trim(),F=i.getShaderInfoLog(C).trim(),q=i.getShaderInfoLog(P).trim();let se=!0,J=!0;if(i.getProgramParameter(x,35714)===!1){se=!1;const W=Im(i,C,"vertex"),$=Im(i,P,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(x,35715)+`

Program Info Log: `+L+`
`+W+`
`+$)}else L!==""?console.warn("THREE.WebGLProgram: Program Info Log:",L):(F===""||q==="")&&(J=!1);J&&(this.diagnostics={runnable:se,programLog:L,vertexShader:{log:F,prefix:_},fragmentShader:{log:q,prefix:S}})}i.deleteShader(C),i.deleteShader(P);let N;this.getUniforms=function(){return N===void 0&&(N=new Rc(i,x)),N};let A;return this.getAttributes=function(){return A===void 0&&(A=hw(i,x)),A},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(x),this.program=void 0},this.name=t.shaderName,this.id=rw++,this.cacheKey=e,this.usedTimes=1,this.program=x,this.vertexShader=C,this.fragmentShader=P,this}let Sw=0;class ww{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),r=this._getShaderStage(n),a=this._getShaderCacheForMaterial(e);return a.has(i)===!1&&(a.add(i),i.usedTimes++),a.has(r)===!1&&(a.add(r),r.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;let n=t.get(e);return n===void 0&&(n=new Set,t.set(e,n)),n}_getShaderStage(e){const t=this.shaderCache;let n=t.get(e);return n===void 0&&(n=new bw(e),t.set(e,n)),n}}class bw{constructor(e){this.id=Sw++,this.code=e,this.usedTimes=0}}function Tw(l,e,t,n,i,r,a){const c=new ls,u=new ww,h=[],d=i.isWebGL2,p=i.logarithmicDepthBuffer,m=i.vertexTextures;let v=i.precision;const y={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function x(A,L,F,q,se){const J=q.fog,W=se.geometry,$=A.isMeshStandardMaterial?q.environment:null,te=(A.isMeshStandardMaterial?t:e).get(A.envMap||$),pe=!!te&&te.mapping===ho?te.image.height:null,V=y[A.type];A.precision!==null&&(v=i.getMaxPrecision(A.precision),v!==A.precision&&console.warn("THREE.WebGLProgram.getParameters:",A.precision,"not supported, using",v,"instead."));const k=W.morphAttributes.position||W.morphAttributes.normal||W.morphAttributes.color,U=k!==void 0?k.length:0;let le=0;W.morphAttributes.position!==void 0&&(le=1),W.morphAttributes.normal!==void 0&&(le=2),W.morphAttributes.color!==void 0&&(le=3);let re,me,Ee,Ve;if(V){const Ze=fi[V];re=Ze.vertexShader,me=Ze.fragmentShader}else re=A.vertexShader,me=A.fragmentShader,u.update(A),Ee=u.getVertexShaderID(A),Ve=u.getFragmentShaderID(A);const oe=l.getRenderTarget(),je=A.alphaTest>0,Ge=A.clearcoat>0,Ye=A.iridescence>0;return{isWebGL2:d,shaderID:V,shaderName:A.type,vertexShader:re,fragmentShader:me,defines:A.defines,customVertexShaderID:Ee,customFragmentShaderID:Ve,isRawShaderMaterial:A.isRawShaderMaterial===!0,glslVersion:A.glslVersion,precision:v,instancing:se.isInstancedMesh===!0,instancingColor:se.isInstancedMesh===!0&&se.instanceColor!==null,supportsVertexTextures:m,outputEncoding:oe===null?l.outputEncoding:oe.isXRRenderTarget===!0?oe.texture.encoding:ji,map:!!A.map,matcap:!!A.matcap,envMap:!!te,envMapMode:te&&te.mapping,envMapCubeUVHeight:pe,lightMap:!!A.lightMap,aoMap:!!A.aoMap,emissiveMap:!!A.emissiveMap,bumpMap:!!A.bumpMap,normalMap:!!A.normalMap,objectSpaceNormalMap:A.normalMapType===N0,tangentSpaceNormalMap:A.normalMapType===Er,decodeVideoTexture:!!A.map&&A.map.isVideoTexture===!0&&A.map.encoding===Lt,clearcoat:Ge,clearcoatMap:Ge&&!!A.clearcoatMap,clearcoatRoughnessMap:Ge&&!!A.clearcoatRoughnessMap,clearcoatNormalMap:Ge&&!!A.clearcoatNormalMap,iridescence:Ye,iridescenceMap:Ye&&!!A.iridescenceMap,iridescenceThicknessMap:Ye&&!!A.iridescenceThicknessMap,displacementMap:!!A.displacementMap,roughnessMap:!!A.roughnessMap,metalnessMap:!!A.metalnessMap,specularMap:!!A.specularMap,specularIntensityMap:!!A.specularIntensityMap,specularColorMap:!!A.specularColorMap,opaque:A.transparent===!1&&A.blending===rs,alphaMap:!!A.alphaMap,alphaTest:je,gradientMap:!!A.gradientMap,sheen:A.sheen>0,sheenColorMap:!!A.sheenColorMap,sheenRoughnessMap:!!A.sheenRoughnessMap,transmission:A.transmission>0,transmissionMap:!!A.transmissionMap,thicknessMap:!!A.thicknessMap,combine:A.combine,vertexTangents:!!A.normalMap&&!!W.attributes.tangent,vertexColors:A.vertexColors,vertexAlphas:A.vertexColors===!0&&!!W.attributes.color&&W.attributes.color.itemSize===4,vertexUvs:!!A.map||!!A.bumpMap||!!A.normalMap||!!A.specularMap||!!A.alphaMap||!!A.emissiveMap||!!A.roughnessMap||!!A.metalnessMap||!!A.clearcoatMap||!!A.clearcoatRoughnessMap||!!A.clearcoatNormalMap||!!A.iridescenceMap||!!A.iridescenceThicknessMap||!!A.displacementMap||!!A.transmissionMap||!!A.thicknessMap||!!A.specularIntensityMap||!!A.specularColorMap||!!A.sheenColorMap||!!A.sheenRoughnessMap,uvsVertexOnly:!(!!A.map||!!A.bumpMap||!!A.normalMap||!!A.specularMap||!!A.alphaMap||!!A.emissiveMap||!!A.roughnessMap||!!A.metalnessMap||!!A.clearcoatNormalMap||!!A.iridescenceMap||!!A.iridescenceThicknessMap||A.transmission>0||!!A.transmissionMap||!!A.thicknessMap||!!A.specularIntensityMap||!!A.specularColorMap||A.sheen>0||!!A.sheenColorMap||!!A.sheenRoughnessMap)&&!!A.displacementMap,fog:!!J,useFog:A.fog===!0,fogExp2:J&&J.isFogExp2,flatShading:!!A.flatShading,sizeAttenuation:A.sizeAttenuation,logarithmicDepthBuffer:p,skinning:se.isSkinnedMesh===!0,morphTargets:W.morphAttributes.position!==void 0,morphNormals:W.morphAttributes.normal!==void 0,morphColors:W.morphAttributes.color!==void 0,morphTargetsCount:U,morphTextureStride:le,numDirLights:L.directional.length,numPointLights:L.point.length,numSpotLights:L.spot.length,numSpotLightMaps:L.spotLightMap.length,numRectAreaLights:L.rectArea.length,numHemiLights:L.hemi.length,numDirLightShadows:L.directionalShadowMap.length,numPointLightShadows:L.pointShadowMap.length,numSpotLightShadows:L.spotShadowMap.length,numSpotLightShadowsWithMaps:L.numSpotLightShadowsWithMaps,numClippingPlanes:a.numPlanes,numClipIntersection:a.numIntersection,dithering:A.dithering,shadowMapEnabled:l.shadowMap.enabled&&F.length>0,shadowMapType:l.shadowMap.type,toneMapping:A.toneMapped?l.toneMapping:di,physicallyCorrectLights:l.physicallyCorrectLights,premultipliedAlpha:A.premultipliedAlpha,doubleSided:A.side===Xi,flipSided:A.side===Fn,useDepthPacking:!!A.depthPacking,depthPacking:A.depthPacking||0,index0AttributeName:A.index0AttributeName,extensionDerivatives:A.extensions&&A.extensions.derivatives,extensionFragDepth:A.extensions&&A.extensions.fragDepth,extensionDrawBuffers:A.extensions&&A.extensions.drawBuffers,extensionShaderTextureLOD:A.extensions&&A.extensions.shaderTextureLOD,rendererExtensionFragDepth:d||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:d||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:d||n.has("EXT_shader_texture_lod"),customProgramCacheKey:A.customProgramCacheKey()}}function _(A){const L=[];if(A.shaderID?L.push(A.shaderID):(L.push(A.customVertexShaderID),L.push(A.customFragmentShaderID)),A.defines!==void 0)for(const F in A.defines)L.push(F),L.push(A.defines[F]);return A.isRawShaderMaterial===!1&&(S(L,A),w(L,A),L.push(l.outputEncoding)),L.push(A.customProgramCacheKey),L.join()}function S(A,L){A.push(L.precision),A.push(L.outputEncoding),A.push(L.envMapMode),A.push(L.envMapCubeUVHeight),A.push(L.combine),A.push(L.vertexUvs),A.push(L.fogExp2),A.push(L.sizeAttenuation),A.push(L.morphTargetsCount),A.push(L.morphAttributeCount),A.push(L.numDirLights),A.push(L.numPointLights),A.push(L.numSpotLights),A.push(L.numSpotLightMaps),A.push(L.numHemiLights),A.push(L.numRectAreaLights),A.push(L.numDirLightShadows),A.push(L.numPointLightShadows),A.push(L.numSpotLightShadows),A.push(L.numSpotLightShadowsWithMaps),A.push(L.shadowMapType),A.push(L.toneMapping),A.push(L.numClippingPlanes),A.push(L.numClipIntersection),A.push(L.depthPacking)}function w(A,L){c.disableAll(),L.isWebGL2&&c.enable(0),L.supportsVertexTextures&&c.enable(1),L.instancing&&c.enable(2),L.instancingColor&&c.enable(3),L.map&&c.enable(4),L.matcap&&c.enable(5),L.envMap&&c.enable(6),L.lightMap&&c.enable(7),L.aoMap&&c.enable(8),L.emissiveMap&&c.enable(9),L.bumpMap&&c.enable(10),L.normalMap&&c.enable(11),L.objectSpaceNormalMap&&c.enable(12),L.tangentSpaceNormalMap&&c.enable(13),L.clearcoat&&c.enable(14),L.clearcoatMap&&c.enable(15),L.clearcoatRoughnessMap&&c.enable(16),L.clearcoatNormalMap&&c.enable(17),L.iridescence&&c.enable(18),L.iridescenceMap&&c.enable(19),L.iridescenceThicknessMap&&c.enable(20),L.displacementMap&&c.enable(21),L.specularMap&&c.enable(22),L.roughnessMap&&c.enable(23),L.metalnessMap&&c.enable(24),L.gradientMap&&c.enable(25),L.alphaMap&&c.enable(26),L.alphaTest&&c.enable(27),L.vertexColors&&c.enable(28),L.vertexAlphas&&c.enable(29),L.vertexUvs&&c.enable(30),L.vertexTangents&&c.enable(31),L.uvsVertexOnly&&c.enable(32),A.push(c.mask),c.disableAll(),L.fog&&c.enable(0),L.useFog&&c.enable(1),L.flatShading&&c.enable(2),L.logarithmicDepthBuffer&&c.enable(3),L.skinning&&c.enable(4),L.morphTargets&&c.enable(5),L.morphNormals&&c.enable(6),L.morphColors&&c.enable(7),L.premultipliedAlpha&&c.enable(8),L.shadowMapEnabled&&c.enable(9),L.physicallyCorrectLights&&c.enable(10),L.doubleSided&&c.enable(11),L.flipSided&&c.enable(12),L.useDepthPacking&&c.enable(13),L.dithering&&c.enable(14),L.specularIntensityMap&&c.enable(15),L.specularColorMap&&c.enable(16),L.transmission&&c.enable(17),L.transmissionMap&&c.enable(18),L.thicknessMap&&c.enable(19),L.sheen&&c.enable(20),L.sheenColorMap&&c.enable(21),L.sheenRoughnessMap&&c.enable(22),L.decodeVideoTexture&&c.enable(23),L.opaque&&c.enable(24),A.push(c.mask)}function T(A){const L=y[A.type];let F;if(L){const q=fi[L];F=B0.clone(q.uniforms)}else F=A.uniforms;return F}function E(A,L){let F;for(let q=0,se=h.length;q<se;q++){const J=h[q];if(J.cacheKey===L){F=J,++F.usedTimes;break}}return F===void 0&&(F=new Mw(l,L,A,r),h.push(F)),F}function C(A){if(--A.usedTimes===0){const L=h.indexOf(A);h[L]=h[h.length-1],h.pop(),A.destroy()}}function P(A){u.remove(A)}function N(){u.dispose()}return{getParameters:x,getProgramCacheKey:_,getUniforms:T,acquireProgram:E,releaseProgram:C,releaseShaderCache:P,programs:h,dispose:N}}function Ew(){let l=new WeakMap;function e(r){let a=l.get(r);return a===void 0&&(a={},l.set(r,a)),a}function t(r){l.delete(r)}function n(r,a,c){l.get(r)[a]=c}function i(){l=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function Aw(l,e){return l.groupOrder!==e.groupOrder?l.groupOrder-e.groupOrder:l.renderOrder!==e.renderOrder?l.renderOrder-e.renderOrder:l.material.id!==e.material.id?l.material.id-e.material.id:l.z!==e.z?l.z-e.z:l.id-e.id}function Fm(l,e){return l.groupOrder!==e.groupOrder?l.groupOrder-e.groupOrder:l.renderOrder!==e.renderOrder?l.renderOrder-e.renderOrder:l.z!==e.z?e.z-l.z:l.id-e.id}function km(){const l=[];let e=0;const t=[],n=[],i=[];function r(){e=0,t.length=0,n.length=0,i.length=0}function a(p,m,v,y,x,_){let S=l[e];return S===void 0?(S={id:p.id,object:p,geometry:m,material:v,groupOrder:y,renderOrder:p.renderOrder,z:x,group:_},l[e]=S):(S.id=p.id,S.object=p,S.geometry=m,S.material=v,S.groupOrder=y,S.renderOrder=p.renderOrder,S.z=x,S.group=_),e++,S}function c(p,m,v,y,x,_){const S=a(p,m,v,y,x,_);v.transmission>0?n.push(S):v.transparent===!0?i.push(S):t.push(S)}function u(p,m,v,y,x,_){const S=a(p,m,v,y,x,_);v.transmission>0?n.unshift(S):v.transparent===!0?i.unshift(S):t.unshift(S)}function h(p,m){t.length>1&&t.sort(p||Aw),n.length>1&&n.sort(m||Fm),i.length>1&&i.sort(m||Fm)}function d(){for(let p=e,m=l.length;p<m;p++){const v=l[p];if(v.id===null)break;v.id=null,v.object=null,v.geometry=null,v.material=null,v.group=null}}return{opaque:t,transmissive:n,transparent:i,init:r,push:c,unshift:u,finish:d,sort:h}}function Cw(){let l=new WeakMap;function e(n,i){const r=l.get(n);let a;return r===void 0?(a=new km,l.set(n,[a])):i>=r.length?(a=new km,r.push(a)):a=r[i],a}function t(){l=new WeakMap}return{get:e,dispose:t}}function Pw(){const l={};return{get:function(e){if(l[e.id]!==void 0)return l[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new I,color:new De};break;case"SpotLight":t={position:new I,direction:new I,color:new De,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new I,color:new De,distance:0,decay:0};break;case"HemisphereLight":t={direction:new I,skyColor:new De,groundColor:new De};break;case"RectAreaLight":t={color:new De,position:new I,halfWidth:new I,halfHeight:new I};break}return l[e.id]=t,t}}}function Lw(){const l={};return{get:function(e){if(l[e.id]!==void 0)return l[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new fe,shadowCameraNear:1,shadowCameraFar:1e3};break}return l[e.id]=t,t}}}let Rw=0;function Iw(l,e){return(e.castShadow?2:0)-(l.castShadow?2:0)+(e.map?1:0)-(l.map?1:0)}function Dw(l,e){const t=new Pw,n=Lw(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0};for(let d=0;d<9;d++)i.probe.push(new I);const r=new I,a=new ot,c=new ot;function u(d,p){let m=0,v=0,y=0;for(let q=0;q<9;q++)i.probe[q].set(0,0,0);let x=0,_=0,S=0,w=0,T=0,E=0,C=0,P=0,N=0,A=0;d.sort(Iw);const L=p!==!0?Math.PI:1;for(let q=0,se=d.length;q<se;q++){const J=d[q],W=J.color,$=J.intensity,te=J.distance,pe=J.shadow&&J.shadow.map?J.shadow.map.texture:null;if(J.isAmbientLight)m+=W.r*$*L,v+=W.g*$*L,y+=W.b*$*L;else if(J.isLightProbe)for(let V=0;V<9;V++)i.probe[V].addScaledVector(J.sh.coefficients[V],$);else if(J.isDirectionalLight){const V=t.get(J);if(V.color.copy(J.color).multiplyScalar(J.intensity*L),J.castShadow){const k=J.shadow,U=n.get(J);U.shadowBias=k.bias,U.shadowNormalBias=k.normalBias,U.shadowRadius=k.radius,U.shadowMapSize=k.mapSize,i.directionalShadow[x]=U,i.directionalShadowMap[x]=pe,i.directionalShadowMatrix[x]=J.shadow.matrix,E++}i.directional[x]=V,x++}else if(J.isSpotLight){const V=t.get(J);V.position.setFromMatrixPosition(J.matrixWorld),V.color.copy(W).multiplyScalar($*L),V.distance=te,V.coneCos=Math.cos(J.angle),V.penumbraCos=Math.cos(J.angle*(1-J.penumbra)),V.decay=J.decay,i.spot[S]=V;const k=J.shadow;if(J.map&&(i.spotLightMap[N]=J.map,N++,k.updateMatrices(J),J.castShadow&&A++),i.spotLightMatrix[S]=k.matrix,J.castShadow){const U=n.get(J);U.shadowBias=k.bias,U.shadowNormalBias=k.normalBias,U.shadowRadius=k.radius,U.shadowMapSize=k.mapSize,i.spotShadow[S]=U,i.spotShadowMap[S]=pe,P++}S++}else if(J.isRectAreaLight){const V=t.get(J);V.color.copy(W).multiplyScalar($),V.halfWidth.set(J.width*.5,0,0),V.halfHeight.set(0,J.height*.5,0),i.rectArea[w]=V,w++}else if(J.isPointLight){const V=t.get(J);if(V.color.copy(J.color).multiplyScalar(J.intensity*L),V.distance=J.distance,V.decay=J.decay,J.castShadow){const k=J.shadow,U=n.get(J);U.shadowBias=k.bias,U.shadowNormalBias=k.normalBias,U.shadowRadius=k.radius,U.shadowMapSize=k.mapSize,U.shadowCameraNear=k.camera.near,U.shadowCameraFar=k.camera.far,i.pointShadow[_]=U,i.pointShadowMap[_]=pe,i.pointShadowMatrix[_]=J.shadow.matrix,C++}i.point[_]=V,_++}else if(J.isHemisphereLight){const V=t.get(J);V.skyColor.copy(J.color).multiplyScalar($*L),V.groundColor.copy(J.groundColor).multiplyScalar($*L),i.hemi[T]=V,T++}}w>0&&(e.isWebGL2||l.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=we.LTC_FLOAT_1,i.rectAreaLTC2=we.LTC_FLOAT_2):l.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=we.LTC_HALF_1,i.rectAreaLTC2=we.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=m,i.ambient[1]=v,i.ambient[2]=y;const F=i.hash;(F.directionalLength!==x||F.pointLength!==_||F.spotLength!==S||F.rectAreaLength!==w||F.hemiLength!==T||F.numDirectionalShadows!==E||F.numPointShadows!==C||F.numSpotShadows!==P||F.numSpotMaps!==N)&&(i.directional.length=x,i.spot.length=S,i.rectArea.length=w,i.point.length=_,i.hemi.length=T,i.directionalShadow.length=E,i.directionalShadowMap.length=E,i.pointShadow.length=C,i.pointShadowMap.length=C,i.spotShadow.length=P,i.spotShadowMap.length=P,i.directionalShadowMatrix.length=E,i.pointShadowMatrix.length=C,i.spotLightMatrix.length=P+N-A,i.spotLightMap.length=N,i.numSpotLightShadowsWithMaps=A,F.directionalLength=x,F.pointLength=_,F.spotLength=S,F.rectAreaLength=w,F.hemiLength=T,F.numDirectionalShadows=E,F.numPointShadows=C,F.numSpotShadows=P,F.numSpotMaps=N,i.version=Rw++)}function h(d,p){let m=0,v=0,y=0,x=0,_=0;const S=p.matrixWorldInverse;for(let w=0,T=d.length;w<T;w++){const E=d[w];if(E.isDirectionalLight){const C=i.directional[m];C.direction.setFromMatrixPosition(E.matrixWorld),r.setFromMatrixPosition(E.target.matrixWorld),C.direction.sub(r),C.direction.transformDirection(S),m++}else if(E.isSpotLight){const C=i.spot[y];C.position.setFromMatrixPosition(E.matrixWorld),C.position.applyMatrix4(S),C.direction.setFromMatrixPosition(E.matrixWorld),r.setFromMatrixPosition(E.target.matrixWorld),C.direction.sub(r),C.direction.transformDirection(S),y++}else if(E.isRectAreaLight){const C=i.rectArea[x];C.position.setFromMatrixPosition(E.matrixWorld),C.position.applyMatrix4(S),c.identity(),a.copy(E.matrixWorld),a.premultiply(S),c.extractRotation(a),C.halfWidth.set(E.width*.5,0,0),C.halfHeight.set(0,E.height*.5,0),C.halfWidth.applyMatrix4(c),C.halfHeight.applyMatrix4(c),x++}else if(E.isPointLight){const C=i.point[v];C.position.setFromMatrixPosition(E.matrixWorld),C.position.applyMatrix4(S),v++}else if(E.isHemisphereLight){const C=i.hemi[_];C.direction.setFromMatrixPosition(E.matrixWorld),C.direction.transformDirection(S),_++}}}return{setup:u,setupView:h,state:i}}function Um(l,e){const t=new Dw(l,e),n=[],i=[];function r(){n.length=0,i.length=0}function a(p){n.push(p)}function c(p){i.push(p)}function u(p){t.setup(n,p)}function h(p){t.setupView(n,p)}return{init:r,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:u,setupLightsView:h,pushLight:a,pushShadow:c}}function zw(l,e){let t=new WeakMap;function n(r,a=0){const c=t.get(r);let u;return c===void 0?(u=new Um(l,e),t.set(r,[u])):a>=c.length?(u=new Um(l,e),c.push(u)):u=c[a],u}function i(){t=new WeakMap}return{get:n,dispose:i}}class Qf extends un{constructor(e){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=D0,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}class Kf extends un{constructor(e){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.referencePosition=new I,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}const Nw=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,Ow=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Fw(l,e,t){let n=new Wc;const i=new fe,r=new fe,a=new Tt,c=new Qf({depthPacking:z0}),u=new Kf,h={},d=t.maxTextureSize,p={0:Fn,1:us,2:Xi},m=new Ei({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new fe},radius:{value:4}},vertexShader:Nw,fragmentShader:Ow}),v=m.clone();v.defines.HORIZONTAL_PASS=1;const y=new ct;y.setAttribute("position",new Pt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const x=new cn(y,m),_=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=kf,this.render=function(E,C,P){if(_.enabled===!1||_.autoUpdate===!1&&_.needsUpdate===!1||E.length===0)return;const N=l.getRenderTarget(),A=l.getActiveCubeFace(),L=l.getActiveMipmapLevel(),F=l.state;F.setBlending(Zi),F.buffers.color.setClear(1,1,1,1),F.buffers.depth.setTest(!0),F.setScissorTest(!1);for(let q=0,se=E.length;q<se;q++){const J=E[q],W=J.shadow;if(W===void 0){console.warn("THREE.WebGLShadowMap:",J,"has no shadow.");continue}if(W.autoUpdate===!1&&W.needsUpdate===!1)continue;i.copy(W.mapSize);const $=W.getFrameExtents();if(i.multiply($),r.copy(W.mapSize),(i.x>d||i.y>d)&&(i.x>d&&(r.x=Math.floor(d/$.x),i.x=r.x*$.x,W.mapSize.x=r.x),i.y>d&&(r.y=Math.floor(d/$.y),i.y=r.y*$.y,W.mapSize.y=r.y)),W.map===null){const pe=this.type!==to?{minFilter:Jt,magFilter:Jt}:{};W.map=new ri(i.x,i.y,pe),W.map.texture.name=J.name+".shadowMap",W.camera.updateProjectionMatrix()}l.setRenderTarget(W.map),l.clear();const te=W.getViewportCount();for(let pe=0;pe<te;pe++){const V=W.getViewport(pe);a.set(r.x*V.x,r.y*V.y,r.x*V.z,r.y*V.w),F.viewport(a),W.updateMatrices(J,pe),n=W.getFrustum(),T(C,P,W.camera,J,this.type)}W.isPointLightShadow!==!0&&this.type===to&&S(W,P),W.needsUpdate=!1}_.needsUpdate=!1,l.setRenderTarget(N,A,L)};function S(E,C){const P=e.update(x);m.defines.VSM_SAMPLES!==E.blurSamples&&(m.defines.VSM_SAMPLES=E.blurSamples,v.defines.VSM_SAMPLES=E.blurSamples,m.needsUpdate=!0,v.needsUpdate=!0),E.mapPass===null&&(E.mapPass=new ri(i.x,i.y)),m.uniforms.shadow_pass.value=E.map.texture,m.uniforms.resolution.value=E.mapSize,m.uniforms.radius.value=E.radius,l.setRenderTarget(E.mapPass),l.clear(),l.renderBufferDirect(C,null,P,m,x,null),v.uniforms.shadow_pass.value=E.mapPass.texture,v.uniforms.resolution.value=E.mapSize,v.uniforms.radius.value=E.radius,l.setRenderTarget(E.map),l.clear(),l.renderBufferDirect(C,null,P,v,x,null)}function w(E,C,P,N,A,L){let F=null;const q=P.isPointLight===!0?E.customDistanceMaterial:E.customDepthMaterial;if(q!==void 0?F=q:F=P.isPointLight===!0?u:c,l.localClippingEnabled&&C.clipShadows===!0&&Array.isArray(C.clippingPlanes)&&C.clippingPlanes.length!==0||C.displacementMap&&C.displacementScale!==0||C.alphaMap&&C.alphaTest>0){const se=F.uuid,J=C.uuid;let W=h[se];W===void 0&&(W={},h[se]=W);let $=W[J];$===void 0&&($=F.clone(),W[J]=$),F=$}return F.visible=C.visible,F.wireframe=C.wireframe,L===to?F.side=C.shadowSide!==null?C.shadowSide:C.side:F.side=C.shadowSide!==null?C.shadowSide:p[C.side],F.alphaMap=C.alphaMap,F.alphaTest=C.alphaTest,F.clipShadows=C.clipShadows,F.clippingPlanes=C.clippingPlanes,F.clipIntersection=C.clipIntersection,F.displacementMap=C.displacementMap,F.displacementScale=C.displacementScale,F.displacementBias=C.displacementBias,F.wireframeLinewidth=C.wireframeLinewidth,F.linewidth=C.linewidth,P.isPointLight===!0&&F.isMeshDistanceMaterial===!0&&(F.referencePosition.setFromMatrixPosition(P.matrixWorld),F.nearDistance=N,F.farDistance=A),F}function T(E,C,P,N,A){if(E.visible===!1)return;if(E.layers.test(C.layers)&&(E.isMesh||E.isLine||E.isPoints)&&(E.castShadow||E.receiveShadow&&A===to)&&(!E.frustumCulled||n.intersectsObject(E))){E.modelViewMatrix.multiplyMatrices(P.matrixWorldInverse,E.matrixWorld);const q=e.update(E),se=E.material;if(Array.isArray(se)){const J=q.groups;for(let W=0,$=J.length;W<$;W++){const te=J[W],pe=se[te.materialIndex];if(pe&&pe.visible){const V=w(E,pe,N,P.near,P.far,A);l.renderBufferDirect(P,null,q,V,E,te)}}}else if(se.visible){const J=w(E,se,N,P.near,P.far,A);l.renderBufferDirect(P,null,q,J,E,null)}}const F=E.children;for(let q=0,se=F.length;q<se;q++)T(F[q],C,P,N,A)}}function kw(l,e,t){const n=t.isWebGL2;function i(){let H=!1;const Ie=new Tt;let Me=null;const ce=new Tt(0,0,0,0);return{setMask:function(xe){Me!==xe&&!H&&(l.colorMask(xe,xe,xe,xe),Me=xe)},setLocked:function(xe){H=xe},setClear:function(xe,Ke,Et,Rt,si){si===!0&&(xe*=Rt,Ke*=Rt,Et*=Rt),Ie.set(xe,Ke,Et,Rt),ce.equals(Ie)===!1&&(l.clearColor(xe,Ke,Et,Rt),ce.copy(Ie))},reset:function(){H=!1,Me=null,ce.set(-1,0,0,0)}}}function r(){let H=!1,Ie=null,Me=null,ce=null;return{setTest:function(xe){xe?je(2929):Ge(2929)},setMask:function(xe){Ie!==xe&&!H&&(l.depthMask(xe),Ie=xe)},setFunc:function(xe){if(Me!==xe){switch(xe){case n0:l.depthFunc(512);break;case i0:l.depthFunc(519);break;case r0:l.depthFunc(513);break;case Ic:l.depthFunc(515);break;case s0:l.depthFunc(514);break;case o0:l.depthFunc(518);break;case a0:l.depthFunc(516);break;case l0:l.depthFunc(517);break;default:l.depthFunc(515)}Me=xe}},setLocked:function(xe){H=xe},setClear:function(xe){ce!==xe&&(l.clearDepth(xe),ce=xe)},reset:function(){H=!1,Ie=null,Me=null,ce=null}}}function a(){let H=!1,Ie=null,Me=null,ce=null,xe=null,Ke=null,Et=null,Rt=null,si=null;return{setTest:function(It){H||(It?je(2960):Ge(2960))},setMask:function(It){Ie!==It&&!H&&(l.stencilMask(It),Ie=It)},setFunc:function(It,Bn,xn){(Me!==It||ce!==Bn||xe!==xn)&&(l.stencilFunc(It,Bn,xn),Me=It,ce=Bn,xe=xn)},setOp:function(It,Bn,xn){(Ke!==It||Et!==Bn||Rt!==xn)&&(l.stencilOp(It,Bn,xn),Ke=It,Et=Bn,Rt=xn)},setLocked:function(It){H=It},setClear:function(It){si!==It&&(l.clearStencil(It),si=It)},reset:function(){H=!1,Ie=null,Me=null,ce=null,xe=null,Ke=null,Et=null,Rt=null,si=null}}}const c=new i,u=new r,h=new a,d=new WeakMap,p=new WeakMap;let m={},v={},y=new WeakMap,x=[],_=null,S=!1,w=null,T=null,E=null,C=null,P=null,N=null,A=null,L=!1,F=null,q=null,se=null,J=null,W=null;const $=l.getParameter(35661);let te=!1,pe=0;const V=l.getParameter(7938);V.indexOf("WebGL")!==-1?(pe=parseFloat(/^WebGL (\d)/.exec(V)[1]),te=pe>=1):V.indexOf("OpenGL ES")!==-1&&(pe=parseFloat(/^OpenGL ES (\d)/.exec(V)[1]),te=pe>=2);let k=null,U={};const le=l.getParameter(3088),re=l.getParameter(2978),me=new Tt().fromArray(le),Ee=new Tt().fromArray(re);function Ve(H,Ie,Me){const ce=new Uint8Array(4),xe=l.createTexture();l.bindTexture(H,xe),l.texParameteri(H,10241,9728),l.texParameteri(H,10240,9728);for(let Ke=0;Ke<Me;Ke++)l.texImage2D(Ie+Ke,0,6408,1,1,0,6408,5121,ce);return xe}const oe={};oe[3553]=Ve(3553,3553,1),oe[34067]=Ve(34067,34069,6),c.setClear(0,0,0,1),u.setClear(1),h.setClear(0),je(2929),u.setFunc(Ic),Te(!1),$e(jh),je(2884),_e(Zi);function je(H){m[H]!==!0&&(l.enable(H),m[H]=!0)}function Ge(H){m[H]!==!1&&(l.disable(H),m[H]=!1)}function Ye(H,Ie){return v[H]!==Ie?(l.bindFramebuffer(H,Ie),v[H]=Ie,n&&(H===36009&&(v[36160]=Ie),H===36160&&(v[36009]=Ie)),!0):!1}function be(H,Ie){let Me=x,ce=!1;if(H)if(Me=y.get(Ie),Me===void 0&&(Me=[],y.set(Ie,Me)),H.isWebGLMultipleRenderTargets){const xe=H.texture;if(Me.length!==xe.length||Me[0]!==36064){for(let Ke=0,Et=xe.length;Ke<Et;Ke++)Me[Ke]=36064+Ke;Me.length=xe.length,ce=!0}}else Me[0]!==36064&&(Me[0]=36064,ce=!0);else Me[0]!==1029&&(Me[0]=1029,ce=!0);ce&&(t.isWebGL2?l.drawBuffers(Me):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(Me))}function Ze(H){return _!==H?(l.useProgram(H),_=H,!0):!1}const he={[Qr]:32774,[Xg]:32778,[qg]:32779};if(n)he[$h]=32775,he[ef]=32776;else{const H=e.get("EXT_blend_minmax");H!==null&&(he[$h]=H.MIN_EXT,he[ef]=H.MAX_EXT)}const ne={[Yg]:0,[Zg]:1,[jg]:768,[Bf]:770,[t0]:776,[$g]:774,[Qg]:772,[Jg]:769,[Vf]:771,[e0]:775,[Kg]:773};function _e(H,Ie,Me,ce,xe,Ke,Et,Rt){if(H===Zi){S===!0&&(Ge(3042),S=!1);return}if(S===!1&&(je(3042),S=!0),H!==Wg){if(H!==w||Rt!==L){if((T!==Qr||P!==Qr)&&(l.blendEquation(32774),T=Qr,P=Qr),Rt)switch(H){case rs:l.blendFuncSeparate(1,771,1,771);break;case Jh:l.blendFunc(1,1);break;case Qh:l.blendFuncSeparate(0,769,0,1);break;case Kh:l.blendFuncSeparate(0,768,0,770);break;default:console.error("THREE.WebGLState: Invalid blending: ",H);break}else switch(H){case rs:l.blendFuncSeparate(770,771,1,771);break;case Jh:l.blendFunc(770,1);break;case Qh:l.blendFuncSeparate(0,769,0,1);break;case Kh:l.blendFunc(0,768);break;default:console.error("THREE.WebGLState: Invalid blending: ",H);break}E=null,C=null,N=null,A=null,w=H,L=Rt}return}xe=xe||Ie,Ke=Ke||Me,Et=Et||ce,(Ie!==T||xe!==P)&&(l.blendEquationSeparate(he[Ie],he[xe]),T=Ie,P=xe),(Me!==E||ce!==C||Ke!==N||Et!==A)&&(l.blendFuncSeparate(ne[Me],ne[ce],ne[Ke],ne[Et]),E=Me,C=ce,N=Ke,A=Et),w=H,L=null}function Oe(H,Ie){H.side===Xi?Ge(2884):je(2884);let Me=H.side===Fn;Ie&&(Me=!Me),Te(Me),H.blending===rs&&H.transparent===!1?_e(Zi):_e(H.blending,H.blendEquation,H.blendSrc,H.blendDst,H.blendEquationAlpha,H.blendSrcAlpha,H.blendDstAlpha,H.premultipliedAlpha),u.setFunc(H.depthFunc),u.setTest(H.depthTest),u.setMask(H.depthWrite),c.setMask(H.colorWrite);const ce=H.stencilWrite;h.setTest(ce),ce&&(h.setMask(H.stencilWriteMask),h.setFunc(H.stencilFunc,H.stencilRef,H.stencilFuncMask),h.setOp(H.stencilFail,H.stencilZFail,H.stencilZPass)),He(H.polygonOffset,H.polygonOffsetFactor,H.polygonOffsetUnits),H.alphaToCoverage===!0?je(32926):Ge(32926)}function Te(H){F!==H&&(H?l.frontFace(2304):l.frontFace(2305),F=H)}function $e(H){H!==Hg?(je(2884),H!==q&&(H===jh?l.cullFace(1029):H===Gg?l.cullFace(1028):l.cullFace(1032))):Ge(2884),q=H}function We(H){H!==se&&(te&&l.lineWidth(H),se=H)}function He(H,Ie,Me){H?(je(32823),(J!==Ie||W!==Me)&&(l.polygonOffset(Ie,Me),J=Ie,W=Me)):Ge(32823)}function mt(H){H?je(3089):Ge(3089)}function wt(H){H===void 0&&(H=33984+$-1),k!==H&&(l.activeTexture(H),k=H)}function O(H,Ie,Me){Me===void 0&&(k===null?Me=33984+$-1:Me=k);let ce=U[Me];ce===void 0&&(ce={type:void 0,texture:void 0},U[Me]=ce),(ce.type!==H||ce.texture!==Ie)&&(k!==Me&&(l.activeTexture(Me),k=Me),l.bindTexture(H,Ie||oe[H]),ce.type=H,ce.texture=Ie)}function R(){const H=U[k];H!==void 0&&H.type!==void 0&&(l.bindTexture(H.type,null),H.type=void 0,H.texture=void 0)}function Q(){try{l.compressedTexImage2D.apply(l,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function ge(){try{l.texSubImage2D.apply(l,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Se(){try{l.texSubImage3D.apply(l,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Ae(){try{l.compressedTexSubImage2D.apply(l,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Je(){try{l.texStorage2D.apply(l,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function Ce(){try{l.texStorage3D.apply(l,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function de(){try{l.texImage2D.apply(l,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function ke(){try{l.texImage3D.apply(l,arguments)}catch(H){console.error("THREE.WebGLState:",H)}}function B(H){me.equals(H)===!1&&(l.scissor(H.x,H.y,H.z,H.w),me.copy(H))}function ee(H){Ee.equals(H)===!1&&(l.viewport(H.x,H.y,H.z,H.w),Ee.copy(H))}function ve(H,Ie){let Me=p.get(Ie);Me===void 0&&(Me=new WeakMap,p.set(Ie,Me));let ce=Me.get(H);ce===void 0&&(ce=l.getUniformBlockIndex(Ie,H.name),Me.set(H,ce))}function Le(H,Ie){const ce=p.get(Ie).get(H);d.get(H)!==ce&&(l.uniformBlockBinding(Ie,ce,H.__bindingPointIndex),d.set(H,ce))}function Qe(){l.disable(3042),l.disable(2884),l.disable(2929),l.disable(32823),l.disable(3089),l.disable(2960),l.disable(32926),l.blendEquation(32774),l.blendFunc(1,0),l.blendFuncSeparate(1,0,1,0),l.colorMask(!0,!0,!0,!0),l.clearColor(0,0,0,0),l.depthMask(!0),l.depthFunc(513),l.clearDepth(1),l.stencilMask(4294967295),l.stencilFunc(519,0,4294967295),l.stencilOp(7680,7680,7680),l.clearStencil(0),l.cullFace(1029),l.frontFace(2305),l.polygonOffset(0,0),l.activeTexture(33984),l.bindFramebuffer(36160,null),n===!0&&(l.bindFramebuffer(36009,null),l.bindFramebuffer(36008,null)),l.useProgram(null),l.lineWidth(1),l.scissor(0,0,l.canvas.width,l.canvas.height),l.viewport(0,0,l.canvas.width,l.canvas.height),m={},k=null,U={},v={},y=new WeakMap,x=[],_=null,S=!1,w=null,T=null,E=null,C=null,P=null,N=null,A=null,L=!1,F=null,q=null,se=null,J=null,W=null,me.set(0,0,l.canvas.width,l.canvas.height),Ee.set(0,0,l.canvas.width,l.canvas.height),c.reset(),u.reset(),h.reset()}return{buffers:{color:c,depth:u,stencil:h},enable:je,disable:Ge,bindFramebuffer:Ye,drawBuffers:be,useProgram:Ze,setBlending:_e,setMaterial:Oe,setFlipSided:Te,setCullFace:$e,setLineWidth:We,setPolygonOffset:He,setScissorTest:mt,activeTexture:wt,bindTexture:O,unbindTexture:R,compressedTexImage2D:Q,texImage2D:de,texImage3D:ke,updateUBOMapping:ve,uniformBlockBinding:Le,texStorage2D:Je,texStorage3D:Ce,texSubImage2D:ge,texSubImage3D:Se,compressedTexSubImage2D:Ae,scissor:B,viewport:ee,reset:Qe}}function Uw(l,e,t,n,i,r,a){const c=i.isWebGL2,u=i.maxTextures,h=i.maxCubemapSize,d=i.maxTextureSize,p=i.maxSamples,m=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,v=/OculusBrowser/g.test(navigator.userAgent),y=new WeakMap;let x;const _=new WeakMap;let S=!1;try{S=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function w(O,R){return S?new OffscreenCanvas(O,R):ua("canvas")}function T(O,R,Q,ge){let Se=1;if((O.width>ge||O.height>ge)&&(Se=ge/Math.max(O.width,O.height)),Se<1||R===!0)if(typeof HTMLImageElement<"u"&&O instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&O instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&O instanceof ImageBitmap){const Ae=R?Oc:Math.floor,Je=Ae(Se*O.width),Ce=Ae(Se*O.height);x===void 0&&(x=w(Je,Ce));const de=Q?w(Je,Ce):x;return de.width=Je,de.height=Ce,de.getContext("2d").drawImage(O,0,0,Je,Ce),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+O.width+"x"+O.height+") to ("+Je+"x"+Ce+")."),de}else return"data"in O&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+O.width+"x"+O.height+")."),O;return O}function E(O){return bf(O.width)&&bf(O.height)}function C(O){return c?!1:O.wrapS!==Sn||O.wrapT!==Sn||O.minFilter!==Jt&&O.minFilter!==Xt}function P(O,R){return O.generateMipmaps&&R&&O.minFilter!==Jt&&O.minFilter!==Xt}function N(O){l.generateMipmap(O)}function A(O,R,Q,ge,Se=!1){if(c===!1)return R;if(O!==null){if(l[O]!==void 0)return l[O];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+O+"'")}let Ae=R;return R===6403&&(Q===5126&&(Ae=33326),Q===5131&&(Ae=33325),Q===5121&&(Ae=33321)),R===33319&&(Q===5126&&(Ae=33328),Q===5131&&(Ae=33327),Q===5121&&(Ae=33323)),R===6408&&(Q===5126&&(Ae=34836),Q===5131&&(Ae=34842),Q===5121&&(Ae=ge===Lt&&Se===!1?35907:32856),Q===32819&&(Ae=32854),Q===32820&&(Ae=32855)),(Ae===33325||Ae===33326||Ae===33327||Ae===33328||Ae===34842||Ae===34836)&&e.get("EXT_color_buffer_float"),Ae}function L(O,R,Q){return P(O,Q)===!0||O.isFramebufferTexture&&O.minFilter!==Jt&&O.minFilter!==Xt?Math.log2(Math.max(R.width,R.height))+1:O.mipmaps!==void 0&&O.mipmaps.length>0?O.mipmaps.length:O.isCompressedTexture&&Array.isArray(O.image)?R.mipmaps.length:1}function F(O){return O===Jt||O===Dc||O===zc?9728:9729}function q(O){const R=O.target;R.removeEventListener("dispose",q),J(R),R.isVideoTexture&&y.delete(R)}function se(O){const R=O.target;R.removeEventListener("dispose",se),$(R)}function J(O){const R=n.get(O);if(R.__webglInit===void 0)return;const Q=O.source,ge=_.get(Q);if(ge){const Se=ge[R.__cacheKey];Se.usedTimes--,Se.usedTimes===0&&W(O),Object.keys(ge).length===0&&_.delete(Q)}n.remove(O)}function W(O){const R=n.get(O);l.deleteTexture(R.__webglTexture);const Q=O.source,ge=_.get(Q);delete ge[R.__cacheKey],a.memory.textures--}function $(O){const R=O.texture,Q=n.get(O),ge=n.get(R);if(ge.__webglTexture!==void 0&&(l.deleteTexture(ge.__webglTexture),a.memory.textures--),O.depthTexture&&O.depthTexture.dispose(),O.isWebGLCubeRenderTarget)for(let Se=0;Se<6;Se++)l.deleteFramebuffer(Q.__webglFramebuffer[Se]),Q.__webglDepthbuffer&&l.deleteRenderbuffer(Q.__webglDepthbuffer[Se]);else{if(l.deleteFramebuffer(Q.__webglFramebuffer),Q.__webglDepthbuffer&&l.deleteRenderbuffer(Q.__webglDepthbuffer),Q.__webglMultisampledFramebuffer&&l.deleteFramebuffer(Q.__webglMultisampledFramebuffer),Q.__webglColorRenderbuffer)for(let Se=0;Se<Q.__webglColorRenderbuffer.length;Se++)Q.__webglColorRenderbuffer[Se]&&l.deleteRenderbuffer(Q.__webglColorRenderbuffer[Se]);Q.__webglDepthRenderbuffer&&l.deleteRenderbuffer(Q.__webglDepthRenderbuffer)}if(O.isWebGLMultipleRenderTargets)for(let Se=0,Ae=R.length;Se<Ae;Se++){const Je=n.get(R[Se]);Je.__webglTexture&&(l.deleteTexture(Je.__webglTexture),a.memory.textures--),n.remove(R[Se])}n.remove(R),n.remove(O)}let te=0;function pe(){te=0}function V(){const O=te;return O>=u&&console.warn("THREE.WebGLTextures: Trying to use "+O+" texture units while this GPU supports only "+u),te+=1,O}function k(O){const R=[];return R.push(O.wrapS),R.push(O.wrapT),R.push(O.magFilter),R.push(O.minFilter),R.push(O.anisotropy),R.push(O.internalFormat),R.push(O.format),R.push(O.type),R.push(O.generateMipmaps),R.push(O.premultiplyAlpha),R.push(O.flipY),R.push(O.unpackAlignment),R.push(O.encoding),R.join()}function U(O,R){const Q=n.get(O);if(O.isVideoTexture&&mt(O),O.isRenderTargetTexture===!1&&O.version>0&&Q.__version!==O.version){const ge=O.image;if(ge===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ge.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{Ge(Q,O,R);return}}t.bindTexture(3553,Q.__webglTexture,33984+R)}function le(O,R){const Q=n.get(O);if(O.version>0&&Q.__version!==O.version){Ge(Q,O,R);return}t.bindTexture(35866,Q.__webglTexture,33984+R)}function re(O,R){const Q=n.get(O);if(O.version>0&&Q.__version!==O.version){Ge(Q,O,R);return}t.bindTexture(32879,Q.__webglTexture,33984+R)}function me(O,R){const Q=n.get(O);if(O.version>0&&Q.__version!==O.version){Ye(Q,O,R);return}t.bindTexture(34067,Q.__webglTexture,33984+R)}const Ee={[ia]:10497,[Sn]:33071,[ra]:33648},Ve={[Jt]:9728,[Dc]:9984,[zc]:9986,[Xt]:9729,[Gf]:9985,[ps]:9987};function oe(O,R,Q){if(Q?(l.texParameteri(O,10242,Ee[R.wrapS]),l.texParameteri(O,10243,Ee[R.wrapT]),(O===32879||O===35866)&&l.texParameteri(O,32882,Ee[R.wrapR]),l.texParameteri(O,10240,Ve[R.magFilter]),l.texParameteri(O,10241,Ve[R.minFilter])):(l.texParameteri(O,10242,33071),l.texParameteri(O,10243,33071),(O===32879||O===35866)&&l.texParameteri(O,32882,33071),(R.wrapS!==Sn||R.wrapT!==Sn)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),l.texParameteri(O,10240,F(R.magFilter)),l.texParameteri(O,10241,F(R.minFilter)),R.minFilter!==Jt&&R.minFilter!==Xt&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const ge=e.get("EXT_texture_filter_anisotropic");if(R.type===qi&&e.has("OES_texture_float_linear")===!1||c===!1&&R.type===ao&&e.has("OES_texture_half_float_linear")===!1)return;(R.anisotropy>1||n.get(R).__currentAnisotropy)&&(l.texParameterf(O,ge.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(R.anisotropy,i.getMaxAnisotropy())),n.get(R).__currentAnisotropy=R.anisotropy)}}function je(O,R){let Q=!1;O.__webglInit===void 0&&(O.__webglInit=!0,R.addEventListener("dispose",q));const ge=R.source;let Se=_.get(ge);Se===void 0&&(Se={},_.set(ge,Se));const Ae=k(R);if(Ae!==O.__cacheKey){Se[Ae]===void 0&&(Se[Ae]={texture:l.createTexture(),usedTimes:0},a.memory.textures++,Q=!0),Se[Ae].usedTimes++;const Je=Se[O.__cacheKey];Je!==void 0&&(Se[O.__cacheKey].usedTimes--,Je.usedTimes===0&&W(R)),O.__cacheKey=Ae,O.__webglTexture=Se[Ae].texture}return Q}function Ge(O,R,Q){let ge=3553;R.isDataArrayTexture&&(ge=35866),R.isData3DTexture&&(ge=32879);const Se=je(O,R),Ae=R.source;t.bindTexture(ge,O.__webglTexture,33984+Q);const Je=n.get(Ae);if(Ae.version!==Je.__version||Se===!0){t.activeTexture(33984+Q),l.pixelStorei(37440,R.flipY),l.pixelStorei(37441,R.premultiplyAlpha),l.pixelStorei(3317,R.unpackAlignment),l.pixelStorei(37443,0);const Ce=C(R)&&E(R.image)===!1;let de=T(R.image,Ce,!1,d);de=wt(R,de);const ke=E(de)||c,B=r.convert(R.format,R.encoding);let ee=r.convert(R.type),ve=A(R.internalFormat,B,ee,R.encoding,R.isVideoTexture);oe(ge,R,ke);let Le;const Qe=R.mipmaps,H=c&&R.isVideoTexture!==!0,Ie=Je.__version===void 0||Se===!0,Me=L(R,de,ke);if(R.isDepthTexture)ve=6402,c?R.type===qi?ve=36012:R.type===vr?ve=33190:R.type===ss?ve=35056:ve=33189:R.type===qi&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),R.format===yr&&ve===6402&&R.type!==Wf&&R.type!==vr&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),R.type=vr,ee=r.convert(R.type)),R.format===hs&&ve===6402&&(ve=34041,R.type!==ss&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),R.type=ss,ee=r.convert(R.type))),Ie&&(H?t.texStorage2D(3553,1,ve,de.width,de.height):t.texImage2D(3553,0,ve,de.width,de.height,0,B,ee,null));else if(R.isDataTexture)if(Qe.length>0&&ke){H&&Ie&&t.texStorage2D(3553,Me,ve,Qe[0].width,Qe[0].height);for(let ce=0,xe=Qe.length;ce<xe;ce++)Le=Qe[ce],H?t.texSubImage2D(3553,ce,0,0,Le.width,Le.height,B,ee,Le.data):t.texImage2D(3553,ce,ve,Le.width,Le.height,0,B,ee,Le.data);R.generateMipmaps=!1}else H?(Ie&&t.texStorage2D(3553,Me,ve,de.width,de.height),t.texSubImage2D(3553,0,0,0,de.width,de.height,B,ee,de.data)):t.texImage2D(3553,0,ve,de.width,de.height,0,B,ee,de.data);else if(R.isCompressedTexture){H&&Ie&&t.texStorage2D(3553,Me,ve,Qe[0].width,Qe[0].height);for(let ce=0,xe=Qe.length;ce<xe;ce++)Le=Qe[ce],R.format!==ii?B!==null?H?t.compressedTexSubImage2D(3553,ce,0,0,Le.width,Le.height,B,Le.data):t.compressedTexImage2D(3553,ce,ve,Le.width,Le.height,0,Le.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):H?t.texSubImage2D(3553,ce,0,0,Le.width,Le.height,B,ee,Le.data):t.texImage2D(3553,ce,ve,Le.width,Le.height,0,B,ee,Le.data)}else if(R.isDataArrayTexture)H?(Ie&&t.texStorage3D(35866,Me,ve,de.width,de.height,de.depth),t.texSubImage3D(35866,0,0,0,0,de.width,de.height,de.depth,B,ee,de.data)):t.texImage3D(35866,0,ve,de.width,de.height,de.depth,0,B,ee,de.data);else if(R.isData3DTexture)H?(Ie&&t.texStorage3D(32879,Me,ve,de.width,de.height,de.depth),t.texSubImage3D(32879,0,0,0,0,de.width,de.height,de.depth,B,ee,de.data)):t.texImage3D(32879,0,ve,de.width,de.height,de.depth,0,B,ee,de.data);else if(R.isFramebufferTexture){if(Ie)if(H)t.texStorage2D(3553,Me,ve,de.width,de.height);else{let ce=de.width,xe=de.height;for(let Ke=0;Ke<Me;Ke++)t.texImage2D(3553,Ke,ve,ce,xe,0,B,ee,null),ce>>=1,xe>>=1}}else if(Qe.length>0&&ke){H&&Ie&&t.texStorage2D(3553,Me,ve,Qe[0].width,Qe[0].height);for(let ce=0,xe=Qe.length;ce<xe;ce++)Le=Qe[ce],H?t.texSubImage2D(3553,ce,0,0,B,ee,Le):t.texImage2D(3553,ce,ve,B,ee,Le);R.generateMipmaps=!1}else H?(Ie&&t.texStorage2D(3553,Me,ve,de.width,de.height),t.texSubImage2D(3553,0,0,0,B,ee,de)):t.texImage2D(3553,0,ve,B,ee,de);P(R,ke)&&N(ge),Je.__version=Ae.version,R.onUpdate&&R.onUpdate(R)}O.__version=R.version}function Ye(O,R,Q){if(R.image.length!==6)return;const ge=je(O,R),Se=R.source;t.bindTexture(34067,O.__webglTexture,33984+Q);const Ae=n.get(Se);if(Se.version!==Ae.__version||ge===!0){t.activeTexture(33984+Q),l.pixelStorei(37440,R.flipY),l.pixelStorei(37441,R.premultiplyAlpha),l.pixelStorei(3317,R.unpackAlignment),l.pixelStorei(37443,0);const Je=R.isCompressedTexture||R.image[0].isCompressedTexture,Ce=R.image[0]&&R.image[0].isDataTexture,de=[];for(let ce=0;ce<6;ce++)!Je&&!Ce?de[ce]=T(R.image[ce],!1,!0,h):de[ce]=Ce?R.image[ce].image:R.image[ce],de[ce]=wt(R,de[ce]);const ke=de[0],B=E(ke)||c,ee=r.convert(R.format,R.encoding),ve=r.convert(R.type),Le=A(R.internalFormat,ee,ve,R.encoding),Qe=c&&R.isVideoTexture!==!0,H=Ae.__version===void 0||ge===!0;let Ie=L(R,ke,B);oe(34067,R,B);let Me;if(Je){Qe&&H&&t.texStorage2D(34067,Ie,Le,ke.width,ke.height);for(let ce=0;ce<6;ce++){Me=de[ce].mipmaps;for(let xe=0;xe<Me.length;xe++){const Ke=Me[xe];R.format!==ii?ee!==null?Qe?t.compressedTexSubImage2D(34069+ce,xe,0,0,Ke.width,Ke.height,ee,Ke.data):t.compressedTexImage2D(34069+ce,xe,Le,Ke.width,Ke.height,0,Ke.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Qe?t.texSubImage2D(34069+ce,xe,0,0,Ke.width,Ke.height,ee,ve,Ke.data):t.texImage2D(34069+ce,xe,Le,Ke.width,Ke.height,0,ee,ve,Ke.data)}}}else{Me=R.mipmaps,Qe&&H&&(Me.length>0&&Ie++,t.texStorage2D(34067,Ie,Le,de[0].width,de[0].height));for(let ce=0;ce<6;ce++)if(Ce){Qe?t.texSubImage2D(34069+ce,0,0,0,de[ce].width,de[ce].height,ee,ve,de[ce].data):t.texImage2D(34069+ce,0,Le,de[ce].width,de[ce].height,0,ee,ve,de[ce].data);for(let xe=0;xe<Me.length;xe++){const Et=Me[xe].image[ce].image;Qe?t.texSubImage2D(34069+ce,xe+1,0,0,Et.width,Et.height,ee,ve,Et.data):t.texImage2D(34069+ce,xe+1,Le,Et.width,Et.height,0,ee,ve,Et.data)}}else{Qe?t.texSubImage2D(34069+ce,0,0,0,ee,ve,de[ce]):t.texImage2D(34069+ce,0,Le,ee,ve,de[ce]);for(let xe=0;xe<Me.length;xe++){const Ke=Me[xe];Qe?t.texSubImage2D(34069+ce,xe+1,0,0,ee,ve,Ke.image[ce]):t.texImage2D(34069+ce,xe+1,Le,ee,ve,Ke.image[ce])}}}P(R,B)&&N(34067),Ae.__version=Se.version,R.onUpdate&&R.onUpdate(R)}O.__version=R.version}function be(O,R,Q,ge,Se){const Ae=r.convert(Q.format,Q.encoding),Je=r.convert(Q.type),Ce=A(Q.internalFormat,Ae,Je,Q.encoding);n.get(R).__hasExternalTextures||(Se===32879||Se===35866?t.texImage3D(Se,0,Ce,R.width,R.height,R.depth,0,Ae,Je,null):t.texImage2D(Se,0,Ce,R.width,R.height,0,Ae,Je,null)),t.bindFramebuffer(36160,O),He(R)?m.framebufferTexture2DMultisampleEXT(36160,ge,Se,n.get(Q).__webglTexture,0,We(R)):l.framebufferTexture2D(36160,ge,Se,n.get(Q).__webglTexture,0),t.bindFramebuffer(36160,null)}function Ze(O,R,Q){if(l.bindRenderbuffer(36161,O),R.depthBuffer&&!R.stencilBuffer){let ge=33189;if(Q||He(R)){const Se=R.depthTexture;Se&&Se.isDepthTexture&&(Se.type===qi?ge=36012:Se.type===vr&&(ge=33190));const Ae=We(R);He(R)?m.renderbufferStorageMultisampleEXT(36161,Ae,ge,R.width,R.height):l.renderbufferStorageMultisample(36161,Ae,ge,R.width,R.height)}else l.renderbufferStorage(36161,ge,R.width,R.height);l.framebufferRenderbuffer(36160,36096,36161,O)}else if(R.depthBuffer&&R.stencilBuffer){const ge=We(R);Q&&He(R)===!1?l.renderbufferStorageMultisample(36161,ge,35056,R.width,R.height):He(R)?m.renderbufferStorageMultisampleEXT(36161,ge,35056,R.width,R.height):l.renderbufferStorage(36161,34041,R.width,R.height),l.framebufferRenderbuffer(36160,33306,36161,O)}else{const ge=R.isWebGLMultipleRenderTargets===!0?R.texture:[R.texture];for(let Se=0;Se<ge.length;Se++){const Ae=ge[Se],Je=r.convert(Ae.format,Ae.encoding),Ce=r.convert(Ae.type),de=A(Ae.internalFormat,Je,Ce,Ae.encoding),ke=We(R);Q&&He(R)===!1?l.renderbufferStorageMultisample(36161,ke,de,R.width,R.height):He(R)?m.renderbufferStorageMultisampleEXT(36161,ke,de,R.width,R.height):l.renderbufferStorage(36161,de,R.width,R.height)}}l.bindRenderbuffer(36161,null)}function he(O,R){if(R&&R.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(36160,O),!(R.depthTexture&&R.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(R.depthTexture).__webglTexture||R.depthTexture.image.width!==R.width||R.depthTexture.image.height!==R.height)&&(R.depthTexture.image.width=R.width,R.depthTexture.image.height=R.height,R.depthTexture.needsUpdate=!0),U(R.depthTexture,0);const ge=n.get(R.depthTexture).__webglTexture,Se=We(R);if(R.depthTexture.format===yr)He(R)?m.framebufferTexture2DMultisampleEXT(36160,36096,3553,ge,0,Se):l.framebufferTexture2D(36160,36096,3553,ge,0);else if(R.depthTexture.format===hs)He(R)?m.framebufferTexture2DMultisampleEXT(36160,33306,3553,ge,0,Se):l.framebufferTexture2D(36160,33306,3553,ge,0);else throw new Error("Unknown depthTexture format")}function ne(O){const R=n.get(O),Q=O.isWebGLCubeRenderTarget===!0;if(O.depthTexture&&!R.__autoAllocateDepthBuffer){if(Q)throw new Error("target.depthTexture not supported in Cube render targets");he(R.__webglFramebuffer,O)}else if(Q){R.__webglDepthbuffer=[];for(let ge=0;ge<6;ge++)t.bindFramebuffer(36160,R.__webglFramebuffer[ge]),R.__webglDepthbuffer[ge]=l.createRenderbuffer(),Ze(R.__webglDepthbuffer[ge],O,!1)}else t.bindFramebuffer(36160,R.__webglFramebuffer),R.__webglDepthbuffer=l.createRenderbuffer(),Ze(R.__webglDepthbuffer,O,!1);t.bindFramebuffer(36160,null)}function _e(O,R,Q){const ge=n.get(O);R!==void 0&&be(ge.__webglFramebuffer,O,O.texture,36064,3553),Q!==void 0&&ne(O)}function Oe(O){const R=O.texture,Q=n.get(O),ge=n.get(R);O.addEventListener("dispose",se),O.isWebGLMultipleRenderTargets!==!0&&(ge.__webglTexture===void 0&&(ge.__webglTexture=l.createTexture()),ge.__version=R.version,a.memory.textures++);const Se=O.isWebGLCubeRenderTarget===!0,Ae=O.isWebGLMultipleRenderTargets===!0,Je=E(O)||c;if(Se){Q.__webglFramebuffer=[];for(let Ce=0;Ce<6;Ce++)Q.__webglFramebuffer[Ce]=l.createFramebuffer()}else{if(Q.__webglFramebuffer=l.createFramebuffer(),Ae)if(i.drawBuffers){const Ce=O.texture;for(let de=0,ke=Ce.length;de<ke;de++){const B=n.get(Ce[de]);B.__webglTexture===void 0&&(B.__webglTexture=l.createTexture(),a.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");if(c&&O.samples>0&&He(O)===!1){const Ce=Ae?R:[R];Q.__webglMultisampledFramebuffer=l.createFramebuffer(),Q.__webglColorRenderbuffer=[],t.bindFramebuffer(36160,Q.__webglMultisampledFramebuffer);for(let de=0;de<Ce.length;de++){const ke=Ce[de];Q.__webglColorRenderbuffer[de]=l.createRenderbuffer(),l.bindRenderbuffer(36161,Q.__webglColorRenderbuffer[de]);const B=r.convert(ke.format,ke.encoding),ee=r.convert(ke.type),ve=A(ke.internalFormat,B,ee,ke.encoding,O.isXRRenderTarget===!0),Le=We(O);l.renderbufferStorageMultisample(36161,Le,ve,O.width,O.height),l.framebufferRenderbuffer(36160,36064+de,36161,Q.__webglColorRenderbuffer[de])}l.bindRenderbuffer(36161,null),O.depthBuffer&&(Q.__webglDepthRenderbuffer=l.createRenderbuffer(),Ze(Q.__webglDepthRenderbuffer,O,!0)),t.bindFramebuffer(36160,null)}}if(Se){t.bindTexture(34067,ge.__webglTexture),oe(34067,R,Je);for(let Ce=0;Ce<6;Ce++)be(Q.__webglFramebuffer[Ce],O,R,36064,34069+Ce);P(R,Je)&&N(34067),t.unbindTexture()}else if(Ae){const Ce=O.texture;for(let de=0,ke=Ce.length;de<ke;de++){const B=Ce[de],ee=n.get(B);t.bindTexture(3553,ee.__webglTexture),oe(3553,B,Je),be(Q.__webglFramebuffer,O,B,36064+de,3553),P(B,Je)&&N(3553)}t.unbindTexture()}else{let Ce=3553;(O.isWebGL3DRenderTarget||O.isWebGLArrayRenderTarget)&&(c?Ce=O.isWebGL3DRenderTarget?32879:35866:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(Ce,ge.__webglTexture),oe(Ce,R,Je),be(Q.__webglFramebuffer,O,R,36064,Ce),P(R,Je)&&N(Ce),t.unbindTexture()}O.depthBuffer&&ne(O)}function Te(O){const R=E(O)||c,Q=O.isWebGLMultipleRenderTargets===!0?O.texture:[O.texture];for(let ge=0,Se=Q.length;ge<Se;ge++){const Ae=Q[ge];if(P(Ae,R)){const Je=O.isWebGLCubeRenderTarget?34067:3553,Ce=n.get(Ae).__webglTexture;t.bindTexture(Je,Ce),N(Je),t.unbindTexture()}}}function $e(O){if(c&&O.samples>0&&He(O)===!1){const R=O.isWebGLMultipleRenderTargets?O.texture:[O.texture],Q=O.width,ge=O.height;let Se=16384;const Ae=[],Je=O.stencilBuffer?33306:36096,Ce=n.get(O),de=O.isWebGLMultipleRenderTargets===!0;if(de)for(let ke=0;ke<R.length;ke++)t.bindFramebuffer(36160,Ce.__webglMultisampledFramebuffer),l.framebufferRenderbuffer(36160,36064+ke,36161,null),t.bindFramebuffer(36160,Ce.__webglFramebuffer),l.framebufferTexture2D(36009,36064+ke,3553,null,0);t.bindFramebuffer(36008,Ce.__webglMultisampledFramebuffer),t.bindFramebuffer(36009,Ce.__webglFramebuffer);for(let ke=0;ke<R.length;ke++){Ae.push(36064+ke),O.depthBuffer&&Ae.push(Je);const B=Ce.__ignoreDepthValues!==void 0?Ce.__ignoreDepthValues:!1;if(B===!1&&(O.depthBuffer&&(Se|=256),O.stencilBuffer&&(Se|=1024)),de&&l.framebufferRenderbuffer(36008,36064,36161,Ce.__webglColorRenderbuffer[ke]),B===!0&&(l.invalidateFramebuffer(36008,[Je]),l.invalidateFramebuffer(36009,[Je])),de){const ee=n.get(R[ke]).__webglTexture;l.framebufferTexture2D(36009,36064,3553,ee,0)}l.blitFramebuffer(0,0,Q,ge,0,0,Q,ge,Se,9728),v&&l.invalidateFramebuffer(36008,Ae)}if(t.bindFramebuffer(36008,null),t.bindFramebuffer(36009,null),de)for(let ke=0;ke<R.length;ke++){t.bindFramebuffer(36160,Ce.__webglMultisampledFramebuffer),l.framebufferRenderbuffer(36160,36064+ke,36161,Ce.__webglColorRenderbuffer[ke]);const B=n.get(R[ke]).__webglTexture;t.bindFramebuffer(36160,Ce.__webglFramebuffer),l.framebufferTexture2D(36009,36064+ke,3553,B,0)}t.bindFramebuffer(36009,Ce.__webglMultisampledFramebuffer)}}function We(O){return Math.min(p,O.samples)}function He(O){const R=n.get(O);return c&&O.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&R.__useRenderToTexture!==!1}function mt(O){const R=a.render.frame;y.get(O)!==R&&(y.set(O,R),O.update())}function wt(O,R){const Q=O.encoding,ge=O.format,Se=O.type;return O.isCompressedTexture===!0||O.isVideoTexture===!0||O.format===Nc||Q!==ji&&(Q===Lt?c===!1?e.has("EXT_sRGB")===!0&&ge===ii?(O.format=Nc,O.minFilter=Xt,O.generateMipmaps=!1):R=Yf.sRGBToLinear(R):(ge!==ii||Se!==wr)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",Q)),R}this.allocateTextureUnit=V,this.resetTextureUnits=pe,this.setTexture2D=U,this.setTexture2DArray=le,this.setTexture3D=re,this.setTextureCube=me,this.rebindTextures=_e,this.setupRenderTarget=Oe,this.updateRenderTargetMipmap=Te,this.updateMultisampleRenderTarget=$e,this.setupDepthRenderbuffer=ne,this.setupFrameBufferTexture=be,this.useMultisampledRTT=He}function Z0(l,e,t){const n=t.isWebGL2;function i(r,a=null){let c;if(r===wr)return 5121;if(r===x0)return 32819;if(r===y0)return 32820;if(r===m0)return 5120;if(r===g0)return 5122;if(r===Wf)return 5123;if(r===v0)return 5124;if(r===vr)return 5125;if(r===qi)return 5126;if(r===ao)return n?5131:(c=e.get("OES_texture_half_float"),c!==null?c.HALF_FLOAT_OES:null);if(r===_0)return 6406;if(r===ii)return 6408;if(r===S0)return 6409;if(r===w0)return 6410;if(r===yr)return 6402;if(r===hs)return 34041;if(r===b0)return 6403;if(r===M0)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),6408;if(r===Nc)return c=e.get("EXT_sRGB"),c!==null?c.SRGB_ALPHA_EXT:null;if(r===T0)return 36244;if(r===E0)return 33319;if(r===A0)return 33320;if(r===C0)return 36249;if(r===bc||r===Tc||r===Ec||r===Ac)if(a===Lt)if(c=e.get("WEBGL_compressed_texture_s3tc_srgb"),c!==null){if(r===bc)return c.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(r===Tc)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(r===Ec)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(r===Ac)return c.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(c=e.get("WEBGL_compressed_texture_s3tc"),c!==null){if(r===bc)return c.COMPRESSED_RGB_S3TC_DXT1_EXT;if(r===Tc)return c.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(r===Ec)return c.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(r===Ac)return c.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(r===tf||r===nf||r===rf||r===sf)if(c=e.get("WEBGL_compressed_texture_pvrtc"),c!==null){if(r===tf)return c.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(r===nf)return c.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(r===rf)return c.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(r===sf)return c.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(r===P0)return c=e.get("WEBGL_compressed_texture_etc1"),c!==null?c.COMPRESSED_RGB_ETC1_WEBGL:null;if(r===of||r===af)if(c=e.get("WEBGL_compressed_texture_etc"),c!==null){if(r===of)return a===Lt?c.COMPRESSED_SRGB8_ETC2:c.COMPRESSED_RGB8_ETC2;if(r===af)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:c.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(r===lf||r===cf||r===uf||r===hf||r===ff||r===df||r===pf||r===mf||r===gf||r===vf||r===xf||r===yf||r===_f||r===Mf)if(c=e.get("WEBGL_compressed_texture_astc"),c!==null){if(r===lf)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:c.COMPRESSED_RGBA_ASTC_4x4_KHR;if(r===cf)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:c.COMPRESSED_RGBA_ASTC_5x4_KHR;if(r===uf)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:c.COMPRESSED_RGBA_ASTC_5x5_KHR;if(r===hf)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:c.COMPRESSED_RGBA_ASTC_6x5_KHR;if(r===ff)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:c.COMPRESSED_RGBA_ASTC_6x6_KHR;if(r===df)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:c.COMPRESSED_RGBA_ASTC_8x5_KHR;if(r===pf)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:c.COMPRESSED_RGBA_ASTC_8x6_KHR;if(r===mf)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:c.COMPRESSED_RGBA_ASTC_8x8_KHR;if(r===gf)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:c.COMPRESSED_RGBA_ASTC_10x5_KHR;if(r===vf)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:c.COMPRESSED_RGBA_ASTC_10x6_KHR;if(r===xf)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:c.COMPRESSED_RGBA_ASTC_10x8_KHR;if(r===yf)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:c.COMPRESSED_RGBA_ASTC_10x10_KHR;if(r===_f)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:c.COMPRESSED_RGBA_ASTC_12x10_KHR;if(r===Mf)return a===Lt?c.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:c.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(r===Sf)if(c=e.get("EXT_texture_compression_bptc"),c!==null){if(r===Sf)return a===Lt?c.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:c.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;return r===ss?n?34042:(c=e.get("WEBGL_depth_texture"),c!==null?c.UNSIGNED_INT_24_8_WEBGL:null):l[r]!==void 0?l[r]:null}return{convert:i}}class j0 extends Ot{constructor(e=[]){super(),this.isArrayCamera=!0,this.cameras=e}}class ro extends St{constructor(){super(),this.isGroup=!0,this.type="Group"}}const Bw={type:"move"};class Lh{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new ro,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new ro,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new I,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new I),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new ro,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new I,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new I),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,r=null,a=null;const c=this._targetRay,u=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred"){if(h&&e.hand){a=!0;for(const x of e.hand.values()){const _=t.getJointPose(x,n);if(h.joints[x.jointName]===void 0){const w=new ro;w.matrixAutoUpdate=!1,w.visible=!1,h.joints[x.jointName]=w,h.add(w)}const S=h.joints[x.jointName];_!==null&&(S.matrix.fromArray(_.transform.matrix),S.matrix.decompose(S.position,S.rotation,S.scale),S.jointRadius=_.radius),S.visible=_!==null}const d=h.joints["index-finger-tip"],p=h.joints["thumb-tip"],m=d.position.distanceTo(p.position),v=.02,y=.005;h.inputState.pinching&&m>v+y?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&m<=v-y&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else u!==null&&e.gripSpace&&(r=t.getPose(e.gripSpace,n),r!==null&&(u.matrix.fromArray(r.transform.matrix),u.matrix.decompose(u.position,u.rotation,u.scale),r.linearVelocity?(u.hasLinearVelocity=!0,u.linearVelocity.copy(r.linearVelocity)):u.hasLinearVelocity=!1,r.angularVelocity?(u.hasAngularVelocity=!0,u.angularVelocity.copy(r.angularVelocity)):u.hasAngularVelocity=!1));c!==null&&(i=t.getPose(e.targetRaySpace,n),i===null&&r!==null&&(i=r),i!==null&&(c.matrix.fromArray(i.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),i.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(i.linearVelocity)):c.hasLinearVelocity=!1,i.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(i.angularVelocity)):c.hasAngularVelocity=!1,this.dispatchEvent(Bw)))}return c!==null&&(c.visible=i!==null),u!==null&&(u.visible=r!==null),h!==null&&(h.visible=a!==null),this}}class J0 extends Qt{constructor(e,t,n,i,r,a,c,u,h,d){if(d=d!==void 0?d:yr,d!==yr&&d!==hs)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&d===yr&&(n=vr),n===void 0&&d===hs&&(n=ss),super(null,i,r,a,c,u,d,n,h),this.isDepthTexture=!0,this.image={width:e,height:t},this.magFilter=c!==void 0?c:Jt,this.minFilter=u!==void 0?u:Jt,this.flipY=!1,this.generateMipmaps=!1}}class Vw extends Ai{constructor(e,t){super();const n=this;let i=null,r=1,a=null,c="local-floor",u=null,h=null,d=null,p=null,m=null,v=null;const y=t.getContextAttributes();let x=null,_=null;const S=[],w=[],T=new Ot;T.layers.enable(1),T.viewport=new Tt;const E=new Ot;E.layers.enable(2),E.viewport=new Tt;const C=[T,E],P=new j0;P.layers.enable(1),P.layers.enable(2);let N=null,A=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(k){let U=S[k];return U===void 0&&(U=new Lh,S[k]=U),U.getTargetRaySpace()},this.getControllerGrip=function(k){let U=S[k];return U===void 0&&(U=new Lh,S[k]=U),U.getGripSpace()},this.getHand=function(k){let U=S[k];return U===void 0&&(U=new Lh,S[k]=U),U.getHandSpace()};function L(k){const U=w.indexOf(k.inputSource);if(U===-1)return;const le=S[U];le!==void 0&&le.dispatchEvent({type:k.type,data:k.inputSource})}function F(){i.removeEventListener("select",L),i.removeEventListener("selectstart",L),i.removeEventListener("selectend",L),i.removeEventListener("squeeze",L),i.removeEventListener("squeezestart",L),i.removeEventListener("squeezeend",L),i.removeEventListener("end",F),i.removeEventListener("inputsourceschange",q);for(let k=0;k<S.length;k++){const U=w[k];U!==null&&(w[k]=null,S[k].disconnect(U))}N=null,A=null,e.setRenderTarget(x),m=null,p=null,d=null,i=null,_=null,V.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(k){r=k,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(k){c=k,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return u||a},this.setReferenceSpace=function(k){u=k},this.getBaseLayer=function(){return p!==null?p:m},this.getBinding=function(){return d},this.getFrame=function(){return v},this.getSession=function(){return i},this.setSession=async function(k){if(i=k,i!==null){if(x=e.getRenderTarget(),i.addEventListener("select",L),i.addEventListener("selectstart",L),i.addEventListener("selectend",L),i.addEventListener("squeeze",L),i.addEventListener("squeezestart",L),i.addEventListener("squeezeend",L),i.addEventListener("end",F),i.addEventListener("inputsourceschange",q),y.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const U={antialias:i.renderState.layers===void 0?y.antialias:!0,alpha:y.alpha,depth:y.depth,stencil:y.stencil,framebufferScaleFactor:r};m=new XRWebGLLayer(i,t,U),i.updateRenderState({baseLayer:m}),_=new ri(m.framebufferWidth,m.framebufferHeight,{format:ii,type:wr,encoding:e.outputEncoding,stencilBuffer:y.stencil})}else{let U=null,le=null,re=null;y.depth&&(re=y.stencil?35056:33190,U=y.stencil?hs:yr,le=y.stencil?ss:vr);const me={colorFormat:32856,depthFormat:re,scaleFactor:r};d=new XRWebGLBinding(i,t),p=d.createProjectionLayer(me),i.updateRenderState({layers:[p]}),_=new ri(p.textureWidth,p.textureHeight,{format:ii,type:wr,depthTexture:new J0(p.textureWidth,p.textureHeight,le,void 0,void 0,void 0,void 0,void 0,void 0,U),stencilBuffer:y.stencil,encoding:e.outputEncoding,samples:y.antialias?4:0});const Ee=e.properties.get(_);Ee.__ignoreDepthValues=p.ignoreDepthValues}_.isXRRenderTarget=!0,this.setFoveation(1),u=null,a=await i.requestReferenceSpace(c),V.setContext(i),V.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function q(k){for(let U=0;U<k.removed.length;U++){const le=k.removed[U],re=w.indexOf(le);re>=0&&(w[re]=null,S[re].dispatchEvent({type:"disconnected",data:le}))}for(let U=0;U<k.added.length;U++){const le=k.added[U];let re=w.indexOf(le);if(re===-1){for(let Ee=0;Ee<S.length;Ee++)if(Ee>=w.length){w.push(le),re=Ee;break}else if(w[Ee]===null){w[Ee]=le,re=Ee;break}if(re===-1)break}const me=S[re];me&&me.dispatchEvent({type:"connected",data:le})}}const se=new I,J=new I;function W(k,U,le){se.setFromMatrixPosition(U.matrixWorld),J.setFromMatrixPosition(le.matrixWorld);const re=se.distanceTo(J),me=U.projectionMatrix.elements,Ee=le.projectionMatrix.elements,Ve=me[14]/(me[10]-1),oe=me[14]/(me[10]+1),je=(me[9]+1)/me[5],Ge=(me[9]-1)/me[5],Ye=(me[8]-1)/me[0],be=(Ee[8]+1)/Ee[0],Ze=Ve*Ye,he=Ve*be,ne=re/(-Ye+be),_e=ne*-Ye;U.matrixWorld.decompose(k.position,k.quaternion,k.scale),k.translateX(_e),k.translateZ(ne),k.matrixWorld.compose(k.position,k.quaternion,k.scale),k.matrixWorldInverse.copy(k.matrixWorld).invert();const Oe=Ve+ne,Te=oe+ne,$e=Ze-_e,We=he+(re-_e),He=je*oe/Te*Oe,mt=Ge*oe/Te*Oe;k.projectionMatrix.makePerspective($e,We,He,mt,Oe,Te)}function $(k,U){U===null?k.matrixWorld.copy(k.matrix):k.matrixWorld.multiplyMatrices(U.matrixWorld,k.matrix),k.matrixWorldInverse.copy(k.matrixWorld).invert()}this.updateCamera=function(k){if(i===null)return;P.near=E.near=T.near=k.near,P.far=E.far=T.far=k.far,(N!==P.near||A!==P.far)&&(i.updateRenderState({depthNear:P.near,depthFar:P.far}),N=P.near,A=P.far);const U=k.parent,le=P.cameras;$(P,U);for(let me=0;me<le.length;me++)$(le[me],U);P.matrixWorld.decompose(P.position,P.quaternion,P.scale),k.matrix.copy(P.matrix),k.matrix.decompose(k.position,k.quaternion,k.scale);const re=k.children;for(let me=0,Ee=re.length;me<Ee;me++)re[me].updateMatrixWorld(!0);le.length===2?W(P,T,E):P.projectionMatrix.copy(T.projectionMatrix)},this.getCamera=function(){return P},this.getFoveation=function(){if(p!==null)return p.fixedFoveation;if(m!==null)return m.fixedFoveation},this.setFoveation=function(k){p!==null&&(p.fixedFoveation=k),m!==null&&m.fixedFoveation!==void 0&&(m.fixedFoveation=k)};let te=null;function pe(k,U){if(h=U.getViewerPose(u||a),v=U,h!==null){const le=h.views;m!==null&&(e.setRenderTargetFramebuffer(_,m.framebuffer),e.setRenderTarget(_));let re=!1;le.length!==P.cameras.length&&(P.cameras.length=0,re=!0);for(let me=0;me<le.length;me++){const Ee=le[me];let Ve=null;if(m!==null)Ve=m.getViewport(Ee);else{const je=d.getViewSubImage(p,Ee);Ve=je.viewport,me===0&&(e.setRenderTargetTextures(_,je.colorTexture,p.ignoreDepthValues?void 0:je.depthStencilTexture),e.setRenderTarget(_))}let oe=C[me];oe===void 0&&(oe=new Ot,oe.layers.enable(me),oe.viewport=new Tt,C[me]=oe),oe.matrix.fromArray(Ee.transform.matrix),oe.projectionMatrix.fromArray(Ee.projectionMatrix),oe.viewport.set(Ve.x,Ve.y,Ve.width,Ve.height),me===0&&P.matrix.copy(oe.matrix),re===!0&&P.cameras.push(oe)}}for(let le=0;le<S.length;le++){const re=w[le],me=S[le];re!==null&&me!==void 0&&me.update(re,U,u||a)}te&&te(k,U),v=null}const V=new G0;V.setAnimationLoop(pe),this.setAnimationLoop=function(k){te=k},this.dispose=function(){}}}function Hw(l,e){function t(x,_){x.fogColor.value.copy(_.color),_.isFog?(x.fogNear.value=_.near,x.fogFar.value=_.far):_.isFogExp2&&(x.fogDensity.value=_.density)}function n(x,_,S,w,T){_.isMeshBasicMaterial||_.isMeshLambertMaterial?i(x,_):_.isMeshToonMaterial?(i(x,_),d(x,_)):_.isMeshPhongMaterial?(i(x,_),h(x,_)):_.isMeshStandardMaterial?(i(x,_),p(x,_),_.isMeshPhysicalMaterial&&m(x,_,T)):_.isMeshMatcapMaterial?(i(x,_),v(x,_)):_.isMeshDepthMaterial?i(x,_):_.isMeshDistanceMaterial?(i(x,_),y(x,_)):_.isMeshNormalMaterial?i(x,_):_.isLineBasicMaterial?(r(x,_),_.isLineDashedMaterial&&a(x,_)):_.isPointsMaterial?c(x,_,S,w):_.isSpriteMaterial?u(x,_):_.isShadowMaterial?(x.color.value.copy(_.color),x.opacity.value=_.opacity):_.isShaderMaterial&&(_.uniformsNeedUpdate=!1)}function i(x,_){x.opacity.value=_.opacity,_.color&&x.diffuse.value.copy(_.color),_.emissive&&x.emissive.value.copy(_.emissive).multiplyScalar(_.emissiveIntensity),_.map&&(x.map.value=_.map),_.alphaMap&&(x.alphaMap.value=_.alphaMap),_.bumpMap&&(x.bumpMap.value=_.bumpMap,x.bumpScale.value=_.bumpScale,_.side===Fn&&(x.bumpScale.value*=-1)),_.displacementMap&&(x.displacementMap.value=_.displacementMap,x.displacementScale.value=_.displacementScale,x.displacementBias.value=_.displacementBias),_.emissiveMap&&(x.emissiveMap.value=_.emissiveMap),_.normalMap&&(x.normalMap.value=_.normalMap,x.normalScale.value.copy(_.normalScale),_.side===Fn&&x.normalScale.value.negate()),_.specularMap&&(x.specularMap.value=_.specularMap),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest);const S=e.get(_).envMap;if(S&&(x.envMap.value=S,x.flipEnvMap.value=S.isCubeTexture&&S.isRenderTargetTexture===!1?-1:1,x.reflectivity.value=_.reflectivity,x.ior.value=_.ior,x.refractionRatio.value=_.refractionRatio),_.lightMap){x.lightMap.value=_.lightMap;const E=l.physicallyCorrectLights!==!0?Math.PI:1;x.lightMapIntensity.value=_.lightMapIntensity*E}_.aoMap&&(x.aoMap.value=_.aoMap,x.aoMapIntensity.value=_.aoMapIntensity);let w;_.map?w=_.map:_.specularMap?w=_.specularMap:_.displacementMap?w=_.displacementMap:_.normalMap?w=_.normalMap:_.bumpMap?w=_.bumpMap:_.roughnessMap?w=_.roughnessMap:_.metalnessMap?w=_.metalnessMap:_.alphaMap?w=_.alphaMap:_.emissiveMap?w=_.emissiveMap:_.clearcoatMap?w=_.clearcoatMap:_.clearcoatNormalMap?w=_.clearcoatNormalMap:_.clearcoatRoughnessMap?w=_.clearcoatRoughnessMap:_.iridescenceMap?w=_.iridescenceMap:_.iridescenceThicknessMap?w=_.iridescenceThicknessMap:_.specularIntensityMap?w=_.specularIntensityMap:_.specularColorMap?w=_.specularColorMap:_.transmissionMap?w=_.transmissionMap:_.thicknessMap?w=_.thicknessMap:_.sheenColorMap?w=_.sheenColorMap:_.sheenRoughnessMap&&(w=_.sheenRoughnessMap),w!==void 0&&(w.isWebGLRenderTarget&&(w=w.texture),w.matrixAutoUpdate===!0&&w.updateMatrix(),x.uvTransform.value.copy(w.matrix));let T;_.aoMap?T=_.aoMap:_.lightMap&&(T=_.lightMap),T!==void 0&&(T.isWebGLRenderTarget&&(T=T.texture),T.matrixAutoUpdate===!0&&T.updateMatrix(),x.uv2Transform.value.copy(T.matrix))}function r(x,_){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity}function a(x,_){x.dashSize.value=_.dashSize,x.totalSize.value=_.dashSize+_.gapSize,x.scale.value=_.scale}function c(x,_,S,w){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,x.size.value=_.size*S,x.scale.value=w*.5,_.map&&(x.map.value=_.map),_.alphaMap&&(x.alphaMap.value=_.alphaMap),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest);let T;_.map?T=_.map:_.alphaMap&&(T=_.alphaMap),T!==void 0&&(T.matrixAutoUpdate===!0&&T.updateMatrix(),x.uvTransform.value.copy(T.matrix))}function u(x,_){x.diffuse.value.copy(_.color),x.opacity.value=_.opacity,x.rotation.value=_.rotation,_.map&&(x.map.value=_.map),_.alphaMap&&(x.alphaMap.value=_.alphaMap),_.alphaTest>0&&(x.alphaTest.value=_.alphaTest);let S;_.map?S=_.map:_.alphaMap&&(S=_.alphaMap),S!==void 0&&(S.matrixAutoUpdate===!0&&S.updateMatrix(),x.uvTransform.value.copy(S.matrix))}function h(x,_){x.specular.value.copy(_.specular),x.shininess.value=Math.max(_.shininess,1e-4)}function d(x,_){_.gradientMap&&(x.gradientMap.value=_.gradientMap)}function p(x,_){x.roughness.value=_.roughness,x.metalness.value=_.metalness,_.roughnessMap&&(x.roughnessMap.value=_.roughnessMap),_.metalnessMap&&(x.metalnessMap.value=_.metalnessMap),e.get(_).envMap&&(x.envMapIntensity.value=_.envMapIntensity)}function m(x,_,S){x.ior.value=_.ior,_.sheen>0&&(x.sheenColor.value.copy(_.sheenColor).multiplyScalar(_.sheen),x.sheenRoughness.value=_.sheenRoughness,_.sheenColorMap&&(x.sheenColorMap.value=_.sheenColorMap),_.sheenRoughnessMap&&(x.sheenRoughnessMap.value=_.sheenRoughnessMap)),_.clearcoat>0&&(x.clearcoat.value=_.clearcoat,x.clearcoatRoughness.value=_.clearcoatRoughness,_.clearcoatMap&&(x.clearcoatMap.value=_.clearcoatMap),_.clearcoatRoughnessMap&&(x.clearcoatRoughnessMap.value=_.clearcoatRoughnessMap),_.clearcoatNormalMap&&(x.clearcoatNormalScale.value.copy(_.clearcoatNormalScale),x.clearcoatNormalMap.value=_.clearcoatNormalMap,_.side===Fn&&x.clearcoatNormalScale.value.negate())),_.iridescence>0&&(x.iridescence.value=_.iridescence,x.iridescenceIOR.value=_.iridescenceIOR,x.iridescenceThicknessMinimum.value=_.iridescenceThicknessRange[0],x.iridescenceThicknessMaximum.value=_.iridescenceThicknessRange[1],_.iridescenceMap&&(x.iridescenceMap.value=_.iridescenceMap),_.iridescenceThicknessMap&&(x.iridescenceThicknessMap.value=_.iridescenceThicknessMap)),_.transmission>0&&(x.transmission.value=_.transmission,x.transmissionSamplerMap.value=S.texture,x.transmissionSamplerSize.value.set(S.width,S.height),_.transmissionMap&&(x.transmissionMap.value=_.transmissionMap),x.thickness.value=_.thickness,_.thicknessMap&&(x.thicknessMap.value=_.thicknessMap),x.attenuationDistance.value=_.attenuationDistance,x.attenuationColor.value.copy(_.attenuationColor)),x.specularIntensity.value=_.specularIntensity,x.specularColor.value.copy(_.specularColor),_.specularIntensityMap&&(x.specularIntensityMap.value=_.specularIntensityMap),_.specularColorMap&&(x.specularColorMap.value=_.specularColorMap)}function v(x,_){_.matcap&&(x.matcap.value=_.matcap)}function y(x,_){x.referencePosition.value.copy(_.referencePosition),x.nearDistance.value=_.nearDistance,x.farDistance.value=_.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function Gw(l,e,t,n){let i={},r={},a=[];const c=t.isWebGL2?l.getParameter(35375):0;function u(w,T){const E=T.program;n.uniformBlockBinding(w,E)}function h(w,T){let E=i[w.id];E===void 0&&(y(w),E=d(w),i[w.id]=E,w.addEventListener("dispose",_));const C=T.program;n.updateUBOMapping(w,C);const P=e.render.frame;r[w.id]!==P&&(m(w),r[w.id]=P)}function d(w){const T=p();w.__bindingPointIndex=T;const E=l.createBuffer(),C=w.__size,P=w.usage;return l.bindBuffer(35345,E),l.bufferData(35345,C,P),l.bindBuffer(35345,null),l.bindBufferBase(35345,T,E),E}function p(){for(let w=0;w<c;w++)if(a.indexOf(w)===-1)return a.push(w),w;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function m(w){const T=i[w.id],E=w.uniforms,C=w.__cache;l.bindBuffer(35345,T);for(let P=0,N=E.length;P<N;P++){const A=E[P];if(v(A,P,C)===!0){const L=A.value,F=A.__offset;typeof L=="number"?(A.__data[0]=L,l.bufferSubData(35345,F,A.__data)):(A.value.isMatrix3?(A.__data[0]=A.value.elements[0],A.__data[1]=A.value.elements[1],A.__data[2]=A.value.elements[2],A.__data[3]=A.value.elements[0],A.__data[4]=A.value.elements[3],A.__data[5]=A.value.elements[4],A.__data[6]=A.value.elements[5],A.__data[7]=A.value.elements[0],A.__data[8]=A.value.elements[6],A.__data[9]=A.value.elements[7],A.__data[10]=A.value.elements[8],A.__data[11]=A.value.elements[0]):L.toArray(A.__data),l.bufferSubData(35345,F,A.__data))}}l.bindBuffer(35345,null)}function v(w,T,E){const C=w.value;if(E[T]===void 0)return typeof C=="number"?E[T]=C:E[T]=C.clone(),!0;if(typeof C=="number"){if(E[T]!==C)return E[T]=C,!0}else{const P=E[T];if(P.equals(C)===!1)return P.copy(C),!0}return!1}function y(w){const T=w.uniforms;let E=0;const C=16;let P=0;for(let N=0,A=T.length;N<A;N++){const L=T[N],F=x(L);if(L.__data=new Float32Array(F.storage/Float32Array.BYTES_PER_ELEMENT),L.__offset=E,N>0){P=E%C;const q=C-P;P!==0&&q-F.boundary<0&&(E+=C-P,L.__offset=E)}E+=F.storage}return P=E%C,P>0&&(E+=C-P),w.__size=E,w.__cache={},this}function x(w){const T=w.value,E={boundary:0,storage:0};return typeof T=="number"?(E.boundary=4,E.storage=4):T.isVector2?(E.boundary=8,E.storage=8):T.isVector3||T.isColor?(E.boundary=16,E.storage=12):T.isVector4?(E.boundary=16,E.storage=16):T.isMatrix3?(E.boundary=48,E.storage=48):T.isMatrix4?(E.boundary=64,E.storage=64):T.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",T),E}function _(w){const T=w.target;T.removeEventListener("dispose",_);const E=a.indexOf(T.__bindingPointIndex);a.splice(E,1),l.deleteBuffer(i[T.id]),delete i[T.id],delete r[T.id]}function S(){for(const w in i)l.deleteBuffer(i[w]);a=[],i={},r={}}return{bind:u,update:h,dispose:S}}function Ww(){const l=ua("canvas");return l.style.display="block",l}function $f(l={}){this.isWebGLRenderer=!0;const e=l.canvas!==void 0?l.canvas:Ww(),t=l.context!==void 0?l.context:null,n=l.depth!==void 0?l.depth:!0,i=l.stencil!==void 0?l.stencil:!0,r=l.antialias!==void 0?l.antialias:!1,a=l.premultipliedAlpha!==void 0?l.premultipliedAlpha:!0,c=l.preserveDrawingBuffer!==void 0?l.preserveDrawingBuffer:!1,u=l.powerPreference!==void 0?l.powerPreference:"default",h=l.failIfMajorPerformanceCaveat!==void 0?l.failIfMajorPerformanceCaveat:!1;let d;t!==null?d=t.getContextAttributes().alpha:d=l.alpha!==void 0?l.alpha:!1;let p=null,m=null;const v=[],y=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=ji,this.physicallyCorrectLights=!1,this.toneMapping=di,this.toneMappingExposure=1,Object.defineProperties(this,{gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});const x=this;let _=!1,S=0,w=0,T=null,E=-1,C=null;const P=new Tt,N=new Tt;let A=null,L=e.width,F=e.height,q=1,se=null,J=null;const W=new Tt(0,0,L,F),$=new Tt(0,0,L,F);let te=!1;const pe=new Wc;let V=!1,k=!1,U=null;const le=new ot,re=new fe,me=new I,Ee={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Ve(){return T===null?q:1}let oe=t;function je(D,Z){for(let ae=0;ae<D.length;ae++){const Y=D[ae],ue=e.getContext(Y,Z);if(ue!==null)return ue}return null}try{const D={alpha:!0,depth:n,stencil:i,antialias:r,premultipliedAlpha:a,preserveDrawingBuffer:c,powerPreference:u,failIfMajorPerformanceCaveat:h};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Bc}`),e.addEventListener("webglcontextlost",ve,!1),e.addEventListener("webglcontextrestored",Le,!1),e.addEventListener("webglcontextcreationerror",Qe,!1),oe===null){const Z=["webgl2","webgl","experimental-webgl"];if(x.isWebGL1Renderer===!0&&Z.shift(),oe=je(Z,D),oe===null)throw je(Z)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}oe.getShaderPrecisionFormat===void 0&&(oe.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(D){throw console.error("THREE.WebGLRenderer: "+D.message),D}let Ge,Ye,be,Ze,he,ne,_e,Oe,Te,$e,We,He,mt,wt,O,R,Q,ge,Se,Ae,Je,Ce,de,ke;function B(){Ge=new oS(oe),Ye=new eS(oe,Ge,l),Ge.init(Ye),Ce=new Z0(oe,Ge,Ye),be=new kw(oe,Ge,Ye),Ze=new cS,he=new Ew,ne=new Uw(oe,Ge,be,he,Ye,Ce,Ze),_e=new nS(x),Oe=new sS(x),Te=new __(oe,Ye),de=new KM(oe,Ge,Te,Ye),$e=new aS(oe,Te,Ze,de),We=new dS(oe,$e,Te,Ze),Se=new fS(oe,Ye,ne),R=new tS(he),He=new Tw(x,_e,Oe,Ge,Ye,de,R),mt=new Hw(x,he),wt=new Cw,O=new zw(Ge,Ye),ge=new QM(x,_e,be,We,d,a),Q=new Fw(x,We,Ye),ke=new Gw(oe,Ze,Ye,be),Ae=new $M(oe,Ge,Ze,Ye),Je=new lS(oe,Ge,Ze,Ye),Ze.programs=He.programs,x.capabilities=Ye,x.extensions=Ge,x.properties=he,x.renderLists=wt,x.shadowMap=Q,x.state=be,x.info=Ze}B();const ee=new Vw(x,oe);this.xr=ee,this.getContext=function(){return oe},this.getContextAttributes=function(){return oe.getContextAttributes()},this.forceContextLoss=function(){const D=Ge.get("WEBGL_lose_context");D&&D.loseContext()},this.forceContextRestore=function(){const D=Ge.get("WEBGL_lose_context");D&&D.restoreContext()},this.getPixelRatio=function(){return q},this.setPixelRatio=function(D){D!==void 0&&(q=D,this.setSize(L,F,!1))},this.getSize=function(D){return D.set(L,F)},this.setSize=function(D,Z,ae){if(ee.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}L=D,F=Z,e.width=Math.floor(D*q),e.height=Math.floor(Z*q),ae!==!1&&(e.style.width=D+"px",e.style.height=Z+"px"),this.setViewport(0,0,D,Z)},this.getDrawingBufferSize=function(D){return D.set(L*q,F*q).floor()},this.setDrawingBufferSize=function(D,Z,ae){L=D,F=Z,q=ae,e.width=Math.floor(D*ae),e.height=Math.floor(Z*ae),this.setViewport(0,0,D,Z)},this.getCurrentViewport=function(D){return D.copy(P)},this.getViewport=function(D){return D.copy(W)},this.setViewport=function(D,Z,ae,Y){D.isVector4?W.set(D.x,D.y,D.z,D.w):W.set(D,Z,ae,Y),be.viewport(P.copy(W).multiplyScalar(q).floor())},this.getScissor=function(D){return D.copy($)},this.setScissor=function(D,Z,ae,Y){D.isVector4?$.set(D.x,D.y,D.z,D.w):$.set(D,Z,ae,Y),be.scissor(N.copy($).multiplyScalar(q).floor())},this.getScissorTest=function(){return te},this.setScissorTest=function(D){be.setScissorTest(te=D)},this.setOpaqueSort=function(D){se=D},this.setTransparentSort=function(D){J=D},this.getClearColor=function(D){return D.copy(ge.getClearColor())},this.setClearColor=function(){ge.setClearColor.apply(ge,arguments)},this.getClearAlpha=function(){return ge.getClearAlpha()},this.setClearAlpha=function(){ge.setClearAlpha.apply(ge,arguments)},this.clear=function(D=!0,Z=!0,ae=!0){let Y=0;D&&(Y|=16384),Z&&(Y|=256),ae&&(Y|=1024),oe.clear(Y)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",ve,!1),e.removeEventListener("webglcontextrestored",Le,!1),e.removeEventListener("webglcontextcreationerror",Qe,!1),wt.dispose(),O.dispose(),he.dispose(),_e.dispose(),Oe.dispose(),We.dispose(),de.dispose(),ke.dispose(),He.dispose(),ee.dispose(),ee.removeEventListener("sessionstart",Ke),ee.removeEventListener("sessionend",Et),U&&(U.dispose(),U=null),Rt.stop()};function ve(D){D.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),_=!0}function Le(){console.log("THREE.WebGLRenderer: Context Restored."),_=!1;const D=Ze.autoReset,Z=Q.enabled,ae=Q.autoUpdate,Y=Q.needsUpdate,ue=Q.type;B(),Ze.autoReset=D,Q.enabled=Z,Q.autoUpdate=ae,Q.needsUpdate=Y,Q.type=ue}function Qe(D){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",D.statusMessage)}function H(D){const Z=D.target;Z.removeEventListener("dispose",H),Ie(Z)}function Ie(D){Me(D),he.remove(D)}function Me(D){const Z=he.get(D).programs;Z!==void 0&&(Z.forEach(function(ae){He.releaseProgram(ae)}),D.isShaderMaterial&&He.releaseShaderCache(D))}this.renderBufferDirect=function(D,Z,ae,Y,ue,Xe){Z===null&&(Z=Ee);const et=ue.isMesh&&ue.matrixWorld.determinant()<0,at=tu(D,Z,ae,Y,ue);be.setMaterial(Y,et);let tt=ae.index;const xt=ae.attributes.position;if(tt===null){if(xt===void 0||xt.count===0)return}else if(tt.count===0)return;let dt=1;Y.wireframe===!0&&(tt=$e.getWireframeAttribute(ae),dt=2),de.setup(ue,Y,at,ae,tt);let pt,Dt=Ae;tt!==null&&(pt=Te.get(tt),Dt=Je,Dt.setIndex(pt));const Pi=tt!==null?tt.count:xt.count,Ki=ae.drawRange.start*dt,$i=ae.drawRange.count*dt,bn=Xe!==null?Xe.start*dt:0,ft=Xe!==null?Xe.count*dt:1/0,gi=Math.max(Ki,bn),zt=Math.min(Pi,Ki+$i,bn+ft)-1,Tn=Math.max(0,zt-gi+1);if(Tn!==0){if(ue.isMesh)Y.wireframe===!0?(be.setLineWidth(Y.wireframeLinewidth*Ve()),Dt.setMode(1)):Dt.setMode(4);else if(ue.isLine){let Vn=Y.linewidth;Vn===void 0&&(Vn=1),be.setLineWidth(Vn*Ve()),ue.isLineSegments?Dt.setMode(1):ue.isLineLoop?Dt.setMode(2):Dt.setMode(3)}else ue.isPoints?Dt.setMode(0):ue.isSprite&&Dt.setMode(4);if(ue.isInstancedMesh)Dt.renderInstances(gi,Tn,ue.count);else if(ae.isInstancedBufferGeometry){const Vn=Math.min(ae.instanceCount,ae._maxInstanceCount);Dt.renderInstances(gi,Tn,Vn)}else Dt.render(gi,Tn)}},this.compile=function(D,Z){function ae(Y,ue,Xe){Y.transparent===!0&&Y.side===Xi?(Y.side=Fn,Y.needsUpdate=!0,Ms(Y,ue,Xe),Y.side=us,Y.needsUpdate=!0,Ms(Y,ue,Xe),Y.side=Xi):Ms(Y,ue,Xe)}m=O.get(D),m.init(),y.push(m),D.traverseVisible(function(Y){Y.isLight&&Y.layers.test(Z.layers)&&(m.pushLight(Y),Y.castShadow&&m.pushShadow(Y))}),m.setupLights(x.physicallyCorrectLights),D.traverse(function(Y){const ue=Y.material;if(ue)if(Array.isArray(ue))for(let Xe=0;Xe<ue.length;Xe++){const et=ue[Xe];ae(et,D,Y)}else ae(ue,D,Y)}),y.pop(),m=null};let ce=null;function xe(D){ce&&ce(D)}function Ke(){Rt.stop()}function Et(){Rt.start()}const Rt=new G0;Rt.setAnimationLoop(xe),typeof self<"u"&&Rt.setContext(self),this.setAnimationLoop=function(D){ce=D,ee.setAnimationLoop(D),D===null?Rt.stop():Rt.start()},ee.addEventListener("sessionstart",Ke),ee.addEventListener("sessionend",Et),this.render=function(D,Z){if(Z!==void 0&&Z.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(_===!0)return;D.matrixWorldAutoUpdate===!0&&D.updateMatrixWorld(),Z.parent===null&&Z.matrixWorldAutoUpdate===!0&&Z.updateMatrixWorld(),ee.enabled===!0&&ee.isPresenting===!0&&(ee.cameraAutoUpdate===!0&&ee.updateCamera(Z),Z=ee.getCamera()),D.isScene===!0&&D.onBeforeRender(x,D,Z,T),m=O.get(D,y.length),m.init(),y.push(m),le.multiplyMatrices(Z.projectionMatrix,Z.matrixWorldInverse),pe.setFromProjectionMatrix(le),k=this.localClippingEnabled,V=R.init(this.clippingPlanes,k,Z),p=wt.get(D,v.length),p.init(),v.push(p),si(D,Z,0,x.sortObjects),p.finish(),x.sortObjects===!0&&p.sort(se,J),V===!0&&R.beginShadows();const ae=m.state.shadowsArray;if(Q.render(ae,D,Z),V===!0&&R.endShadows(),this.info.autoReset===!0&&this.info.reset(),ge.render(p,D),m.setupLights(x.physicallyCorrectLights),Z.isArrayCamera){const Y=Z.cameras;for(let ue=0,Xe=Y.length;ue<Xe;ue++){const et=Y[ue];It(p,D,et,et.viewport)}}else It(p,D,Z);T!==null&&(ne.updateMultisampleRenderTarget(T),ne.updateRenderTargetMipmap(T)),D.isScene===!0&&D.onAfterRender(x,D,Z),de.resetDefaultState(),E=-1,C=null,y.pop(),y.length>0?m=y[y.length-1]:m=null,v.pop(),v.length>0?p=v[v.length-1]:p=null};function si(D,Z,ae,Y){if(D.visible===!1)return;if(D.layers.test(Z.layers)){if(D.isGroup)ae=D.renderOrder;else if(D.isLOD)D.autoUpdate===!0&&D.update(Z);else if(D.isLight)m.pushLight(D),D.castShadow&&m.pushShadow(D);else if(D.isSprite){if(!D.frustumCulled||pe.intersectsSprite(D)){Y&&me.setFromMatrixPosition(D.matrixWorld).applyMatrix4(le);const et=We.update(D),at=D.material;at.visible&&p.push(D,et,at,ae,me.z,null)}}else if((D.isMesh||D.isLine||D.isPoints)&&(D.isSkinnedMesh&&D.skeleton.frame!==Ze.render.frame&&(D.skeleton.update(),D.skeleton.frame=Ze.render.frame),!D.frustumCulled||pe.intersectsObject(D))){Y&&me.setFromMatrixPosition(D.matrixWorld).applyMatrix4(le);const et=We.update(D),at=D.material;if(Array.isArray(at)){const tt=et.groups;for(let xt=0,dt=tt.length;xt<dt;xt++){const pt=tt[xt],Dt=at[pt.materialIndex];Dt&&Dt.visible&&p.push(D,et,Dt,ae,me.z,pt)}}else at.visible&&p.push(D,et,at,ae,me.z,null)}}const Xe=D.children;for(let et=0,at=Xe.length;et<at;et++)si(Xe[et],Z,ae,Y)}function It(D,Z,ae,Y){const ue=D.opaque,Xe=D.transmissive,et=D.transparent;m.setupLightsView(ae),Xe.length>0&&Bn(ue,Z,ae),Y&&be.viewport(P.copy(Y)),ue.length>0&&xn(ue,Z,ae),Xe.length>0&&xn(Xe,Z,ae),et.length>0&&xn(et,Z,ae),be.buffers.depth.setTest(!0),be.buffers.depth.setMask(!0),be.buffers.color.setMask(!0),be.setPolygonOffset(!1)}function Bn(D,Z,ae){const Y=Ye.isWebGL2;U===null&&(U=new ri(1,1,{generateMipmaps:!0,type:Ge.has("EXT_color_buffer_half_float")?ao:wr,minFilter:ps,samples:Y&&r===!0?4:0})),x.getDrawingBufferSize(re),Y?U.setSize(re.x,re.y):U.setSize(Oc(re.x),Oc(re.y));const ue=x.getRenderTarget();x.setRenderTarget(U),x.clear();const Xe=x.toneMapping;x.toneMapping=di,xn(D,Z,ae),x.toneMapping=Xe,ne.updateMultisampleRenderTarget(U),ne.updateRenderTargetMipmap(U),x.setRenderTarget(ue)}function xn(D,Z,ae){const Y=Z.isScene===!0?Z.overrideMaterial:null;for(let ue=0,Xe=D.length;ue<Xe;ue++){const et=D[ue],at=et.object,tt=et.geometry,xt=Y===null?et.material:Y,dt=et.group;at.layers.test(ae.layers)&&ka(at,Z,ae,tt,xt,dt)}}function ka(D,Z,ae,Y,ue,Xe){D.onBeforeRender(x,Z,ae,Y,ue,Xe),D.modelViewMatrix.multiplyMatrices(ae.matrixWorldInverse,D.matrixWorld),D.normalMatrix.getNormalMatrix(D.modelViewMatrix),ue.onBeforeRender(x,Z,ae,Y,D,Xe),ue.transparent===!0&&ue.side===Xi?(ue.side=Fn,ue.needsUpdate=!0,x.renderBufferDirect(ae,Z,Y,ue,D,Xe),ue.side=us,ue.needsUpdate=!0,x.renderBufferDirect(ae,Z,Y,ue,D,Xe),ue.side=Xi):x.renderBufferDirect(ae,Z,Y,ue,D,Xe),D.onAfterRender(x,Z,ae,Y,ue,Xe)}function Ms(D,Z,ae){Z.isScene!==!0&&(Z=Ee);const Y=he.get(D),ue=m.state.lights,Xe=m.state.shadowsArray,et=ue.state.version,at=He.getParameters(D,ue.state,Xe,Z,ae),tt=He.getProgramCacheKey(at);let xt=Y.programs;Y.environment=D.isMeshStandardMaterial?Z.environment:null,Y.fog=Z.fog,Y.envMap=(D.isMeshStandardMaterial?Oe:_e).get(D.envMap||Y.environment),xt===void 0&&(D.addEventListener("dispose",H),xt=new Map,Y.programs=xt);let dt=xt.get(tt);if(dt!==void 0){if(Y.currentProgram===dt&&Y.lightsStateVersion===et)return Ua(D,at),dt}else at.uniforms=He.getUniforms(D),D.onBuild(ae,at,x),D.onBeforeCompile(at,x),dt=He.acquireProgram(at,tt),xt.set(tt,dt),Y.uniforms=at.uniforms;const pt=Y.uniforms;(!D.isShaderMaterial&&!D.isRawShaderMaterial||D.clipping===!0)&&(pt.clippingPlanes=R.uniform),Ua(D,at),Y.needsLights=_o(D),Y.lightsStateVersion=et,Y.needsLights&&(pt.ambientLightColor.value=ue.state.ambient,pt.lightProbe.value=ue.state.probe,pt.directionalLights.value=ue.state.directional,pt.directionalLightShadows.value=ue.state.directionalShadow,pt.spotLights.value=ue.state.spot,pt.spotLightShadows.value=ue.state.spotShadow,pt.rectAreaLights.value=ue.state.rectArea,pt.ltc_1.value=ue.state.rectAreaLTC1,pt.ltc_2.value=ue.state.rectAreaLTC2,pt.pointLights.value=ue.state.point,pt.pointLightShadows.value=ue.state.pointShadow,pt.hemisphereLights.value=ue.state.hemi,pt.directionalShadowMap.value=ue.state.directionalShadowMap,pt.directionalShadowMatrix.value=ue.state.directionalShadowMatrix,pt.spotShadowMap.value=ue.state.spotShadowMap,pt.spotLightMatrix.value=ue.state.spotLightMatrix,pt.spotLightMap.value=ue.state.spotLightMap,pt.pointShadowMap.value=ue.state.pointShadowMap,pt.pointShadowMatrix.value=ue.state.pointShadowMatrix);const Dt=dt.getUniforms(),Pi=Rc.seqWithValue(Dt.seq,pt);return Y.currentProgram=dt,Y.uniformsList=Pi,dt}function Ua(D,Z){const ae=he.get(D);ae.outputEncoding=Z.outputEncoding,ae.instancing=Z.instancing,ae.skinning=Z.skinning,ae.morphTargets=Z.morphTargets,ae.morphNormals=Z.morphNormals,ae.morphColors=Z.morphColors,ae.morphTargetsCount=Z.morphTargetsCount,ae.numClippingPlanes=Z.numClippingPlanes,ae.numIntersection=Z.numClipIntersection,ae.vertexAlphas=Z.vertexAlphas,ae.vertexTangents=Z.vertexTangents,ae.toneMapping=Z.toneMapping}function tu(D,Z,ae,Y,ue){Z.isScene!==!0&&(Z=Ee),ne.resetTextureUnits();const Xe=Z.fog,et=Y.isMeshStandardMaterial?Z.environment:null,at=T===null?x.outputEncoding:T.isXRRenderTarget===!0?T.texture.encoding:ji,tt=(Y.isMeshStandardMaterial?Oe:_e).get(Y.envMap||et),xt=Y.vertexColors===!0&&!!ae.attributes.color&&ae.attributes.color.itemSize===4,dt=!!Y.normalMap&&!!ae.attributes.tangent,pt=!!ae.morphAttributes.position,Dt=!!ae.morphAttributes.normal,Pi=!!ae.morphAttributes.color,Ki=Y.toneMapped?x.toneMapping:di,$i=ae.morphAttributes.position||ae.morphAttributes.normal||ae.morphAttributes.color,bn=$i!==void 0?$i.length:0,ft=he.get(Y),gi=m.state.lights;if(V===!0&&(k===!0||D!==C)){const bt=D===C&&Y.id===E;R.setState(Y,D,bt)}let zt=!1;Y.version===ft.__version?(ft.needsLights&&ft.lightsStateVersion!==gi.state.version||ft.outputEncoding!==at||ue.isInstancedMesh&&ft.instancing===!1||!ue.isInstancedMesh&&ft.instancing===!0||ue.isSkinnedMesh&&ft.skinning===!1||!ue.isSkinnedMesh&&ft.skinning===!0||ft.envMap!==tt||Y.fog===!0&&ft.fog!==Xe||ft.numClippingPlanes!==void 0&&(ft.numClippingPlanes!==R.numPlanes||ft.numIntersection!==R.numIntersection)||ft.vertexAlphas!==xt||ft.vertexTangents!==dt||ft.morphTargets!==pt||ft.morphNormals!==Dt||ft.morphColors!==Pi||ft.toneMapping!==Ki||Ye.isWebGL2===!0&&ft.morphTargetsCount!==bn)&&(zt=!0):(zt=!0,ft.__version=Y.version);let Tn=ft.currentProgram;zt===!0&&(Tn=Ms(Y,Z,ue));let Vn=!1,Hn=!1,Gn=!1;const st=Tn.getUniforms(),gt=ft.uniforms;if(be.useProgram(Tn.program)&&(Vn=!0,Hn=!0,Gn=!0),Y.id!==E&&(E=Y.id,Hn=!0),Vn||C!==D){if(st.setValue(oe,"projectionMatrix",D.projectionMatrix),Ye.logarithmicDepthBuffer&&st.setValue(oe,"logDepthBufFC",2/(Math.log(D.far+1)/Math.LN2)),C!==D&&(C=D,Hn=!0,Gn=!0),Y.isShaderMaterial||Y.isMeshPhongMaterial||Y.isMeshToonMaterial||Y.isMeshStandardMaterial||Y.envMap){const bt=st.map.cameraPosition;bt!==void 0&&bt.setValue(oe,me.setFromMatrixPosition(D.matrixWorld))}(Y.isMeshPhongMaterial||Y.isMeshToonMaterial||Y.isMeshLambertMaterial||Y.isMeshBasicMaterial||Y.isMeshStandardMaterial||Y.isShaderMaterial)&&st.setValue(oe,"isOrthographic",D.isOrthographicCamera===!0),(Y.isMeshPhongMaterial||Y.isMeshToonMaterial||Y.isMeshLambertMaterial||Y.isMeshBasicMaterial||Y.isMeshStandardMaterial||Y.isShaderMaterial||Y.isShadowMaterial||ue.isSkinnedMesh)&&st.setValue(oe,"viewMatrix",D.matrixWorldInverse)}if(ue.isSkinnedMesh){st.setOptional(oe,ue,"bindMatrix"),st.setOptional(oe,ue,"bindMatrixInverse");const bt=ue.skeleton;bt&&(Ye.floatVertexTextures?(bt.boneTexture===null&&bt.computeBoneTexture(),st.setValue(oe,"boneTexture",bt.boneTexture,ne),st.setValue(oe,"boneTextureSize",bt.boneTextureSize)):console.warn("THREE.WebGLRenderer: SkinnedMesh can only be used with WebGL 2. With WebGL 1 OES_texture_float and vertex textures support is required."))}const Wn=ae.morphAttributes;if((Wn.position!==void 0||Wn.normal!==void 0||Wn.color!==void 0&&Ye.isWebGL2===!0)&&Se.update(ue,ae,Y,Tn),(Hn||ft.receiveShadow!==ue.receiveShadow)&&(ft.receiveShadow=ue.receiveShadow,st.setValue(oe,"receiveShadow",ue.receiveShadow)),Y.isMeshGouraudMaterial&&Y.envMap!==null&&(gt.envMap.value=tt,gt.flipEnvMap.value=tt.isCubeTexture&&tt.isRenderTargetTexture===!1?-1:1),Hn&&(st.setValue(oe,"toneMappingExposure",x.toneMappingExposure),ft.needsLights&&Ba(gt,Gn),Xe&&Y.fog===!0&&mt.refreshFogUniforms(gt,Xe),mt.refreshMaterialUniforms(gt,Y,q,F,U),Rc.upload(oe,ft.uniformsList,gt,ne)),Y.isShaderMaterial&&Y.uniformsNeedUpdate===!0&&(Rc.upload(oe,ft.uniformsList,gt,ne),Y.uniformsNeedUpdate=!1),Y.isSpriteMaterial&&st.setValue(oe,"center",ue.center),st.setValue(oe,"modelViewMatrix",ue.modelViewMatrix),st.setValue(oe,"normalMatrix",ue.normalMatrix),st.setValue(oe,"modelMatrix",ue.matrixWorld),Y.isShaderMaterial||Y.isRawShaderMaterial){const bt=Y.uniformsGroups;for(let nn=0,Li=bt.length;nn<Li;nn++)if(Ye.isWebGL2){const Ri=bt[nn];ke.update(Ri,Tn),ke.bind(Ri,Tn)}else console.warn("THREE.WebGLRenderer: Uniform Buffer Objects can only be used with WebGL 2.")}return Tn}function Ba(D,Z){D.ambientLightColor.needsUpdate=Z,D.lightProbe.needsUpdate=Z,D.directionalLights.needsUpdate=Z,D.directionalLightShadows.needsUpdate=Z,D.pointLights.needsUpdate=Z,D.pointLightShadows.needsUpdate=Z,D.spotLights.needsUpdate=Z,D.spotLightShadows.needsUpdate=Z,D.rectAreaLights.needsUpdate=Z,D.hemisphereLights.needsUpdate=Z}function _o(D){return D.isMeshLambertMaterial||D.isMeshToonMaterial||D.isMeshPhongMaterial||D.isMeshStandardMaterial||D.isShadowMaterial||D.isShaderMaterial&&D.lights===!0}this.getActiveCubeFace=function(){return S},this.getActiveMipmapLevel=function(){return w},this.getRenderTarget=function(){return T},this.setRenderTargetTextures=function(D,Z,ae){he.get(D.texture).__webglTexture=Z,he.get(D.depthTexture).__webglTexture=ae;const Y=he.get(D);Y.__hasExternalTextures=!0,Y.__hasExternalTextures&&(Y.__autoAllocateDepthBuffer=ae===void 0,Y.__autoAllocateDepthBuffer||Ge.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),Y.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(D,Z){const ae=he.get(D);ae.__webglFramebuffer=Z,ae.__useDefaultFramebuffer=Z===void 0},this.setRenderTarget=function(D,Z=0,ae=0){T=D,S=Z,w=ae;let Y=!0;if(D){const tt=he.get(D);tt.__useDefaultFramebuffer!==void 0?(be.bindFramebuffer(36160,null),Y=!1):tt.__webglFramebuffer===void 0?ne.setupRenderTarget(D):tt.__hasExternalTextures&&ne.rebindTextures(D,he.get(D.texture).__webglTexture,he.get(D.depthTexture).__webglTexture)}let ue=null,Xe=!1,et=!1;if(D){const tt=D.texture;(tt.isData3DTexture||tt.isDataArrayTexture)&&(et=!0);const xt=he.get(D).__webglFramebuffer;D.isWebGLCubeRenderTarget?(ue=xt[Z],Xe=!0):Ye.isWebGL2&&D.samples>0&&ne.useMultisampledRTT(D)===!1?ue=he.get(D).__webglMultisampledFramebuffer:ue=xt,P.copy(D.viewport),N.copy(D.scissor),A=D.scissorTest}else P.copy(W).multiplyScalar(q).floor(),N.copy($).multiplyScalar(q).floor(),A=te;if(be.bindFramebuffer(36160,ue)&&Ye.drawBuffers&&Y&&be.drawBuffers(D,ue),be.viewport(P),be.scissor(N),be.setScissorTest(A),Xe){const tt=he.get(D.texture);oe.framebufferTexture2D(36160,36064,34069+Z,tt.__webglTexture,ae)}else if(et){const tt=he.get(D.texture),xt=Z||0;oe.framebufferTextureLayer(36160,36064,tt.__webglTexture,ae||0,xt)}E=-1},this.readRenderTargetPixels=function(D,Z,ae,Y,ue,Xe,et){if(!(D&&D.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let at=he.get(D).__webglFramebuffer;if(D.isWebGLCubeRenderTarget&&et!==void 0&&(at=at[et]),at){be.bindFramebuffer(36160,at);try{const tt=D.texture,xt=tt.format,dt=tt.type;if(xt!==ii&&Ce.convert(xt)!==oe.getParameter(35739)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const pt=dt===ao&&(Ge.has("EXT_color_buffer_half_float")||Ye.isWebGL2&&Ge.has("EXT_color_buffer_float"));if(dt!==wr&&Ce.convert(dt)!==oe.getParameter(35738)&&!(dt===qi&&(Ye.isWebGL2||Ge.has("OES_texture_float")||Ge.has("WEBGL_color_buffer_float")))&&!pt){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}Z>=0&&Z<=D.width-Y&&ae>=0&&ae<=D.height-ue&&oe.readPixels(Z,ae,Y,ue,Ce.convert(xt),Ce.convert(dt),Xe)}finally{const tt=T!==null?he.get(T).__webglFramebuffer:null;be.bindFramebuffer(36160,tt)}}},this.copyFramebufferToTexture=function(D,Z,ae=0){const Y=Math.pow(2,-ae),ue=Math.floor(Z.image.width*Y),Xe=Math.floor(Z.image.height*Y);ne.setTexture2D(Z,0),oe.copyTexSubImage2D(3553,ae,0,0,D.x,D.y,ue,Xe),be.unbindTexture()},this.copyTextureToTexture=function(D,Z,ae,Y=0){const ue=Z.image.width,Xe=Z.image.height,et=Ce.convert(ae.format),at=Ce.convert(ae.type);ne.setTexture2D(ae,0),oe.pixelStorei(37440,ae.flipY),oe.pixelStorei(37441,ae.premultiplyAlpha),oe.pixelStorei(3317,ae.unpackAlignment),Z.isDataTexture?oe.texSubImage2D(3553,Y,D.x,D.y,ue,Xe,et,at,Z.image.data):Z.isCompressedTexture?oe.compressedTexSubImage2D(3553,Y,D.x,D.y,Z.mipmaps[0].width,Z.mipmaps[0].height,et,Z.mipmaps[0].data):oe.texSubImage2D(3553,Y,D.x,D.y,et,at,Z.image),Y===0&&ae.generateMipmaps&&oe.generateMipmap(3553),be.unbindTexture()},this.copyTextureToTexture3D=function(D,Z,ae,Y,ue=0){if(x.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const Xe=D.max.x-D.min.x+1,et=D.max.y-D.min.y+1,at=D.max.z-D.min.z+1,tt=Ce.convert(Y.format),xt=Ce.convert(Y.type);let dt;if(Y.isData3DTexture)ne.setTexture3D(Y,0),dt=32879;else if(Y.isDataArrayTexture)ne.setTexture2DArray(Y,0),dt=35866;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}oe.pixelStorei(37440,Y.flipY),oe.pixelStorei(37441,Y.premultiplyAlpha),oe.pixelStorei(3317,Y.unpackAlignment);const pt=oe.getParameter(3314),Dt=oe.getParameter(32878),Pi=oe.getParameter(3316),Ki=oe.getParameter(3315),$i=oe.getParameter(32877),bn=ae.isCompressedTexture?ae.mipmaps[0]:ae.image;oe.pixelStorei(3314,bn.width),oe.pixelStorei(32878,bn.height),oe.pixelStorei(3316,D.min.x),oe.pixelStorei(3315,D.min.y),oe.pixelStorei(32877,D.min.z),ae.isDataTexture||ae.isData3DTexture?oe.texSubImage3D(dt,ue,Z.x,Z.y,Z.z,Xe,et,at,tt,xt,bn.data):ae.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),oe.compressedTexSubImage3D(dt,ue,Z.x,Z.y,Z.z,Xe,et,at,tt,bn.data)):oe.texSubImage3D(dt,ue,Z.x,Z.y,Z.z,Xe,et,at,tt,xt,bn),oe.pixelStorei(3314,pt),oe.pixelStorei(32878,Dt),oe.pixelStorei(3316,Pi),oe.pixelStorei(3315,Ki),oe.pixelStorei(32877,$i),ue===0&&Y.generateMipmaps&&oe.generateMipmap(dt),be.unbindTexture()},this.initTexture=function(D){D.isCubeTexture?ne.setTextureCube(D,0):D.isData3DTexture?ne.setTexture3D(D,0):D.isDataArrayTexture?ne.setTexture2DArray(D,0):ne.setTexture2D(D,0),be.unbindTexture()},this.resetState=function(){S=0,w=0,T=null,be.reset(),de.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}class Q0 extends $f{}Q0.prototype.isWebGL1Renderer=!0;class qc{constructor(e,t=25e-5){this.isFogExp2=!0,this.name="",this.color=new De(e),this.density=t}clone(){return new qc(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}class Yc{constructor(e,t=1,n=1e3){this.isFog=!0,this.name="",this.color=new De(e),this.near=t,this.far=n}clone(){return new Yc(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}class ed extends St{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}get autoUpdate(){return console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate}set autoUpdate(e){console.warn("THREE.Scene: autoUpdate was renamed to matrixWorldAutoUpdate in r144."),this.matrixWorldAutoUpdate=e}}class Zc{constructor(e,t){this.isInterleavedBuffer=!0,this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=la,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=kn()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,r=this.stride;i<r;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=kn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=kn()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const Mn=new I;class fs{constructor(e,t,n,i=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Mn.fromBufferAttribute(this,t),Mn.applyMatrix4(e),this.setXYZ(t,Mn.x,Mn.y,Mn.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Mn.fromBufferAttribute(this,t),Mn.applyNormalMatrix(e),this.setXYZ(t,Mn.x,Mn.y,Mn.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Mn.fromBufferAttribute(this,t),Mn.transformDirection(e),this.setXYZ(t,Mn.x,Mn.y,Mn.z);return this}setX(e,t){return this.normalized&&(t=Ct(t,this.array)),this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.normalized&&(t=Ct(t,this.array)),this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.normalized&&(t=Ct(t,this.array)),this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.normalized&&(t=Ct(t,this.array)),this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){let t=this.data.array[e*this.data.stride+this.offset];return this.normalized&&(t=Yi(t,this.array)),t}getY(e){let t=this.data.array[e*this.data.stride+this.offset+1];return this.normalized&&(t=Yi(t,this.array)),t}getZ(e){let t=this.data.array[e*this.data.stride+this.offset+2];return this.normalized&&(t=Yi(t,this.array)),t}getW(e){let t=this.data.array[e*this.data.stride+this.offset+3];return this.normalized&&(t=Yi(t,this.array)),t}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.normalized&&(t=Ct(t,this.array),n=Ct(n,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.normalized&&(t=Ct(t,this.array),n=Ct(n,this.array),i=Ct(i,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,r){return e=e*this.data.stride+this.offset,this.normalized&&(t=Ct(t,this.array),n=Ct(n,this.array),i=Ct(i,this.array),r=Ct(r,this.array)),this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=r,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return new Pt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new fs(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let r=0;r<this.itemSize;r++)t.push(this.data.array[i+r])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class td extends un{constructor(e){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new De(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}let Zs;const Go=new I,js=new I,Js=new I,Qs=new fe,Wo=new fe,K0=new ot,tc=new I,Xo=new I,nc=new I,Bm=new fe,Rh=new fe,Vm=new fe;class $0 extends St{constructor(e){if(super(),this.isSprite=!0,this.type="Sprite",Zs===void 0){Zs=new ct;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new Zc(t,5);Zs.setIndex([0,1,2,0,2,3]),Zs.setAttribute("position",new fs(n,3,0,!1)),Zs.setAttribute("uv",new fs(n,2,3,!1))}this.geometry=Zs,this.material=e!==void 0?e:new td,this.center=new fe(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),js.setFromMatrixScale(this.matrixWorld),K0.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Js.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&js.multiplyScalar(-Js.z);const n=this.material.rotation;let i,r;n!==0&&(r=Math.cos(n),i=Math.sin(n));const a=this.center;ic(tc.set(-.5,-.5,0),Js,a,js,i,r),ic(Xo.set(.5,-.5,0),Js,a,js,i,r),ic(nc.set(.5,.5,0),Js,a,js,i,r),Bm.set(0,0),Rh.set(1,0),Vm.set(1,1);let c=e.ray.intersectTriangle(tc,Xo,nc,!1,Go);if(c===null&&(ic(Xo.set(-.5,.5,0),Js,a,js,i,r),Rh.set(0,1),c=e.ray.intersectTriangle(tc,nc,Xo,!1,Go),c===null))return;const u=e.ray.origin.distanceTo(Go);u<e.near||u>e.far||t.push({distance:u,point:Go.clone(),uv:ni.getUV(Go,tc,Xo,nc,Bm,Rh,Vm,new fe),face:null,object:this})}copy(e,t){return super.copy(e,t),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}function ic(l,e,t,n,i,r){Qs.subVectors(l,t).addScalar(.5).multiply(n),i!==void 0?(Wo.x=r*Qs.x-i*Qs.y,Wo.y=i*Qs.x+r*Qs.y):Wo.copy(Qs),l.copy(e),l.x+=Wo.x,l.y+=Wo.y,l.applyMatrix4(K0)}const rc=new I,Hm=new I;class ev extends St{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const r=t[n];this.addLevel(r.object.clone(),r.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);const n=this.levels;let i;for(i=0;i<n.length&&!(t<n[i].distance);i++);return n.splice(i,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i&&!(e<t[n].distance);n++);return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){rc.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(rc);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){rc.setFromMatrixPosition(e.matrixWorld),Hm.setFromMatrixPosition(this.matrixWorld);const n=rc.distanceTo(Hm)/e.zoom;t[0].object.visible=!0;let i,r;for(i=1,r=t.length;i<r&&n>=t[i].distance;i++)t[i-1].object.visible=!1,t[i].object.visible=!0;for(this._currentLevel=i-1;i<r;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,r=n.length;i<r;i++){const a=n[i];t.object.levels.push({object:a.object.uuid,distance:a.distance})}return t}}const Gm=new I,Wm=new Tt,Xm=new Tt,Xw=new I,qm=new ot;class tv extends cn{constructor(e,t){super(e,t),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new ot,this.bindMatrixInverse=new ot}copy(e,t){return super.copy(e,t),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new Tt,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const r=1/e.manhattanLength();r!==1/0?e.multiplyScalar(r):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;Wm.fromBufferAttribute(i.attributes.skinIndex,e),Xm.fromBufferAttribute(i.attributes.skinWeight,e),Gm.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let r=0;r<4;r++){const a=Xm.getComponent(r);if(a!==0){const c=Wm.getComponent(r);qm.multiplyMatrices(n.bones[c].matrixWorld,n.boneInverses[c]),t.addScaledVector(Xw.copy(Gm).applyMatrix4(qm),a)}}return t.applyMatrix4(this.bindMatrixInverse)}}class nd extends St{constructor(){super(),this.isBone=!0,this.type="Bone"}}class oo extends Qt{constructor(e=null,t=1,n=1,i,r,a,c,u,h=Jt,d=Jt,p,m){super(null,a,c,u,h,d,i,r,p,m),this.isDataTexture=!0,this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const Ym=new ot,qw=new ot;class jc{constructor(e=[],t=[]){this.uuid=kn(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new ot)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new ot;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let r=0,a=e.length;r<a;r++){const c=e[r]?e[r].matrixWorld:qw;Ym.multiplyMatrices(c,t[r]),Ym.toArray(n,r*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new jc(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=F0(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new oo(t,e,e,ii,qi);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const r=e.bones[n];let a=t[r];a===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",r),a=new nd),this.bones.push(a),this.boneInverses.push(new ot().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,r=t.length;i<r;i++){const a=t[i];e.bones.push(a.uuid);const c=n[i];e.boneInverses.push(c.toArray())}return e}}class co extends Pt{constructor(e,t,n,i=1){super(e,t,n),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}const Zm=new ot,jm=new ot,sc=[],qo=new cn;class nv extends cn{constructor(e,t,n){super(e,t),this.isInstancedMesh=!0,this.instanceMatrix=new co(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e,t){return super.copy(e,t),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(qo.geometry=this.geometry,qo.material=this.material,qo.material!==void 0)for(let r=0;r<i;r++){this.getMatrixAt(r,Zm),jm.multiplyMatrices(n,Zm),qo.matrixWorld=jm,qo.raycast(e,sc);for(let a=0,c=sc.length;a<c;a++){const u=sc[a];u.instanceId=r,u.object=this,t.push(u)}sc.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new co(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}class wn extends un{constructor(e){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new De(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this.fog=e.fog,this}}const Jm=new I,Qm=new I,Km=new ot,Ih=new Ma,oc=new gs;class br extends St{constructor(e=new ct,t=new wn){super(),this.isLine=!0,this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,r=t.count;i<r;i++)Jm.fromBufferAttribute(t,i-1),Qm.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Jm.distanceTo(Qm);e.setAttribute("lineDistance",new Fe(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Line.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),oc.copy(n.boundingSphere),oc.applyMatrix4(i),oc.radius+=r,e.ray.intersectsSphere(oc)===!1)return;Km.copy(i).invert(),Ih.copy(e.ray).applyMatrix4(Km);const c=r/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=new I,d=new I,p=new I,m=new I,v=this.isLineSegments?2:1,y=n.index,_=n.attributes.position;if(y!==null){const S=Math.max(0,a.start),w=Math.min(y.count,a.start+a.count);for(let T=S,E=w-1;T<E;T+=v){const C=y.getX(T),P=y.getX(T+1);if(h.fromBufferAttribute(_,C),d.fromBufferAttribute(_,P),Ih.distanceSqToSegment(h,d,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const A=e.ray.origin.distanceTo(m);A<e.near||A>e.far||t.push({distance:A,point:p.clone().applyMatrix4(this.matrixWorld),index:T,face:null,faceIndex:null,object:this})}}else{const S=Math.max(0,a.start),w=Math.min(_.count,a.start+a.count);for(let T=S,E=w-1;T<E;T+=v){if(h.fromBufferAttribute(_,T),d.fromBufferAttribute(_,T+1),Ih.distanceSqToSegment(h,d,m,p)>u)continue;m.applyMatrix4(this.matrixWorld);const P=e.ray.origin.distanceTo(m);P<e.near||P>e.far||t.push({distance:P,point:p.clone().applyMatrix4(this.matrixWorld),index:T,face:null,faceIndex:null,object:this})}}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const c=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=r}}}}}const $m=new I,eg=new I;class Ci extends br{constructor(e,t){super(e,t),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,r=t.count;i<r;i+=2)$m.fromBufferAttribute(t,i),eg.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+$m.distanceTo(eg);e.setAttribute("lineDistance",new Fe(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class iv extends br{constructor(e,t){super(e,t),this.isLineLoop=!0,this.type="LineLoop"}}class id extends un{constructor(e){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new De(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this.fog=e.fog,this}}const tg=new ot,Af=new Ma,ac=new gs,lc=new I;class rv extends St{constructor(e=new ct,t=new id){super(),this.isPoints=!0,this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e,t){return super.copy(e,t),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,r=e.params.Points.threshold,a=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),ac.copy(n.boundingSphere),ac.applyMatrix4(i),ac.radius+=r,e.ray.intersectsSphere(ac)===!1)return;tg.copy(i).invert(),Af.copy(e.ray).applyMatrix4(tg);const c=r/((this.scale.x+this.scale.y+this.scale.z)/3),u=c*c,h=n.index,p=n.attributes.position;if(h!==null){const m=Math.max(0,a.start),v=Math.min(h.count,a.start+a.count);for(let y=m,x=v;y<x;y++){const _=h.getX(y);lc.fromBufferAttribute(p,_),ng(lc,_,u,i,e,t,this)}}else{const m=Math.max(0,a.start),v=Math.min(p.count,a.start+a.count);for(let y=m,x=v;y<x;y++)lc.fromBufferAttribute(p,y),ng(lc,y,u,i,e,t,this)}}updateMorphTargets(){const t=this.geometry.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let r=0,a=i.length;r<a;r++){const c=i[r].name||String(r);this.morphTargetInfluences.push(0),this.morphTargetDictionary[c]=r}}}}}function ng(l,e,t,n,i,r,a){const c=Af.distanceSqToPoint(l);if(c<t){const u=new I;Af.closestPointToPoint(l,u),u.applyMatrix4(n);const h=i.ray.origin.distanceTo(u);if(h<i.near||h>i.far)return;r.push({distance:h,distanceToRay:Math.sqrt(c),point:u,index:e,face:null,object:a})}}class Yw extends Qt{constructor(e,t,n,i,r,a,c,u,h){super(e,t,n,i,r,a,c,u,h),this.isVideoTexture=!0,this.minFilter=a!==void 0?a:Xt,this.magFilter=r!==void 0?r:Xt,this.generateMipmaps=!1;const d=this;function p(){d.needsUpdate=!0,e.requestVideoFrameCallback(p)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(p)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class Zw extends Qt{constructor(e,t,n){super({width:e,height:t}),this.isFramebufferTexture=!0,this.format=n,this.magFilter=Jt,this.minFilter=Jt,this.generateMipmaps=!1,this.needsUpdate=!0}}class sv extends Qt{constructor(e,t,n,i,r,a,c,u,h,d,p,m){super(null,a,c,u,h,d,i,r,p,m),this.isCompressedTexture=!0,this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}class jw extends Qt{constructor(e,t,n,i,r,a,c,u,h){super(e,t,n,i,r,a,c,u,h),this.isCanvasTexture=!0,this.needsUpdate=!0}}class pi{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),r=0;t.push(0);for(let a=1;a<=e;a++)n=this.getPoint(a/e),r+=n.distanceTo(i),t.push(r),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const r=n.length;let a;t?a=t:a=e*n[r-1];let c=0,u=r-1,h;for(;c<=u;)if(i=Math.floor(c+(u-c)/2),h=n[i]-a,h<0)c=i+1;else if(h>0)u=i-1;else{u=i;break}if(i=u,n[i]===a)return i/(r-1);const d=n[i],m=n[i+1]-d,v=(a-d)/m;return(i+v)/(r-1)}getTangent(e,t){let i=e-1e-4,r=e+1e-4;i<0&&(i=0),r>1&&(r=1);const a=this.getPoint(i),c=this.getPoint(r),u=t||(a.isVector2?new fe:new I);return u.copy(c).sub(a).normalize(),u}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new I,i=[],r=[],a=[],c=new I,u=new ot;for(let v=0;v<=e;v++){const y=v/e;i[v]=this.getTangentAt(y,new I)}r[0]=new I,a[0]=new I;let h=Number.MAX_VALUE;const d=Math.abs(i[0].x),p=Math.abs(i[0].y),m=Math.abs(i[0].z);d<=h&&(h=d,n.set(1,0,0)),p<=h&&(h=p,n.set(0,1,0)),m<=h&&n.set(0,0,1),c.crossVectors(i[0],n).normalize(),r[0].crossVectors(i[0],c),a[0].crossVectors(i[0],r[0]);for(let v=1;v<=e;v++){if(r[v]=r[v-1].clone(),a[v]=a[v-1].clone(),c.crossVectors(i[v-1],i[v]),c.length()>Number.EPSILON){c.normalize();const y=Math.acos(qt(i[v-1].dot(i[v]),-1,1));r[v].applyMatrix4(u.makeRotationAxis(c,y))}a[v].crossVectors(i[v],r[v])}if(t===!0){let v=Math.acos(qt(r[0].dot(r[e]),-1,1));v/=e,i[0].dot(c.crossVectors(r[0],r[e]))>0&&(v=-v);for(let y=1;y<=e;y++)r[y].applyMatrix4(u.makeRotationAxis(i[y],v*y)),a[y].crossVectors(i[y],r[y])}return{tangents:i,normals:r,binormals:a}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class Jc extends pi{constructor(e=0,t=0,n=1,i=1,r=0,a=Math.PI*2,c=!1,u=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=r,this.aEndAngle=a,this.aClockwise=c,this.aRotation=u}getPoint(e,t){const n=t||new fe,i=Math.PI*2;let r=this.aEndAngle-this.aStartAngle;const a=Math.abs(r)<Number.EPSILON;for(;r<0;)r+=i;for(;r>i;)r-=i;r<Number.EPSILON&&(a?r=0:r=i),this.aClockwise===!0&&!a&&(r===i?r=-i:r=r-i);const c=this.aStartAngle+e*r;let u=this.aX+this.xRadius*Math.cos(c),h=this.aY+this.yRadius*Math.sin(c);if(this.aRotation!==0){const d=Math.cos(this.aRotation),p=Math.sin(this.aRotation),m=u-this.aX,v=h-this.aY;u=m*d-v*p+this.aX,h=m*p+v*d+this.aY}return n.set(u,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}class ov extends Jc{constructor(e,t,n,i,r,a){super(e,t,n,n,i,r,a),this.isArcCurve=!0,this.type="ArcCurve"}}function rd(){let l=0,e=0,t=0,n=0;function i(r,a,c,u){l=r,e=c,t=-3*r+3*a-2*c-u,n=2*r-2*a+c+u}return{initCatmullRom:function(r,a,c,u,h){i(a,c,h*(c-r),h*(u-a))},initNonuniformCatmullRom:function(r,a,c,u,h,d,p){let m=(a-r)/h-(c-r)/(h+d)+(c-a)/d,v=(c-a)/d-(u-a)/(d+p)+(u-c)/p;m*=d,v*=d,i(a,c,m,v)},calc:function(r){const a=r*r,c=a*r;return l+e*r+t*a+n*c}}}const cc=new I,Dh=new rd,zh=new rd,Nh=new rd;class av extends pi{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new I){const n=t,i=this.points,r=i.length,a=(r-(this.closed?0:1))*e;let c=Math.floor(a),u=a-c;this.closed?c+=c>0?0:(Math.floor(Math.abs(c)/r)+1)*r:u===0&&c===r-1&&(c=r-2,u=1);let h,d;this.closed||c>0?h=i[(c-1)%r]:(cc.subVectors(i[0],i[1]).add(i[0]),h=cc);const p=i[c%r],m=i[(c+1)%r];if(this.closed||c+2<r?d=i[(c+2)%r]:(cc.subVectors(i[r-1],i[r-2]).add(i[r-1]),d=cc),this.curveType==="centripetal"||this.curveType==="chordal"){const v=this.curveType==="chordal"?.5:.25;let y=Math.pow(h.distanceToSquared(p),v),x=Math.pow(p.distanceToSquared(m),v),_=Math.pow(m.distanceToSquared(d),v);x<1e-4&&(x=1),y<1e-4&&(y=x),_<1e-4&&(_=x),Dh.initNonuniformCatmullRom(h.x,p.x,m.x,d.x,y,x,_),zh.initNonuniformCatmullRom(h.y,p.y,m.y,d.y,y,x,_),Nh.initNonuniformCatmullRom(h.z,p.z,m.z,d.z,y,x,_)}else this.curveType==="catmullrom"&&(Dh.initCatmullRom(h.x,p.x,m.x,d.x,this.tension),zh.initCatmullRom(h.y,p.y,m.y,d.y,this.tension),Nh.initCatmullRom(h.z,p.z,m.z,d.z,this.tension));return n.set(Dh.calc(u),zh.calc(u),Nh.calc(u)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new I().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}function ig(l,e,t,n,i){const r=(n-e)*.5,a=(i-t)*.5,c=l*l,u=l*c;return(2*t-2*n+r+a)*u+(-3*t+3*n-2*r-a)*c+r*l+t}function Jw(l,e){const t=1-l;return t*t*e}function Qw(l,e){return 2*(1-l)*l*e}function Kw(l,e){return l*l*e}function $o(l,e,t,n){return Jw(l,e)+Qw(l,t)+Kw(l,n)}function $w(l,e){const t=1-l;return t*t*t*e}function eb(l,e){const t=1-l;return 3*t*t*l*e}function tb(l,e){return 3*(1-l)*l*l*e}function nb(l,e){return l*l*l*e}function ea(l,e,t,n,i){return $w(l,e)+eb(l,t)+tb(l,n)+nb(l,i)}class sd extends pi{constructor(e=new fe,t=new fe,n=new fe,i=new fe){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new fe){const n=t,i=this.v0,r=this.v1,a=this.v2,c=this.v3;return n.set(ea(e,i.x,r.x,a.x,c.x),ea(e,i.y,r.y,a.y,c.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class lv extends pi{constructor(e=new I,t=new I,n=new I,i=new I){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new I){const n=t,i=this.v0,r=this.v1,a=this.v2,c=this.v3;return n.set(ea(e,i.x,r.x,a.x,c.x),ea(e,i.y,r.y,a.y,c.y),ea(e,i.z,r.z,a.z,c.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}class Qc extends pi{constructor(e=new fe,t=new fe){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new fe){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new fe;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class cv extends pi{constructor(e=new I,t=new I){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=e,this.v2=t}getPoint(e,t=new I){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class od extends pi{constructor(e=new fe,t=new fe,n=new fe){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new fe){const n=t,i=this.v0,r=this.v1,a=this.v2;return n.set($o(e,i.x,r.x,a.x),$o(e,i.y,r.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ad extends pi{constructor(e=new I,t=new I,n=new I){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new I){const n=t,i=this.v0,r=this.v1,a=this.v2;return n.set($o(e,i.x,r.x,a.x),$o(e,i.y,r.y,a.y),$o(e,i.z,r.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class ld extends pi{constructor(e=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=e}getPoint(e,t=new fe){const n=t,i=this.points,r=(i.length-1)*e,a=Math.floor(r),c=r-a,u=i[a===0?a:a-1],h=i[a],d=i[a>i.length-2?i.length-1:a+1],p=i[a>i.length-3?i.length-1:a+2];return n.set(ig(c,u.x,h.x,d.x,p.x),ig(c,u.y,h.y,d.y,p.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new fe().fromArray(i))}return this}}var cd=Object.freeze({__proto__:null,ArcCurve:ov,CatmullRomCurve3:av,CubicBezierCurve:sd,CubicBezierCurve3:lv,EllipseCurve:Jc,LineCurve:Qc,LineCurve3:cv,QuadraticBezierCurve:od,QuadraticBezierCurve3:ad,SplineCurve:ld});class uv extends pi{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Qc(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let r=0;for(;r<i.length;){if(i[r]>=n){const a=i[r]-n,c=this.curves[r],u=c.getLength(),h=u===0?0:1-a/u;return c.getPointAt(h,t)}r++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,r=this.curves;i<r.length;i++){const a=r[i],c=a.isEllipseCurve?e*2:a.isLineCurve||a.isLineCurve3?1:a.isSplineCurve?e*a.points.length:e,u=a.getPoints(c);for(let h=0;h<u.length;h++){const d=u[h];n&&n.equals(d)||(t.push(d),n=d)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new cd[i.type]().fromJSON(i))}return this}}class ha extends uv{constructor(e){super(),this.type="Path",this.currentPoint=new fe,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Qc(this.currentPoint.clone(),new fe(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const r=new od(this.currentPoint.clone(),new fe(e,t),new fe(n,i));return this.curves.push(r),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,r,a){const c=new sd(this.currentPoint.clone(),new fe(e,t),new fe(n,i),new fe(r,a));return this.curves.push(c),this.currentPoint.set(r,a),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new ld(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,r,a){const c=this.currentPoint.x,u=this.currentPoint.y;return this.absarc(e+c,t+u,n,i,r,a),this}absarc(e,t,n,i,r,a){return this.absellipse(e,t,n,n,i,r,a),this}ellipse(e,t,n,i,r,a,c,u){const h=this.currentPoint.x,d=this.currentPoint.y;return this.absellipse(e+h,t+d,n,i,r,a,c,u),this}absellipse(e,t,n,i,r,a,c,u){const h=new Jc(e,t,n,i,r,a,c,u);if(this.curves.length>0){const p=h.getPoint(0);p.equals(this.currentPoint)||this.lineTo(p.x,p.y)}this.curves.push(h);const d=h.getPoint(1);return this.currentPoint.copy(d),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class go extends ct{constructor(e=[new fe(0,-.5),new fe(.5,0),new fe(0,.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=qt(i,0,Math.PI*2);const r=[],a=[],c=[],u=[],h=[],d=1/t,p=new I,m=new fe,v=new I,y=new I,x=new I;let _=0,S=0;for(let w=0;w<=e.length-1;w++)switch(w){case 0:_=e[w+1].x-e[w].x,S=e[w+1].y-e[w].y,v.x=S*1,v.y=-_,v.z=S*0,x.copy(v),v.normalize(),u.push(v.x,v.y,v.z);break;case e.length-1:u.push(x.x,x.y,x.z);break;default:_=e[w+1].x-e[w].x,S=e[w+1].y-e[w].y,v.x=S*1,v.y=-_,v.z=S*0,y.copy(v),v.x+=x.x,v.y+=x.y,v.z+=x.z,v.normalize(),u.push(v.x,v.y,v.z),x.copy(y)}for(let w=0;w<=t;w++){const T=n+w*d*i,E=Math.sin(T),C=Math.cos(T);for(let P=0;P<=e.length-1;P++){p.x=e[P].x*E,p.y=e[P].y,p.z=e[P].x*C,a.push(p.x,p.y,p.z),m.x=w/t,m.y=P/(e.length-1),c.push(m.x,m.y);const N=u[3*P+0]*E,A=u[3*P+1],L=u[3*P+0]*C;h.push(N,A,L)}}for(let w=0;w<t;w++)for(let T=0;T<e.length-1;T++){const E=T+w*e.length,C=E,P=E+e.length,N=E+e.length+1,A=E+1;r.push(C,P,A),r.push(N,A,P)}this.setIndex(r),this.setAttribute("position",new Fe(a,3)),this.setAttribute("uv",new Fe(c,2)),this.setAttribute("normal",new Fe(h,3))}static fromJSON(e){return new go(e.points,e.segments,e.phiStart,e.phiLength)}}class ba extends go{constructor(e=1,t=1,n=4,i=8){const r=new ha;r.absarc(0,-t/2,e,Math.PI*1.5,0),r.absarc(0,t/2,e,0,Math.PI*.5),super(r.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new ba(e.radius,e.length,e.capSegments,e.radialSegments)}}class Ta extends ct{constructor(e=1,t=8,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const r=[],a=[],c=[],u=[],h=new I,d=new fe;a.push(0,0,0),c.push(0,0,1),u.push(.5,.5);for(let p=0,m=3;p<=t;p++,m+=3){const v=n+p/t*i;h.x=e*Math.cos(v),h.y=e*Math.sin(v),a.push(h.x,h.y,h.z),c.push(0,0,1),d.x=(a[m]/e+1)/2,d.y=(a[m+1]/e+1)/2,u.push(d.x,d.y)}for(let p=1;p<=t;p++)r.push(p,p+1,0);this.setIndex(r),this.setAttribute("position",new Fe(a,3)),this.setAttribute("normal",new Fe(c,3)),this.setAttribute("uv",new Fe(u,2))}static fromJSON(e){return new Ta(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class vs extends ct{constructor(e=1,t=1,n=1,i=8,r=1,a=!1,c=0,u=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:r,openEnded:a,thetaStart:c,thetaLength:u};const h=this;i=Math.floor(i),r=Math.floor(r);const d=[],p=[],m=[],v=[];let y=0;const x=[],_=n/2;let S=0;w(),a===!1&&(e>0&&T(!0),t>0&&T(!1)),this.setIndex(d),this.setAttribute("position",new Fe(p,3)),this.setAttribute("normal",new Fe(m,3)),this.setAttribute("uv",new Fe(v,2));function w(){const E=new I,C=new I;let P=0;const N=(t-e)/n;for(let A=0;A<=r;A++){const L=[],F=A/r,q=F*(t-e)+e;for(let se=0;se<=i;se++){const J=se/i,W=J*u+c,$=Math.sin(W),te=Math.cos(W);C.x=q*$,C.y=-F*n+_,C.z=q*te,p.push(C.x,C.y,C.z),E.set($,N,te).normalize(),m.push(E.x,E.y,E.z),v.push(J,1-F),L.push(y++)}x.push(L)}for(let A=0;A<i;A++)for(let L=0;L<r;L++){const F=x[L][A],q=x[L+1][A],se=x[L+1][A+1],J=x[L][A+1];d.push(F,q,J),d.push(q,se,J),P+=6}h.addGroup(S,P,0),S+=P}function T(E){const C=y,P=new fe,N=new I;let A=0;const L=E===!0?e:t,F=E===!0?1:-1;for(let se=1;se<=i;se++)p.push(0,_*F,0),m.push(0,F,0),v.push(.5,.5),y++;const q=y;for(let se=0;se<=i;se++){const W=se/i*u+c,$=Math.cos(W),te=Math.sin(W);N.x=L*te,N.y=_*F,N.z=L*$,p.push(N.x,N.y,N.z),m.push(0,F,0),P.x=$*.5+.5,P.y=te*.5*F+.5,v.push(P.x,P.y),y++}for(let se=0;se<i;se++){const J=C+se,W=q+se;E===!0?d.push(W,W+1,J):d.push(W+1,W,J),A+=3}h.addGroup(S,A,E===!0?1:2),S+=A}}static fromJSON(e){return new vs(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Ea extends vs{constructor(e=1,t=1,n=8,i=1,r=!1,a=0,c=Math.PI*2){super(0,e,t,n,i,r,a,c),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:r,thetaStart:a,thetaLength:c}}static fromJSON(e){return new Ea(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Qi extends ct{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const r=[],a=[];c(i),h(n),d(),this.setAttribute("position",new Fe(r,3)),this.setAttribute("normal",new Fe(r.slice(),3)),this.setAttribute("uv",new Fe(a,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function c(w){const T=new I,E=new I,C=new I;for(let P=0;P<t.length;P+=3)v(t[P+0],T),v(t[P+1],E),v(t[P+2],C),u(T,E,C,w)}function u(w,T,E,C){const P=C+1,N=[];for(let A=0;A<=P;A++){N[A]=[];const L=w.clone().lerp(E,A/P),F=T.clone().lerp(E,A/P),q=P-A;for(let se=0;se<=q;se++)se===0&&A===P?N[A][se]=L:N[A][se]=L.clone().lerp(F,se/q)}for(let A=0;A<P;A++)for(let L=0;L<2*(P-A)-1;L++){const F=Math.floor(L/2);L%2===0?(m(N[A][F+1]),m(N[A+1][F]),m(N[A][F])):(m(N[A][F+1]),m(N[A+1][F+1]),m(N[A+1][F]))}}function h(w){const T=new I;for(let E=0;E<r.length;E+=3)T.x=r[E+0],T.y=r[E+1],T.z=r[E+2],T.normalize().multiplyScalar(w),r[E+0]=T.x,r[E+1]=T.y,r[E+2]=T.z}function d(){const w=new I;for(let T=0;T<r.length;T+=3){w.x=r[T+0],w.y=r[T+1],w.z=r[T+2];const E=_(w)/2/Math.PI+.5,C=S(w)/Math.PI+.5;a.push(E,1-C)}y(),p()}function p(){for(let w=0;w<a.length;w+=6){const T=a[w+0],E=a[w+2],C=a[w+4],P=Math.max(T,E,C),N=Math.min(T,E,C);P>.9&&N<.1&&(T<.2&&(a[w+0]+=1),E<.2&&(a[w+2]+=1),C<.2&&(a[w+4]+=1))}}function m(w){r.push(w.x,w.y,w.z)}function v(w,T){const E=w*3;T.x=e[E+0],T.y=e[E+1],T.z=e[E+2]}function y(){const w=new I,T=new I,E=new I,C=new I,P=new fe,N=new fe,A=new fe;for(let L=0,F=0;L<r.length;L+=9,F+=6){w.set(r[L+0],r[L+1],r[L+2]),T.set(r[L+3],r[L+4],r[L+5]),E.set(r[L+6],r[L+7],r[L+8]),P.set(a[F+0],a[F+1]),N.set(a[F+2],a[F+3]),A.set(a[F+4],a[F+5]),C.copy(w).add(T).add(E).divideScalar(3);const q=_(C);x(P,F+0,w,q),x(N,F+2,T,q),x(A,F+4,E,q)}}function x(w,T,E,C){C<0&&w.x===1&&(a[T]=w.x-1),E.x===0&&E.z===0&&(a[T]=C/2/Math.PI+.5)}function _(w){return Math.atan2(w.z,-w.x)}function S(w){return Math.atan2(-w.y,Math.sqrt(w.x*w.x+w.z*w.z))}}static fromJSON(e){return new Qi(e.vertices,e.indices,e.radius,e.details)}}class Aa extends Qi{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,r=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],a=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(r,a,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Aa(e.radius,e.detail)}}const uc=new I,hc=new I,Oh=new I,fc=new ni;class hv extends ct{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),r=Math.cos(os*t),a=e.getIndex(),c=e.getAttribute("position"),u=a?a.count:c.count,h=[0,0,0],d=["a","b","c"],p=new Array(3),m={},v=[];for(let y=0;y<u;y+=3){a?(h[0]=a.getX(y),h[1]=a.getX(y+1),h[2]=a.getX(y+2)):(h[0]=y,h[1]=y+1,h[2]=y+2);const{a:x,b:_,c:S}=fc;if(x.fromBufferAttribute(c,h[0]),_.fromBufferAttribute(c,h[1]),S.fromBufferAttribute(c,h[2]),fc.getNormal(Oh),p[0]=`${Math.round(x.x*i)},${Math.round(x.y*i)},${Math.round(x.z*i)}`,p[1]=`${Math.round(_.x*i)},${Math.round(_.y*i)},${Math.round(_.z*i)}`,p[2]=`${Math.round(S.x*i)},${Math.round(S.y*i)},${Math.round(S.z*i)}`,!(p[0]===p[1]||p[1]===p[2]||p[2]===p[0]))for(let w=0;w<3;w++){const T=(w+1)%3,E=p[w],C=p[T],P=fc[d[w]],N=fc[d[T]],A=`${E}_${C}`,L=`${C}_${E}`;L in m&&m[L]?(Oh.dot(m[L].normal)<=r&&(v.push(P.x,P.y,P.z),v.push(N.x,N.y,N.z)),m[L]=null):A in m||(m[A]={index0:h[w],index1:h[T],normal:Oh.clone()})}}for(const y in m)if(m[y]){const{index0:x,index1:_}=m[y];uc.fromBufferAttribute(c,x),hc.fromBufferAttribute(c,_),v.push(uc.x,uc.y,uc.z),v.push(hc.x,hc.y,hc.z)}this.setAttribute("position",new Fe(v,3))}}}class cs extends ha{constructor(e){super(e),this.uuid=kn(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new ha().fromJSON(i))}return this}}const ib={triangulate:function(l,e,t=2){const n=e&&e.length,i=n?e[0]*t:l.length;let r=fv(l,0,i,t,!0);const a=[];if(!r||r.next===r.prev)return a;let c,u,h,d,p,m,v;if(n&&(r=lb(l,e,r,t)),l.length>80*t){c=h=l[0],u=d=l[1];for(let y=t;y<i;y+=t)p=l[y],m=l[y+1],p<c&&(c=p),m<u&&(u=m),p>h&&(h=p),m>d&&(d=m);v=Math.max(h-c,d-u),v=v!==0?1/v:0}return fa(r,a,t,c,u,v),a}};function fv(l,e,t,n,i){let r,a;if(i===yb(l,e,t,n)>0)for(r=e;r<t;r+=n)a=rg(r,l[r],l[r+1],a);else for(r=t-n;r>=e;r-=n)a=rg(r,l[r],l[r+1],a);return a&&Kc(a,a.next)&&(pa(a),a=a.next),a}function Tr(l,e){if(!l)return l;e||(e=l);let t=l,n;do if(n=!1,!t.steiner&&(Kc(t,t.next)||kt(t.prev,t,t.next)===0)){if(pa(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function fa(l,e,t,n,i,r,a){if(!l)return;!a&&r&&db(l,n,i,r);let c=l,u,h;for(;l.prev!==l.next;){if(u=l.prev,h=l.next,r?sb(l,n,i,r):rb(l)){e.push(u.i/t),e.push(l.i/t),e.push(h.i/t),pa(l),l=h.next,c=h.next;continue}if(l=h,l===c){a?a===1?(l=ob(Tr(l),e,t),fa(l,e,t,n,i,r,2)):a===2&&ab(l,e,t,n,i,r):fa(Tr(l),e,t,n,i,r,1);break}}}function rb(l){const e=l.prev,t=l,n=l.next;if(kt(e,t,n)>=0)return!1;let i=l.next.next;for(;i!==l.prev;){if(so(e.x,e.y,t.x,t.y,n.x,n.y,i.x,i.y)&&kt(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function sb(l,e,t,n){const i=l.prev,r=l,a=l.next;if(kt(i,r,a)>=0)return!1;const c=i.x<r.x?i.x<a.x?i.x:a.x:r.x<a.x?r.x:a.x,u=i.y<r.y?i.y<a.y?i.y:a.y:r.y<a.y?r.y:a.y,h=i.x>r.x?i.x>a.x?i.x:a.x:r.x>a.x?r.x:a.x,d=i.y>r.y?i.y>a.y?i.y:a.y:r.y>a.y?r.y:a.y,p=Cf(c,u,e,t,n),m=Cf(h,d,e,t,n);let v=l.prevZ,y=l.nextZ;for(;v&&v.z>=p&&y&&y.z<=m;){if(v!==l.prev&&v!==l.next&&so(i.x,i.y,r.x,r.y,a.x,a.y,v.x,v.y)&&kt(v.prev,v,v.next)>=0||(v=v.prevZ,y!==l.prev&&y!==l.next&&so(i.x,i.y,r.x,r.y,a.x,a.y,y.x,y.y)&&kt(y.prev,y,y.next)>=0))return!1;y=y.nextZ}for(;v&&v.z>=p;){if(v!==l.prev&&v!==l.next&&so(i.x,i.y,r.x,r.y,a.x,a.y,v.x,v.y)&&kt(v.prev,v,v.next)>=0)return!1;v=v.prevZ}for(;y&&y.z<=m;){if(y!==l.prev&&y!==l.next&&so(i.x,i.y,r.x,r.y,a.x,a.y,y.x,y.y)&&kt(y.prev,y,y.next)>=0)return!1;y=y.nextZ}return!0}function ob(l,e,t){let n=l;do{const i=n.prev,r=n.next.next;!Kc(i,r)&&dv(i,n,n.next,r)&&da(i,r)&&da(r,i)&&(e.push(i.i/t),e.push(n.i/t),e.push(r.i/t),pa(n),pa(n.next),n=l=r),n=n.next}while(n!==l);return Tr(n)}function ab(l,e,t,n,i,r){let a=l;do{let c=a.next.next;for(;c!==a.prev;){if(a.i!==c.i&&gb(a,c)){let u=pv(a,c);a=Tr(a,a.next),u=Tr(u,u.next),fa(a,e,t,n,i,r),fa(u,e,t,n,i,r);return}c=c.next}a=a.next}while(a!==l)}function lb(l,e,t,n){const i=[];let r,a,c,u,h;for(r=0,a=e.length;r<a;r++)c=e[r]*n,u=r<a-1?e[r+1]*n:l.length,h=fv(l,c,u,n,!1),h===h.next&&(h.steiner=!0),i.push(mb(h));for(i.sort(cb),r=0;r<i.length;r++)ub(i[r],t),t=Tr(t,t.next);return t}function cb(l,e){return l.x-e.x}function ub(l,e){if(e=hb(l,e),e){const t=pv(e,l);Tr(e,e.next),Tr(t,t.next)}}function hb(l,e){let t=e;const n=l.x,i=l.y;let r=-1/0,a;do{if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const m=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(m<=n&&m>r){if(r=m,m===n){if(i===t.y)return t;if(i===t.next.y)return t.next}a=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!a)return null;if(n===r)return a;const c=a,u=a.x,h=a.y;let d=1/0,p;t=a;do n>=t.x&&t.x>=u&&n!==t.x&&so(i<h?n:r,i,u,h,i<h?r:n,i,t.x,t.y)&&(p=Math.abs(i-t.y)/(n-t.x),da(t,l)&&(p<d||p===d&&(t.x>a.x||t.x===a.x&&fb(a,t)))&&(a=t,d=p)),t=t.next;while(t!==c);return a}function fb(l,e){return kt(l.prev,l,e.prev)<0&&kt(e.next,l,l.next)<0}function db(l,e,t,n){let i=l;do i.z===null&&(i.z=Cf(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==l);i.prevZ.nextZ=null,i.prevZ=null,pb(i)}function pb(l){let e,t,n,i,r,a,c,u,h=1;do{for(t=l,l=null,r=null,a=0;t;){for(a++,n=t,c=0,e=0;e<h&&(c++,n=n.nextZ,!!n);e++);for(u=h;c>0||u>0&&n;)c!==0&&(u===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,c--):(i=n,n=n.nextZ,u--),r?r.nextZ=i:l=i,i.prevZ=r,r=i;t=n}r.nextZ=null,h*=2}while(a>1);return l}function Cf(l,e,t,n,i){return l=32767*(l-t)*i,e=32767*(e-n)*i,l=(l|l<<8)&16711935,l=(l|l<<4)&252645135,l=(l|l<<2)&858993459,l=(l|l<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,l|e<<1}function mb(l){let e=l,t=l;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==l);return t}function so(l,e,t,n,i,r,a,c){return(i-a)*(e-c)-(l-a)*(r-c)>=0&&(l-a)*(n-c)-(t-a)*(e-c)>=0&&(t-a)*(r-c)-(i-a)*(n-c)>=0}function gb(l,e){return l.next.i!==e.i&&l.prev.i!==e.i&&!vb(l,e)&&(da(l,e)&&da(e,l)&&xb(l,e)&&(kt(l.prev,l,e.prev)||kt(l,e.prev,e))||Kc(l,e)&&kt(l.prev,l,l.next)>0&&kt(e.prev,e,e.next)>0)}function kt(l,e,t){return(e.y-l.y)*(t.x-e.x)-(e.x-l.x)*(t.y-e.y)}function Kc(l,e){return l.x===e.x&&l.y===e.y}function dv(l,e,t,n){const i=pc(kt(l,e,t)),r=pc(kt(l,e,n)),a=pc(kt(t,n,l)),c=pc(kt(t,n,e));return!!(i!==r&&a!==c||i===0&&dc(l,t,e)||r===0&&dc(l,n,e)||a===0&&dc(t,l,n)||c===0&&dc(t,e,n))}function dc(l,e,t){return e.x<=Math.max(l.x,t.x)&&e.x>=Math.min(l.x,t.x)&&e.y<=Math.max(l.y,t.y)&&e.y>=Math.min(l.y,t.y)}function pc(l){return l>0?1:l<0?-1:0}function vb(l,e){let t=l;do{if(t.i!==l.i&&t.next.i!==l.i&&t.i!==e.i&&t.next.i!==e.i&&dv(t,t.next,l,e))return!0;t=t.next}while(t!==l);return!1}function da(l,e){return kt(l.prev,l,l.next)<0?kt(l,e,l.next)>=0&&kt(l,l.prev,e)>=0:kt(l,e,l.prev)<0||kt(l,l.next,e)<0}function xb(l,e){let t=l,n=!1;const i=(l.x+e.x)/2,r=(l.y+e.y)/2;do t.y>r!=t.next.y>r&&t.next.y!==t.y&&i<(t.next.x-t.x)*(r-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==l);return n}function pv(l,e){const t=new Pf(l.i,l.x,l.y),n=new Pf(e.i,e.x,e.y),i=l.next,r=e.prev;return l.next=e,e.prev=l,t.next=i,i.prev=t,n.next=t,t.prev=n,r.next=n,n.prev=r,n}function rg(l,e,t,n){const i=new Pf(l,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function pa(l){l.next.prev=l.prev,l.prev.next=l.next,l.prevZ&&(l.prevZ.nextZ=l.nextZ),l.nextZ&&(l.nextZ.prevZ=l.prevZ)}function Pf(l,e,t){this.i=l,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function yb(l,e,t,n){let i=0;for(let r=e,a=t-n;r<t;r+=n)i+=(l[a]-l[r])*(l[r+1]+l[a+1]),a=r;return i}class Ti{static area(e){const t=e.length;let n=0;for(let i=t-1,r=0;r<t;i=r++)n+=e[i].x*e[r].y-e[r].x*e[i].y;return n*.5}static isClockWise(e){return Ti.area(e)<0}static triangulateShape(e,t){const n=[],i=[],r=[];sg(e),og(n,e);let a=e.length;t.forEach(sg);for(let u=0;u<t.length;u++)i.push(a),a+=t[u].length,og(n,t[u]);const c=ib.triangulate(n,i);for(let u=0;u<c.length;u+=3)r.push(c.slice(u,u+3));return r}}function sg(l){const e=l.length;e>2&&l[e-1].equals(l[0])&&l.pop()}function og(l,e){for(let t=0;t<e.length;t++)l.push(e[t].x),l.push(e[t].y)}class Ca extends ct{constructor(e=new cs([new fe(.5,.5),new fe(-.5,.5),new fe(-.5,-.5),new fe(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],r=[];for(let c=0,u=e.length;c<u;c++){const h=e[c];a(h)}this.setAttribute("position",new Fe(i,3)),this.setAttribute("uv",new Fe(r,2)),this.computeVertexNormals();function a(c){const u=[],h=t.curveSegments!==void 0?t.curveSegments:12,d=t.steps!==void 0?t.steps:1,p=t.depth!==void 0?t.depth:1;let m=t.bevelEnabled!==void 0?t.bevelEnabled:!0,v=t.bevelThickness!==void 0?t.bevelThickness:.2,y=t.bevelSize!==void 0?t.bevelSize:v-.1,x=t.bevelOffset!==void 0?t.bevelOffset:0,_=t.bevelSegments!==void 0?t.bevelSegments:3;const S=t.extrudePath,w=t.UVGenerator!==void 0?t.UVGenerator:_b;let T,E=!1,C,P,N,A;S&&(T=S.getSpacedPoints(d),E=!0,m=!1,C=S.computeFrenetFrames(d,!1),P=new I,N=new I,A=new I),m||(_=0,v=0,y=0,x=0);const L=c.extractPoints(h);let F=L.shape;const q=L.holes;if(!Ti.isClockWise(F)){F=F.reverse();for(let he=0,ne=q.length;he<ne;he++){const _e=q[he];Ti.isClockWise(_e)&&(q[he]=_e.reverse())}}const J=Ti.triangulateShape(F,q),W=F;for(let he=0,ne=q.length;he<ne;he++){const _e=q[he];F=F.concat(_e)}function $(he,ne,_e){return ne||console.error("THREE.ExtrudeGeometry: vec does not exist"),ne.clone().multiplyScalar(_e).add(he)}const te=F.length,pe=J.length;function V(he,ne,_e){let Oe,Te,$e;const We=he.x-ne.x,He=he.y-ne.y,mt=_e.x-he.x,wt=_e.y-he.y,O=We*We+He*He,R=We*wt-He*mt;if(Math.abs(R)>Number.EPSILON){const Q=Math.sqrt(O),ge=Math.sqrt(mt*mt+wt*wt),Se=ne.x-He/Q,Ae=ne.y+We/Q,Je=_e.x-wt/ge,Ce=_e.y+mt/ge,de=((Je-Se)*wt-(Ce-Ae)*mt)/(We*wt-He*mt);Oe=Se+We*de-he.x,Te=Ae+He*de-he.y;const ke=Oe*Oe+Te*Te;if(ke<=2)return new fe(Oe,Te);$e=Math.sqrt(ke/2)}else{let Q=!1;We>Number.EPSILON?mt>Number.EPSILON&&(Q=!0):We<-Number.EPSILON?mt<-Number.EPSILON&&(Q=!0):Math.sign(He)===Math.sign(wt)&&(Q=!0),Q?(Oe=-He,Te=We,$e=Math.sqrt(O)):(Oe=We,Te=He,$e=Math.sqrt(O/2))}return new fe(Oe/$e,Te/$e)}const k=[];for(let he=0,ne=W.length,_e=ne-1,Oe=he+1;he<ne;he++,_e++,Oe++)_e===ne&&(_e=0),Oe===ne&&(Oe=0),k[he]=V(W[he],W[_e],W[Oe]);const U=[];let le,re=k.concat();for(let he=0,ne=q.length;he<ne;he++){const _e=q[he];le=[];for(let Oe=0,Te=_e.length,$e=Te-1,We=Oe+1;Oe<Te;Oe++,$e++,We++)$e===Te&&($e=0),We===Te&&(We=0),le[Oe]=V(_e[Oe],_e[$e],_e[We]);U.push(le),re=re.concat(le)}for(let he=0;he<_;he++){const ne=he/_,_e=v*Math.cos(ne*Math.PI/2),Oe=y*Math.sin(ne*Math.PI/2)+x;for(let Te=0,$e=W.length;Te<$e;Te++){const We=$(W[Te],k[Te],Oe);je(We.x,We.y,-_e)}for(let Te=0,$e=q.length;Te<$e;Te++){const We=q[Te];le=U[Te];for(let He=0,mt=We.length;He<mt;He++){const wt=$(We[He],le[He],Oe);je(wt.x,wt.y,-_e)}}}const me=y+x;for(let he=0;he<te;he++){const ne=m?$(F[he],re[he],me):F[he];E?(N.copy(C.normals[0]).multiplyScalar(ne.x),P.copy(C.binormals[0]).multiplyScalar(ne.y),A.copy(T[0]).add(N).add(P),je(A.x,A.y,A.z)):je(ne.x,ne.y,0)}for(let he=1;he<=d;he++)for(let ne=0;ne<te;ne++){const _e=m?$(F[ne],re[ne],me):F[ne];E?(N.copy(C.normals[he]).multiplyScalar(_e.x),P.copy(C.binormals[he]).multiplyScalar(_e.y),A.copy(T[he]).add(N).add(P),je(A.x,A.y,A.z)):je(_e.x,_e.y,p/d*he)}for(let he=_-1;he>=0;he--){const ne=he/_,_e=v*Math.cos(ne*Math.PI/2),Oe=y*Math.sin(ne*Math.PI/2)+x;for(let Te=0,$e=W.length;Te<$e;Te++){const We=$(W[Te],k[Te],Oe);je(We.x,We.y,p+_e)}for(let Te=0,$e=q.length;Te<$e;Te++){const We=q[Te];le=U[Te];for(let He=0,mt=We.length;He<mt;He++){const wt=$(We[He],le[He],Oe);E?je(wt.x,wt.y+T[d-1].y,T[d-1].x+_e):je(wt.x,wt.y,p+_e)}}}Ee(),Ve();function Ee(){const he=i.length/3;if(m){let ne=0,_e=te*ne;for(let Oe=0;Oe<pe;Oe++){const Te=J[Oe];Ge(Te[2]+_e,Te[1]+_e,Te[0]+_e)}ne=d+_*2,_e=te*ne;for(let Oe=0;Oe<pe;Oe++){const Te=J[Oe];Ge(Te[0]+_e,Te[1]+_e,Te[2]+_e)}}else{for(let ne=0;ne<pe;ne++){const _e=J[ne];Ge(_e[2],_e[1],_e[0])}for(let ne=0;ne<pe;ne++){const _e=J[ne];Ge(_e[0]+te*d,_e[1]+te*d,_e[2]+te*d)}}n.addGroup(he,i.length/3-he,0)}function Ve(){const he=i.length/3;let ne=0;oe(W,ne),ne+=W.length;for(let _e=0,Oe=q.length;_e<Oe;_e++){const Te=q[_e];oe(Te,ne),ne+=Te.length}n.addGroup(he,i.length/3-he,1)}function oe(he,ne){let _e=he.length;for(;--_e>=0;){const Oe=_e;let Te=_e-1;Te<0&&(Te=he.length-1);for(let $e=0,We=d+_*2;$e<We;$e++){const He=te*$e,mt=te*($e+1),wt=ne+Oe+He,O=ne+Te+He,R=ne+Te+mt,Q=ne+Oe+mt;Ye(wt,O,R,Q)}}}function je(he,ne,_e){u.push(he),u.push(ne),u.push(_e)}function Ge(he,ne,_e){be(he),be(ne),be(_e);const Oe=i.length/3,Te=w.generateTopUV(n,i,Oe-3,Oe-2,Oe-1);Ze(Te[0]),Ze(Te[1]),Ze(Te[2])}function Ye(he,ne,_e,Oe){be(he),be(ne),be(Oe),be(ne),be(_e),be(Oe);const Te=i.length/3,$e=w.generateSideWallUV(n,i,Te-6,Te-3,Te-2,Te-1);Ze($e[0]),Ze($e[1]),Ze($e[3]),Ze($e[1]),Ze($e[2]),Ze($e[3])}function be(he){i.push(u[he*3+0]),i.push(u[he*3+1]),i.push(u[he*3+2])}function Ze(he){r.push(he.x),r.push(he.y)}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return Mb(t,n,e)}static fromJSON(e,t){const n=[];for(let r=0,a=e.shapes.length;r<a;r++){const c=t[e.shapes[r]];n.push(c)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new cd[i.type]().fromJSON(i)),new Ca(n,e.options)}}const _b={generateTopUV:function(l,e,t,n,i){const r=e[t*3],a=e[t*3+1],c=e[n*3],u=e[n*3+1],h=e[i*3],d=e[i*3+1];return[new fe(r,a),new fe(c,u),new fe(h,d)]},generateSideWallUV:function(l,e,t,n,i,r){const a=e[t*3],c=e[t*3+1],u=e[t*3+2],h=e[n*3],d=e[n*3+1],p=e[n*3+2],m=e[i*3],v=e[i*3+1],y=e[i*3+2],x=e[r*3],_=e[r*3+1],S=e[r*3+2];return Math.abs(c-d)<Math.abs(a-h)?[new fe(a,1-u),new fe(h,1-p),new fe(m,1-y),new fe(x,1-S)]:[new fe(c,1-u),new fe(d,1-p),new fe(v,1-y),new fe(_,1-S)]}};function Mb(l,e,t){if(t.shapes=[],Array.isArray(l))for(let n=0,i=l.length;n<i;n++){const r=l[n];t.shapes.push(r.uuid)}else t.shapes.push(l.uuid);return t.options=Object.assign({},e),e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class Pa extends Qi{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],r=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,r,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Pa(e.radius,e.detail)}}class vo extends Qi{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new vo(e.radius,e.detail)}}class La extends ct{constructor(e=.5,t=1,n=8,i=1,r=0,a=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:r,thetaLength:a},n=Math.max(3,n),i=Math.max(1,i);const c=[],u=[],h=[],d=[];let p=e;const m=(t-e)/i,v=new I,y=new fe;for(let x=0;x<=i;x++){for(let _=0;_<=n;_++){const S=r+_/n*a;v.x=p*Math.cos(S),v.y=p*Math.sin(S),u.push(v.x,v.y,v.z),h.push(0,0,1),y.x=(v.x/t+1)/2,y.y=(v.y/t+1)/2,d.push(y.x,y.y)}p+=m}for(let x=0;x<i;x++){const _=x*(n+1);for(let S=0;S<n;S++){const w=S+_,T=w,E=w+n+1,C=w+n+2,P=w+1;c.push(T,E,P),c.push(E,C,P)}}this.setIndex(c),this.setAttribute("position",new Fe(u,3)),this.setAttribute("normal",new Fe(h,3)),this.setAttribute("uv",new Fe(d,2))}static fromJSON(e){return new La(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class Ra extends ct{constructor(e=new cs([new fe(0,.5),new fe(-.5,-.5),new fe(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],r=[],a=[];let c=0,u=0;if(Array.isArray(e)===!1)h(e);else for(let d=0;d<e.length;d++)h(e[d]),this.addGroup(c,u,d),c+=u,u=0;this.setIndex(n),this.setAttribute("position",new Fe(i,3)),this.setAttribute("normal",new Fe(r,3)),this.setAttribute("uv",new Fe(a,2));function h(d){const p=i.length/3,m=d.extractPoints(t);let v=m.shape;const y=m.holes;Ti.isClockWise(v)===!1&&(v=v.reverse());for(let _=0,S=y.length;_<S;_++){const w=y[_];Ti.isClockWise(w)===!0&&(y[_]=w.reverse())}const x=Ti.triangulateShape(v,y);for(let _=0,S=y.length;_<S;_++){const w=y[_];v=v.concat(w)}for(let _=0,S=v.length;_<S;_++){const w=v[_];i.push(w.x,w.y,0),r.push(0,0,1),a.push(w.x,w.y)}for(let _=0,S=x.length;_<S;_++){const w=x[_],T=w[0]+p,E=w[1]+p,C=w[2]+p;n.push(T,E,C),u+=3}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return Sb(t,e)}static fromJSON(e,t){const n=[];for(let i=0,r=e.shapes.length;i<r;i++){const a=t[e.shapes[i]];n.push(a)}return new Ra(n,e.curveSegments)}}function Sb(l,e){if(e.shapes=[],Array.isArray(l))for(let t=0,n=l.length;t<n;t++){const i=l[t];e.shapes.push(i.uuid)}else e.shapes.push(l.uuid);return e}class xo extends ct{constructor(e=1,t=32,n=16,i=0,r=Math.PI*2,a=0,c=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:r,thetaStart:a,thetaLength:c},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const u=Math.min(a+c,Math.PI);let h=0;const d=[],p=new I,m=new I,v=[],y=[],x=[],_=[];for(let S=0;S<=n;S++){const w=[],T=S/n;let E=0;S==0&&a==0?E=.5/t:S==n&&u==Math.PI&&(E=-.5/t);for(let C=0;C<=t;C++){const P=C/t;p.x=-e*Math.cos(i+P*r)*Math.sin(a+T*c),p.y=e*Math.cos(a+T*c),p.z=e*Math.sin(i+P*r)*Math.sin(a+T*c),y.push(p.x,p.y,p.z),m.copy(p).normalize(),x.push(m.x,m.y,m.z),_.push(P+E,1-T),w.push(h++)}d.push(w)}for(let S=0;S<n;S++)for(let w=0;w<t;w++){const T=d[S][w+1],E=d[S][w],C=d[S+1][w],P=d[S+1][w+1];(S!==0||a>0)&&v.push(T,E,P),(S!==n-1||u<Math.PI)&&v.push(E,C,P)}this.setIndex(v),this.setAttribute("position",new Fe(y,3)),this.setAttribute("normal",new Fe(x,3)),this.setAttribute("uv",new Fe(_,2))}static fromJSON(e){return new xo(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Ia extends Qi{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Ia(e.radius,e.detail)}}class Da extends ct{constructor(e=1,t=.4,n=8,i=6,r=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:r},n=Math.floor(n),i=Math.floor(i);const a=[],c=[],u=[],h=[],d=new I,p=new I,m=new I;for(let v=0;v<=n;v++)for(let y=0;y<=i;y++){const x=y/i*r,_=v/n*Math.PI*2;p.x=(e+t*Math.cos(_))*Math.cos(x),p.y=(e+t*Math.cos(_))*Math.sin(x),p.z=t*Math.sin(_),c.push(p.x,p.y,p.z),d.x=e*Math.cos(x),d.y=e*Math.sin(x),m.subVectors(p,d).normalize(),u.push(m.x,m.y,m.z),h.push(y/i),h.push(v/n)}for(let v=1;v<=n;v++)for(let y=1;y<=i;y++){const x=(i+1)*v+y-1,_=(i+1)*(v-1)+y-1,S=(i+1)*(v-1)+y,w=(i+1)*v+y;a.push(x,_,w),a.push(_,S,w)}this.setIndex(a),this.setAttribute("position",new Fe(c,3)),this.setAttribute("normal",new Fe(u,3)),this.setAttribute("uv",new Fe(h,2))}static fromJSON(e){return new Da(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class za extends ct{constructor(e=1,t=.4,n=64,i=8,r=2,a=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:r,q:a},n=Math.floor(n),i=Math.floor(i);const c=[],u=[],h=[],d=[],p=new I,m=new I,v=new I,y=new I,x=new I,_=new I,S=new I;for(let T=0;T<=n;++T){const E=T/n*r*Math.PI*2;w(E,r,a,e,v),w(E+.01,r,a,e,y),_.subVectors(y,v),S.addVectors(y,v),x.crossVectors(_,S),S.crossVectors(x,_),x.normalize(),S.normalize();for(let C=0;C<=i;++C){const P=C/i*Math.PI*2,N=-t*Math.cos(P),A=t*Math.sin(P);p.x=v.x+(N*S.x+A*x.x),p.y=v.y+(N*S.y+A*x.y),p.z=v.z+(N*S.z+A*x.z),u.push(p.x,p.y,p.z),m.subVectors(p,v).normalize(),h.push(m.x,m.y,m.z),d.push(T/n),d.push(C/i)}}for(let T=1;T<=n;T++)for(let E=1;E<=i;E++){const C=(i+1)*(T-1)+(E-1),P=(i+1)*T+(E-1),N=(i+1)*T+E,A=(i+1)*(T-1)+E;c.push(C,P,A),c.push(P,N,A)}this.setIndex(c),this.setAttribute("position",new Fe(u,3)),this.setAttribute("normal",new Fe(h,3)),this.setAttribute("uv",new Fe(d,2));function w(T,E,C,P,N){const A=Math.cos(T),L=Math.sin(T),F=C/E*T,q=Math.cos(F);N.x=P*(2+q)*.5*A,N.y=P*(2+q)*L*.5,N.z=P*Math.sin(F)*.5}}static fromJSON(e){return new za(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Na extends ct{constructor(e=new ad(new I(-1,-1,0),new I(-1,1,0),new I(1,1,0)),t=64,n=1,i=8,r=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:r};const a=e.computeFrenetFrames(t,r);this.tangents=a.tangents,this.normals=a.normals,this.binormals=a.binormals;const c=new I,u=new I,h=new fe;let d=new I;const p=[],m=[],v=[],y=[];x(),this.setIndex(y),this.setAttribute("position",new Fe(p,3)),this.setAttribute("normal",new Fe(m,3)),this.setAttribute("uv",new Fe(v,2));function x(){for(let T=0;T<t;T++)_(T);_(r===!1?t:0),w(),S()}function _(T){d=e.getPointAt(T/t,d);const E=a.normals[T],C=a.binormals[T];for(let P=0;P<=i;P++){const N=P/i*Math.PI*2,A=Math.sin(N),L=-Math.cos(N);u.x=L*E.x+A*C.x,u.y=L*E.y+A*C.y,u.z=L*E.z+A*C.z,u.normalize(),m.push(u.x,u.y,u.z),c.x=d.x+n*u.x,c.y=d.y+n*u.y,c.z=d.z+n*u.z,p.push(c.x,c.y,c.z)}}function S(){for(let T=1;T<=t;T++)for(let E=1;E<=i;E++){const C=(i+1)*(T-1)+(E-1),P=(i+1)*T+(E-1),N=(i+1)*T+E,A=(i+1)*(T-1)+E;y.push(C,P,A),y.push(P,N,A)}}function w(){for(let T=0;T<=t;T++)for(let E=0;E<=i;E++)h.x=T/t,h.y=E/i,v.push(h.x,h.y)}}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Na(new cd[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class mv extends ct{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new I,r=new I;if(e.index!==null){const a=e.attributes.position,c=e.index;let u=e.groups;u.length===0&&(u=[{start:0,count:c.count,materialIndex:0}]);for(let h=0,d=u.length;h<d;++h){const p=u[h],m=p.start,v=p.count;for(let y=m,x=m+v;y<x;y+=3)for(let _=0;_<3;_++){const S=c.getX(y+_),w=c.getX(y+(_+1)%3);i.fromBufferAttribute(a,S),r.fromBufferAttribute(a,w),ag(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}}else{const a=e.attributes.position;for(let c=0,u=a.count/3;c<u;c++)for(let h=0;h<3;h++){const d=3*c+h,p=3*c+(h+1)%3;i.fromBufferAttribute(a,d),r.fromBufferAttribute(a,p),ag(i,r,n)===!0&&(t.push(i.x,i.y,i.z),t.push(r.x,r.y,r.z))}}this.setAttribute("position",new Fe(t,3))}}}function ag(l,e,t){const n=`${l.x},${l.y},${l.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${l.x},${l.y},${l.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var lg=Object.freeze({__proto__:null,BoxGeometry:Cr,CapsuleGeometry:ba,CircleGeometry:Ta,ConeGeometry:Ea,CylinderGeometry:vs,DodecahedronGeometry:Aa,EdgesGeometry:hv,ExtrudeGeometry:Ca,IcosahedronGeometry:Pa,LatheGeometry:go,OctahedronGeometry:vo,PlaneGeometry:po,PolyhedronGeometry:Qi,RingGeometry:La,ShapeGeometry:Ra,SphereGeometry:xo,TetrahedronGeometry:Ia,TorusGeometry:Da,TorusKnotGeometry:za,TubeGeometry:Na,WireframeGeometry:mv});class gv extends un{constructor(e){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new De(0),this.transparent=!0,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.fog=e.fog,this}}class vv extends Ei{constructor(e){super(e),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class ud extends un{constructor(e){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new De(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new De(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Er,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class hd extends ud{constructor(e){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new fe(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return qt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new De(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new De(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new De(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._iridescence=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get iridescence(){return this._iridescence}set iridescence(e){this._iridescence>0!=e>0&&this.version++,this._iridescence=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.iridescence=e.iridescence,this.iridescenceMap=e.iridescenceMap,this.iridescenceIOR=e.iridescenceIOR,this.iridescenceThicknessRange=[...e.iridescenceThicknessRange],this.iridescenceThicknessMap=e.iridescenceThicknessMap,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}class xv extends un{constructor(e){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new De(16777215),this.specular=new De(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new De(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Er,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ya,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class yv extends un{constructor(e){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new De(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new De(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Er,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.fog=e.fog,this}}class _v extends un{constructor(e){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Er,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}class Mv extends un{constructor(e){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new De(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new De(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Er,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=ya,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this.fog=e.fog,this}}class Sv extends un{constructor(e){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new De(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Er,this.normalScale=new fe(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this.fog=e.fog,this}}class wv extends wn{constructor(e){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}function ti(l,e,t){return fd(l)?new l.constructor(l.subarray(e,t!==void 0?t:l.length)):l.slice(e,t)}function ns(l,e,t){return!l||!t&&l.constructor===e?l:typeof e.BYTES_PER_ELEMENT=="number"?new e(l):Array.prototype.slice.call(l)}function fd(l){return ArrayBuffer.isView(l)&&!(l instanceof DataView)}function bv(l){function e(i,r){return l[i]-l[r]}const t=l.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n}function Lf(l,e,t){const n=l.length,i=new l.constructor(n);for(let r=0,a=0;a!==n;++r){const c=t[r]*e;for(let u=0;u!==e;++u)i[a++]=l[c+u]}return i}function dd(l,e,t,n){let i=1,r=l[0];for(;r!==void 0&&r[n]===void 0;)r=l[i++];if(r===void 0)return;let a=r[n];if(a!==void 0)if(Array.isArray(a))do a=r[n],a!==void 0&&(e.push(r.time),t.push.apply(t,a)),r=l[i++];while(r!==void 0);else if(a.toArray!==void 0)do a=r[n],a!==void 0&&(e.push(r.time),a.toArray(t,t.length)),r=l[i++];while(r!==void 0);else do a=r[n],a!==void 0&&(e.push(r.time),t.push(a)),r=l[i++];while(r!==void 0)}function wb(l,e,t,n,i=30){const r=l.clone();r.name=e;const a=[];for(let u=0;u<r.tracks.length;++u){const h=r.tracks[u],d=h.getValueSize(),p=[],m=[];for(let v=0;v<h.times.length;++v){const y=h.times[v]*i;if(!(y<t||y>=n)){p.push(h.times[v]);for(let x=0;x<d;++x)m.push(h.values[v*d+x])}}p.length!==0&&(h.times=ns(p,h.times.constructor),h.values=ns(m,h.values.constructor),a.push(h))}r.tracks=a;let c=1/0;for(let u=0;u<r.tracks.length;++u)c>r.tracks[u].times[0]&&(c=r.tracks[u].times[0]);for(let u=0;u<r.tracks.length;++u)r.tracks[u].shift(-1*c);return r.resetDuration(),r}function bb(l,e=0,t=l,n=30){n<=0&&(n=30);const i=t.tracks.length,r=e/n;for(let a=0;a<i;++a){const c=t.tracks[a],u=c.ValueTypeName;if(u==="bool"||u==="string")continue;const h=l.tracks.find(function(S){return S.name===c.name&&S.ValueTypeName===u});if(h===void 0)continue;let d=0;const p=c.getValueSize();c.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=p/3);let m=0;const v=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(m=v/3);const y=c.times.length-1;let x;if(r<=c.times[0]){const S=d,w=p-d;x=ti(c.values,S,w)}else if(r>=c.times[y]){const S=y*p+d,w=S+p-d;x=ti(c.values,S,w)}else{const S=c.createInterpolant(),w=d,T=p-d;S.evaluate(r),x=ti(S.resultBuffer,w,T)}u==="quaternion"&&new vn().fromArray(x).normalize().conjugate().toArray(x);const _=h.times.length;for(let S=0;S<_;++S){const w=S*v+m;if(u==="quaternion")vn.multiplyQuaternionsFlat(h.values,w,x,0,h.values,w);else{const T=v-m*2;for(let E=0;E<T;++E)h.values[w+E]-=x[E]}}}return l.blendMode=Xf,l}var Tb=Object.freeze({__proto__:null,arraySlice:ti,convertArray:ns,isTypedArray:fd,getKeyframeOrder:bv,sortedArray:Lf,flattenJSON:dd,subclip:wb,makeClipAdditive:bb});class Oa{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],r=t[n-1];e:{t:{let a;n:{i:if(!(e<i)){for(let c=n+2;;){if(i===void 0){if(e<r)break i;return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}if(n===c)break;if(r=i,i=t[++n],e<i)break t}a=t.length;break n}if(!(e>=r)){const c=t[1];e<c&&(n=2,r=c);for(let u=n-2;;){if(r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===u)break;if(i=r,r=t[--n-1],e>=r)break t}a=n,n=0;break n}break e}for(;n<a;){const c=n+a>>>1;e<t[c]?a=c:n=c+1}if(i=t[n],r=t[n-1],r===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===void 0)return n=t.length,this._cachedIndex=n,this.copySampleValue_(n-1)}this._cachedIndex=n,this.intervalChanged_(n,r,i)}return this.interpolate_(n,r,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,r=e*i;for(let a=0;a!==i;++a)t[a]=n[r+a];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Tv extends Oa{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:$r,endingEnd:$r}}intervalChanged_(e,t,n){const i=this.parameterPositions;let r=e-2,a=e+1,c=i[r],u=i[a];if(c===void 0)switch(this.getSettings_().endingStart){case es:r=e,c=2*t-n;break;case aa:r=i.length-2,c=t+i[r]-i[r+1];break;default:r=e,c=n}if(u===void 0)switch(this.getSettings_().endingEnd){case es:a=e,u=2*n-t;break;case aa:a=1,u=n+i[1]-i[0];break;default:a=e-1,u=t}const h=(n-t)*.5,d=this.valueSize;this._weightPrev=h/(t-c),this._weightNext=h/(u-n),this._offsetPrev=r*d,this._offsetNext=a*d}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=this._offsetPrev,p=this._offsetNext,m=this._weightPrev,v=this._weightNext,y=(n-t)/(i-t),x=y*y,_=x*y,S=-m*_+2*m*x-m*y,w=(1+m)*_+(-1.5-2*m)*x+(-.5+m)*y+1,T=(-1-v)*_+(1.5+v)*x+.5*y,E=v*_-v*x;for(let C=0;C!==c;++C)r[C]=S*a[d+C]+w*a[h+C]+T*a[u+C]+E*a[p+C];return r}}class pd extends Oa{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=e*c,h=u-c,d=(n-t)/(i-t),p=1-d;for(let m=0;m!==c;++m)r[m]=a[h+m]*p+a[u+m]*d;return r}}class Ev extends Oa{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class mi{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=ns(t,this.TimeBufferType),this.values=ns(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:ns(e.times,Array),values:ns(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Ev(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new pd(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new Tv(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case sa:t=this.InterpolantFactoryMethodDiscrete;break;case oa:t=this.InterpolantFactoryMethodLinear;break;case Cc:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return sa;case this.InterpolantFactoryMethodLinear:return oa;case this.InterpolantFactoryMethodSmooth:return Cc}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let r=0,a=i-1;for(;r!==i&&n[r]<e;)++r;for(;a!==-1&&n[a]>t;)--a;if(++a,r!==0||a!==i){r>=a&&(a=Math.max(a,1),r=a-1);const c=this.getValueSize();this.times=ti(n,r,a),this.values=ti(this.values,r*c,a*c)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,r=n.length;r===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let a=null;for(let c=0;c!==r;c++){const u=n[c];if(typeof u=="number"&&isNaN(u)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,c,u),e=!1;break}if(a!==null&&a>u){console.error("THREE.KeyframeTrack: Out of order keys.",this,c,u,a),e=!1;break}a=u}if(i!==void 0&&fd(i))for(let c=0,u=i.length;c!==u;++c){const h=i[c];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,c,h),e=!1;break}}return e}optimize(){const e=ti(this.times),t=ti(this.values),n=this.getValueSize(),i=this.getInterpolation()===Cc,r=e.length-1;let a=1;for(let c=1;c<r;++c){let u=!1;const h=e[c],d=e[c+1];if(h!==d&&(c!==1||h!==e[0]))if(i)u=!0;else{const p=c*n,m=p-n,v=p+n;for(let y=0;y!==n;++y){const x=t[p+y];if(x!==t[m+y]||x!==t[v+y]){u=!0;break}}}if(u){if(c!==a){e[a]=e[c];const p=c*n,m=a*n;for(let v=0;v!==n;++v)t[m+v]=t[p+v]}++a}}if(r>0){e[a]=e[r];for(let c=r*n,u=a*n,h=0;h!==n;++h)t[u+h]=t[c+h];++a}return a!==e.length?(this.times=ti(e,0,a),this.values=ti(t,0,a*n)):(this.times=e,this.values=t),this}clone(){const e=ti(this.times,0),t=ti(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}mi.prototype.TimeBufferType=Float32Array;mi.prototype.ValueBufferType=Float32Array;mi.prototype.DefaultInterpolation=oa;class xs extends mi{}xs.prototype.ValueTypeName="bool";xs.prototype.ValueBufferType=Array;xs.prototype.DefaultInterpolation=sa;xs.prototype.InterpolantFactoryMethodLinear=void 0;xs.prototype.InterpolantFactoryMethodSmooth=void 0;class md extends mi{}md.prototype.ValueTypeName="color";class ma extends mi{}ma.prototype.ValueTypeName="number";class Av extends Oa{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const r=this.resultBuffer,a=this.sampleValues,c=this.valueSize,u=(n-t)/(i-t);let h=e*c;for(let d=h+c;h!==d;h+=4)vn.slerpFlat(r,0,a,h-c,a,h,u);return r}}class yo extends mi{InterpolantFactoryMethodLinear(e){return new Av(this.times,this.values,this.getValueSize(),e)}}yo.prototype.ValueTypeName="quaternion";yo.prototype.DefaultInterpolation=oa;yo.prototype.InterpolantFactoryMethodSmooth=void 0;class ys extends mi{}ys.prototype.ValueTypeName="string";ys.prototype.ValueBufferType=Array;ys.prototype.DefaultInterpolation=sa;ys.prototype.InterpolantFactoryMethodLinear=void 0;ys.prototype.InterpolantFactoryMethodSmooth=void 0;class ga extends mi{}ga.prototype.ValueTypeName="vector";class va{constructor(e,t=-1,n,i=Hc){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=kn(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let a=0,c=n.length;a!==c;++a)t.push(Ab(n[a]).scale(i));const r=new this(e.name,e.duration,t,e.blendMode);return r.uuid=e.uuid,r}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let r=0,a=n.length;r!==a;++r)t.push(mi.toJSON(n[r]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const r=t.length,a=[];for(let c=0;c<r;c++){let u=[],h=[];u.push((c+r-1)%r,c,(c+1)%r),h.push(0,1,0);const d=bv(u);u=Lf(u,1,d),h=Lf(h,1,d),!i&&u[0]===0&&(u.push(r),h.push(h[0])),a.push(new ma(".morphTargetInfluences["+t[c].name+"]",u,h).scale(1/n))}return new this(e,-1,a)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},r=/^([\w-]*?)([\d]+)$/;for(let c=0,u=e.length;c<u;c++){const h=e[c],d=h.name.match(r);if(d&&d.length>1){const p=d[1];let m=i[p];m||(i[p]=m=[]),m.push(h)}}const a=[];for(const c in i)a.push(this.CreateFromMorphTargetSequence(c,i[c],t,n));return a}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(p,m,v,y,x){if(v.length!==0){const _=[],S=[];dd(v,_,S,y),_.length!==0&&x.push(new p(m,_,S))}},i=[],r=e.name||"default",a=e.fps||30,c=e.blendMode;let u=e.length||-1;const h=e.hierarchy||[];for(let p=0;p<h.length;p++){const m=h[p].keys;if(!(!m||m.length===0))if(m[0].morphTargets){const v={};let y;for(y=0;y<m.length;y++)if(m[y].morphTargets)for(let x=0;x<m[y].morphTargets.length;x++)v[m[y].morphTargets[x]]=-1;for(const x in v){const _=[],S=[];for(let w=0;w!==m[y].morphTargets.length;++w){const T=m[y];_.push(T.time),S.push(T.morphTarget===x?1:0)}i.push(new ma(".morphTargetInfluence["+x+"]",_,S))}u=v.length*a}else{const v=".bones["+t[p].name+"]";n(ga,v+".position",m,"pos",i),n(yo,v+".quaternion",m,"rot",i),n(ga,v+".scale",m,"scl",i)}}return i.length===0?null:new this(r,u,i,c)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const r=this.tracks[n];t=Math.max(t,r.times[r.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function Eb(l){switch(l.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return ma;case"vector":case"vector2":case"vector3":case"vector4":return ga;case"color":return md;case"quaternion":return yo;case"bool":case"boolean":return xs;case"string":return ys}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+l)}function Ab(l){if(l.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=Eb(l.type);if(l.times===void 0){const t=[],n=[];dd(l.keys,t,n,"value"),l.times=t,l.values=n}return e.parse!==void 0?e.parse(l):new e(l.name,l.times,l.values,l.interpolation)}const ds={enabled:!1,files:{},add:function(l,e){this.enabled!==!1&&(this.files[l]=e)},get:function(l){if(this.enabled!==!1)return this.files[l]},remove:function(l){delete this.files[l]},clear:function(){this.files={}}};class gd{constructor(e,t,n){const i=this;let r=!1,a=0,c=0,u;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(d){c++,r===!1&&i.onStart!==void 0&&i.onStart(d,a,c),r=!0},this.itemEnd=function(d){a++,i.onProgress!==void 0&&i.onProgress(d,a,c),a===c&&(r=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(d){i.onError!==void 0&&i.onError(d)},this.resolveURL=function(d){return u?u(d):d},this.setURLModifier=function(d){return u=d,this},this.addHandler=function(d,p){return h.push(d,p),this},this.removeHandler=function(d){const p=h.indexOf(d);return p!==-1&&h.splice(p,2),this},this.getHandler=function(d){for(let p=0,m=h.length;p<m;p+=2){const v=h[p],y=h[p+1];if(v.global&&(v.lastIndex=0),v.test(d))return y}return null}}}const Cv=new gd;class Un{constructor(e){this.manager=e!==void 0?e:Cv,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,r){n.load(e,i,t,r)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Gi={};class Cb extends Error{constructor(e,t){super(e),this.response=t}}class Ji extends Un{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=ds.get(e);if(r!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(r),this.manager.itemEnd(e)},0),r;if(Gi[e]!==void 0){Gi[e].push({onLoad:t,onProgress:n,onError:i});return}Gi[e]=[],Gi[e].push({onLoad:t,onProgress:n,onError:i});const a=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),c=this.mimeType,u=this.responseType;fetch(a).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||h.body===void 0||h.body.getReader===void 0)return h;const d=Gi[e],p=h.body.getReader(),m=h.headers.get("Content-Length"),v=m?parseInt(m):0,y=v!==0;let x=0;const _=new ReadableStream({start(S){w();function w(){p.read().then(({done:T,value:E})=>{if(T)S.close();else{x+=E.byteLength;const C=new ProgressEvent("progress",{lengthComputable:y,loaded:x,total:v});for(let P=0,N=d.length;P<N;P++){const A=d[P];A.onProgress&&A.onProgress(C)}S.enqueue(E),w()}})}}});return new Response(_)}else throw new Cb(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`,h)}).then(h=>{switch(u){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(d=>new DOMParser().parseFromString(d,c));case"json":return h.json();default:if(c===void 0)return h.text();{const p=/charset="?([^;"\s]*)"?/i.exec(c),m=p&&p[1]?p[1].toLowerCase():void 0,v=new TextDecoder(m);return h.arrayBuffer().then(y=>v.decode(y))}}}).then(h=>{ds.add(e,h);const d=Gi[e];delete Gi[e];for(let p=0,m=d.length;p<m;p++){const v=d[p];v.onLoad&&v.onLoad(h)}}).catch(h=>{const d=Gi[e];if(d===void 0)throw this.manager.itemError(e),h;delete Gi[e];for(let p=0,m=d.length;p<m;p++){const v=d[p];v.onError&&v.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Pb extends Un{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Ji(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(c){try{t(r.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),r.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=va.parse(e[n]);t.push(i)}return t}}class Lb extends Un{constructor(e){super(e)}load(e,t,n,i){const r=this,a=[],c=new sv,u=new Ji(this.manager);u.setPath(this.path),u.setResponseType("arraybuffer"),u.setRequestHeader(this.requestHeader),u.setWithCredentials(r.withCredentials);let h=0;function d(p){u.load(e[p],function(m){const v=r.parse(m,!0);a[p]={width:v.width,height:v.height,format:v.format,mipmaps:v.mipmaps},h+=1,h===6&&(v.mipmapCount===1&&(c.minFilter=Xt),c.image=a,c.format=v.format,c.needsUpdate=!0,t&&t(c))},n,i)}if(Array.isArray(e))for(let p=0,m=e.length;p<m;++p)d(p);else u.load(e,function(p){const m=r.parse(p,!0);if(m.isCubemap){const v=m.mipmaps.length/m.mipmapCount;for(let y=0;y<v;y++){a[y]={mipmaps:[]};for(let x=0;x<m.mipmapCount;x++)a[y].mipmaps.push(m.mipmaps[y*m.mipmapCount+x]),a[y].format=m.format,a[y].width=m.width,a[y].height=m.height}c.image=a}else c.image.width=m.width,c.image.height=m.height,c.mipmaps=m.mipmaps;m.mipmapCount===1&&(c.minFilter=Xt),c.format=m.format,c.needsUpdate=!0,t&&t(c)},n,i);return c}}class xa extends Un{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=ds.get(e);if(a!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;const c=ua("img");function u(){d(),ds.add(e,this),t&&t(this),r.manager.itemEnd(e)}function h(p){d(),i&&i(p),r.manager.itemError(e),r.manager.itemEnd(e)}function d(){c.removeEventListener("load",u,!1),c.removeEventListener("error",h,!1)}return c.addEventListener("load",u,!1),c.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(c.crossOrigin=this.crossOrigin),r.manager.itemStart(e),c.src=e,c}}class Rb extends Un{constructor(e){super(e)}load(e,t,n,i){const r=new wa,a=new xa(this.manager);a.setCrossOrigin(this.crossOrigin),a.setPath(this.path);let c=0;function u(h){a.load(e[h],function(d){r.images[h]=d,c++,c===6&&(r.needsUpdate=!0,t&&t(r))},void 0,i)}for(let h=0;h<e.length;++h)u(h);return r}}class Ib extends Un{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new oo,c=new Ji(this.manager);return c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setPath(this.path),c.setWithCredentials(r.withCredentials),c.load(e,function(u){const h=r.parse(u);!h||(h.image!==void 0?a.image=h.image:h.data!==void 0&&(a.image.width=h.width,a.image.height=h.height,a.image.data=h.data),a.wrapS=h.wrapS!==void 0?h.wrapS:Sn,a.wrapT=h.wrapT!==void 0?h.wrapT:Sn,a.magFilter=h.magFilter!==void 0?h.magFilter:Xt,a.minFilter=h.minFilter!==void 0?h.minFilter:Xt,a.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.encoding!==void 0&&(a.encoding=h.encoding),h.flipY!==void 0&&(a.flipY=h.flipY),h.format!==void 0&&(a.format=h.format),h.type!==void 0&&(a.type=h.type),h.mipmaps!==void 0&&(a.mipmaps=h.mipmaps,a.minFilter=ps),h.mipmapCount===1&&(a.minFilter=Xt),h.generateMipmaps!==void 0&&(a.generateMipmaps=h.generateMipmaps),a.needsUpdate=!0,t&&t(a,h))},n,i),a}}class Db extends Un{constructor(e){super(e)}load(e,t,n,i){const r=new Qt,a=new xa(this.manager);return a.setCrossOrigin(this.crossOrigin),a.setPath(this.path),a.load(e,function(c){r.image=c,r.needsUpdate=!0,t!==void 0&&t(r)},n,i),r}}class Pr extends St{constructor(e,t=1){super(),this.isLight=!0,this.type="Light",this.color=new De(e),this.intensity=t}dispose(){}copy(e,t){return super.copy(e,t),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}class Pv extends Pr{constructor(e,t,n){super(e,n),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(St.DefaultUp),this.updateMatrix(),this.groundColor=new De(t)}copy(e,t){return super.copy(e,t),this.groundColor.copy(e.groundColor),this}}const Fh=new ot,cg=new I,ug=new I;class vd{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new fe(512,512),this.map=null,this.mapPass=null,this.matrix=new ot,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Wc,this._frameExtents=new fe(1,1),this._viewportCount=1,this._viewports=[new Tt(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;cg.setFromMatrixPosition(e.matrixWorld),t.position.copy(cg),ug.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(ug),t.updateMatrixWorld(),Fh.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Fh),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(Fh)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class zb extends vd{constructor(){super(new Ot(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(e){const t=this.camera,n=ca*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,r=e.distance||t.far;(n!==t.fov||i!==t.aspect||r!==t.far)&&(t.fov=n,t.aspect=i,t.far=r,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}class Lv extends Pr{constructor(e,t,n=0,i=Math.PI/3,r=0,a=1){super(e,t),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(St.DefaultUp),this.updateMatrix(),this.target=new St,this.distance=n,this.angle=i,this.penumbra=r,this.decay=a,this.map=null,this.shadow=new zb}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}const hg=new ot,Yo=new I,kh=new I;class Nb extends vd{constructor(){super(new Ot(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new fe(4,2),this._viewportCount=6,this._viewports=[new Tt(2,1,1,1),new Tt(0,1,1,1),new Tt(3,1,1,1),new Tt(1,1,1,1),new Tt(3,0,1,1),new Tt(1,0,1,1)],this._cubeDirections=[new I(1,0,0),new I(-1,0,0),new I(0,0,1),new I(0,0,-1),new I(0,1,0),new I(0,-1,0)],this._cubeUps=[new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,1,0),new I(0,0,1),new I(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,r=e.distance||n.far;r!==n.far&&(n.far=r,n.updateProjectionMatrix()),Yo.setFromMatrixPosition(e.matrixWorld),n.position.copy(Yo),kh.copy(n.position),kh.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(kh),n.updateMatrixWorld(),i.makeTranslation(-Yo.x,-Yo.y,-Yo.z),hg.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(hg)}}class Rv extends Pr{constructor(e,t,n=0,i=1){super(e,t),this.isPointLight=!0,this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new Nb}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e,t){return super.copy(e,t),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}class Ob extends vd{constructor(){super(new _r(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class Iv extends Pr{constructor(e,t){super(e,t),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(St.DefaultUp),this.updateMatrix(),this.target=new St,this.shadow=new Ob}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}class Dv extends Pr{constructor(e,t){super(e,t),this.isAmbientLight=!0,this.type="AmbientLight"}}class zv extends Pr{constructor(e,t,n=10,i=10){super(e,t),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}class Nv{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new I)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.282095),t.addScaledVector(a[1],.488603*i),t.addScaledVector(a[2],.488603*r),t.addScaledVector(a[3],.488603*n),t.addScaledVector(a[4],1.092548*(n*i)),t.addScaledVector(a[5],1.092548*(i*r)),t.addScaledVector(a[6],.315392*(3*r*r-1)),t.addScaledVector(a[7],1.092548*(n*r)),t.addScaledVector(a[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,r=e.z,a=this.coefficients;return t.copy(a[0]).multiplyScalar(.886227),t.addScaledVector(a[1],2*.511664*i),t.addScaledVector(a[2],2*.511664*r),t.addScaledVector(a[3],2*.511664*n),t.addScaledVector(a[4],2*.429043*n*i),t.addScaledVector(a[5],2*.429043*i*r),t.addScaledVector(a[6],.743125*r*r-.247708),t.addScaledVector(a[7],2*.429043*n*r),t.addScaledVector(a[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,r=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*r,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*r,t[6]=.315392*(3*r*r-1),t[7]=1.092548*n*r,t[8]=.546274*(n*n-i*i)}}class $c extends Pr{constructor(e=new Nv,t=1){super(void 0,t),this.isLightProbe=!0,this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}class eu extends Un{constructor(e){super(e),this.textures={}}load(e,t,n,i){const r=this,a=new Ji(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(c){try{t(r.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),r.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(r){return t[r]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",r),t[r]}const i=eu.createMaterialFromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new De().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.iridescence!==void 0&&(i.iridescence=e.iridescence),e.iridescenceIOR!==void 0&&(i.iridescenceIOR=e.iridescenceIOR),e.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=e.iridescenceThicknessRange),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const r in e.uniforms){const a=e.uniforms[r];switch(i.uniforms[r]={},a.type){case"t":i.uniforms[r].value=n(a.value);break;case"c":i.uniforms[r].value=new De().setHex(a.value);break;case"v2":i.uniforms[r].value=new fe().fromArray(a.value);break;case"v3":i.uniforms[r].value=new I().fromArray(a.value);break;case"v4":i.uniforms[r].value=new Tt().fromArray(a.value);break;case"m3":i.uniforms[r].value=new Ln().fromArray(a.value);break;case"m4":i.uniforms[r].value=new ot().fromArray(a.value);break;default:i.uniforms[r].value=a.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.glslVersion!==void 0&&(i.glslVersion=e.glslVersion),e.extensions!==void 0)for(const r in e.extensions)i.extensions[r]=e.extensions[r];if(e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let r=e.normalScale;Array.isArray(r)===!1&&(r=[r,r]),i.normalScale=new fe().fromArray(r)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new fe().fromArray(e.clearcoatNormalScale)),e.iridescenceMap!==void 0&&(i.iridescenceMap=n(e.iridescenceMap)),e.iridescenceThicknessMap!==void 0&&(i.iridescenceThicknessMap=n(e.iridescenceThicknessMap)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}static createMaterialFromType(e){const t={ShadowMaterial:gv,SpriteMaterial:td,RawShaderMaterial:vv,ShaderMaterial:Ei,PointsMaterial:id,MeshPhysicalMaterial:hd,MeshStandardMaterial:ud,MeshPhongMaterial:xv,MeshToonMaterial:yv,MeshNormalMaterial:_v,MeshLambertMaterial:Mv,MeshDepthMaterial:Qf,MeshDistanceMaterial:Kf,MeshBasicMaterial:Ar,MeshMatcapMaterial:Sv,LineDashedMaterial:wv,LineBasicMaterial:wn,Material:un};return new t[e]}}class Rf{static decodeText(e){if(typeof TextDecoder<"u")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Ov extends ct{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}class Fv extends Un{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Ji(r.manager);a.setPath(r.path),a.setRequestHeader(r.requestHeader),a.setWithCredentials(r.withCredentials),a.load(e,function(c){try{t(r.parse(JSON.parse(c)))}catch(u){i?i(u):console.error(u),r.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(v,y){if(t[y]!==void 0)return t[y];const _=v.interleavedBuffers[y],S=r(v,_.buffer),w=no(_.type,S),T=new Zc(w,_.stride);return T.uuid=_.uuid,t[y]=T,T}function r(v,y){if(n[y]!==void 0)return n[y];const _=v.arrayBuffers[y],S=new Uint32Array(_).buffer;return n[y]=S,S}const a=e.isInstancedBufferGeometry?new Ov:new ct,c=e.data.index;if(c!==void 0){const v=no(c.type,c.array);a.setIndex(new Pt(v,1))}const u=e.data.attributes;for(const v in u){const y=u[v];let x;if(y.isInterleavedBufferAttribute){const _=i(e.data,y.data);x=new fs(_,y.itemSize,y.offset,y.normalized)}else{const _=no(y.type,y.array),S=y.isInstancedBufferAttribute?co:Pt;x=new S(_,y.itemSize,y.normalized)}y.name!==void 0&&(x.name=y.name),y.usage!==void 0&&x.setUsage(y.usage),y.updateRange!==void 0&&(x.updateRange.offset=y.updateRange.offset,x.updateRange.count=y.updateRange.count),a.setAttribute(v,x)}const h=e.data.morphAttributes;if(h)for(const v in h){const y=h[v],x=[];for(let _=0,S=y.length;_<S;_++){const w=y[_];let T;if(w.isInterleavedBufferAttribute){const E=i(e.data,w.data);T=new fs(E,w.itemSize,w.offset,w.normalized)}else{const E=no(w.type,w.array);T=new Pt(E,w.itemSize,w.normalized)}w.name!==void 0&&(T.name=w.name),x.push(T)}a.morphAttributes[v]=x}e.data.morphTargetsRelative&&(a.morphTargetsRelative=!0);const p=e.data.groups||e.data.drawcalls||e.data.offsets;if(p!==void 0)for(let v=0,y=p.length;v!==y;++v){const x=p[v];a.addGroup(x.start,x.count,x.materialIndex)}const m=e.data.boundingSphere;if(m!==void 0){const v=new I;m.center!==void 0&&v.fromArray(m.center),a.boundingSphere=new gs(v,m.radius)}return e.name&&(a.name=e.name),e.userData&&(a.userData=e.userData),a}}class Fb extends Un{constructor(e){super(e)}load(e,t,n,i){const r=this,a=this.path===""?Rf.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||a;const c=new Ji(this.manager);c.setPath(this.path),c.setRequestHeader(this.requestHeader),c.setWithCredentials(this.withCredentials),c.load(e,function(u){let h=null;try{h=JSON.parse(u)}catch(p){i!==void 0&&i(p),console.error("THREE:ObjectLoader: Can't parse "+e+".",p.message);return}const d=h.metadata;if(d===void 0||d.type===void 0||d.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+e);return}r.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?Rf.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const r=new Ji(this.manager);r.setPath(this.path),r.setRequestHeader(this.requestHeader),r.setWithCredentials(this.withCredentials);const a=await r.loadAsync(e,t),c=JSON.parse(a),u=c.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(c)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),r=this.parseGeometries(e.geometries,i),a=this.parseImages(e.images,function(){t!==void 0&&t(h)}),c=this.parseTextures(e.textures,a),u=this.parseMaterials(e.materials,c),h=this.parseObject(e.object,r,u,c,n),d=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,d),t!==void 0){let p=!1;for(const m in a)if(a[m].data instanceof HTMLImageElement){p=!0;break}p===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),r=await this.parseImagesAsync(e.images),a=this.parseTextures(e.textures,r),c=this.parseMaterials(e.materials,a),u=this.parseObject(e.object,i,c,a,t),h=this.parseSkeletons(e.skeletons,u);return this.bindSkeletons(u,h),u}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const r=new cs().fromJSON(e[n]);t[r.uuid]=r}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(r){r.isBone&&(i[r.uuid]=r)}),e!==void 0)for(let r=0,a=e.length;r<a;r++){const c=new jc().fromJSON(e[r],i);n[c.uuid]=c}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new Fv;for(let r=0,a=e.length;r<a;r++){let c;const u=e[r];switch(u.type){case"BufferGeometry":case"InstancedBufferGeometry":c=i.parse(u);break;default:u.type in lg?c=lg[u.type].fromJSON(u,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${u.type}"`)}c.uuid=u.uuid,u.name!==void 0&&(c.name=u.name),c.isBufferGeometry===!0&&u.userData!==void 0&&(c.userData=u.userData),n[u.uuid]=c}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const r=new eu;r.setTextures(t);for(let a=0,c=e.length;a<c;a++){const u=e[a];n[u.uuid]===void 0&&(n[u.uuid]=r.parse(u)),i[u.uuid]=n[u.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],r=va.parse(i);t[r.uuid]=r}return t}parseImages(e,t){const n=this,i={};let r;function a(u){return n.manager.itemStart(u),r.load(u,function(){n.manager.itemEnd(u)},void 0,function(){n.manager.itemError(u),n.manager.itemEnd(u)})}function c(u){if(typeof u=="string"){const h=u,d=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return a(d)}else return u.data?{data:no(u.type,u.data),width:u.width,height:u.height}:null}if(e!==void 0&&e.length>0){const u=new gd(t);r=new xa(u),r.setCrossOrigin(this.crossOrigin);for(let h=0,d=e.length;h<d;h++){const p=e[h],m=p.url;if(Array.isArray(m)){const v=[];for(let y=0,x=m.length;y<x;y++){const _=m[y],S=c(_);S!==null&&(S instanceof HTMLImageElement?v.push(S):v.push(new oo(S.data,S.width,S.height)))}i[p.uuid]=new ts(v)}else{const v=c(p.url);i[p.uuid]=new ts(v)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function r(a){if(typeof a=="string"){const c=a,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(c)?c:t.resourcePath+c;return await i.loadAsync(u)}else return a.data?{data:no(a.type,a.data),width:a.width,height:a.height}:null}if(e!==void 0&&e.length>0){i=new xa(this.manager),i.setCrossOrigin(this.crossOrigin);for(let a=0,c=e.length;a<c;a++){const u=e[a],h=u.url;if(Array.isArray(h)){const d=[];for(let p=0,m=h.length;p<m;p++){const v=h[p],y=await r(v);y!==null&&(y instanceof HTMLImageElement?d.push(y):d.push(new oo(y.data,y.width,y.height)))}n[u.uuid]=new ts(d)}else{const d=await r(u.url);n[u.uuid]=new ts(d)}}}return n}parseTextures(e,t){function n(r,a){return typeof r=="number"?r:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",r),a[r])}const i={};if(e!==void 0)for(let r=0,a=e.length;r<a;r++){const c=e[r];c.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',c.uuid),t[c.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",c.image);const u=t[c.image],h=u.data;let d;Array.isArray(h)?(d=new wa,h.length===6&&(d.needsUpdate=!0)):(h&&h.data?d=new oo:d=new Qt,h&&(d.needsUpdate=!0)),d.source=u,d.uuid=c.uuid,c.name!==void 0&&(d.name=c.name),c.mapping!==void 0&&(d.mapping=n(c.mapping,kb)),c.offset!==void 0&&d.offset.fromArray(c.offset),c.repeat!==void 0&&d.repeat.fromArray(c.repeat),c.center!==void 0&&d.center.fromArray(c.center),c.rotation!==void 0&&(d.rotation=c.rotation),c.wrap!==void 0&&(d.wrapS=n(c.wrap[0],fg),d.wrapT=n(c.wrap[1],fg)),c.format!==void 0&&(d.format=c.format),c.type!==void 0&&(d.type=c.type),c.encoding!==void 0&&(d.encoding=c.encoding),c.minFilter!==void 0&&(d.minFilter=n(c.minFilter,dg)),c.magFilter!==void 0&&(d.magFilter=n(c.magFilter,dg)),c.anisotropy!==void 0&&(d.anisotropy=c.anisotropy),c.flipY!==void 0&&(d.flipY=c.flipY),c.premultiplyAlpha!==void 0&&(d.premultiplyAlpha=c.premultiplyAlpha),c.unpackAlignment!==void 0&&(d.unpackAlignment=c.unpackAlignment),c.userData!==void 0&&(d.userData=c.userData),i[c.uuid]=d}return i}parseObject(e,t,n,i,r){let a;function c(m){return t[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",m),t[m]}function u(m){if(m!==void 0){if(Array.isArray(m)){const v=[];for(let y=0,x=m.length;y<x;y++){const _=m[y];n[_]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",_),v.push(n[_])}return v}return n[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",m),n[m]}}function h(m){return i[m]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",m),i[m]}let d,p;switch(e.type){case"Scene":a=new ed,e.background!==void 0&&(Number.isInteger(e.background)?a.background=new De(e.background):a.background=h(e.background)),e.environment!==void 0&&(a.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?a.fog=new Yc(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(a.fog=new qc(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":a=new Ot(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(a.focus=e.focus),e.zoom!==void 0&&(a.zoom=e.zoom),e.filmGauge!==void 0&&(a.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(a.filmOffset=e.filmOffset),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"OrthographicCamera":a=new _r(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(a.zoom=e.zoom),e.view!==void 0&&(a.view=Object.assign({},e.view));break;case"AmbientLight":a=new Dv(e.color,e.intensity);break;case"DirectionalLight":a=new Iv(e.color,e.intensity);break;case"PointLight":a=new Rv(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":a=new zv(e.color,e.intensity,e.width,e.height);break;case"SpotLight":a=new Lv(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":a=new Pv(e.color,e.groundColor,e.intensity);break;case"LightProbe":a=new $c().fromJSON(e);break;case"SkinnedMesh":d=c(e.geometry),p=u(e.material),a=new tv(d,p),e.bindMode!==void 0&&(a.bindMode=e.bindMode),e.bindMatrix!==void 0&&a.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(a.skeleton=e.skeleton);break;case"Mesh":d=c(e.geometry),p=u(e.material),a=new cn(d,p);break;case"InstancedMesh":d=c(e.geometry),p=u(e.material);const m=e.count,v=e.instanceMatrix,y=e.instanceColor;a=new nv(d,p,m),a.instanceMatrix=new co(new Float32Array(v.array),16),y!==void 0&&(a.instanceColor=new co(new Float32Array(y.array),y.itemSize));break;case"LOD":a=new ev;break;case"Line":a=new br(c(e.geometry),u(e.material));break;case"LineLoop":a=new iv(c(e.geometry),u(e.material));break;case"LineSegments":a=new Ci(c(e.geometry),u(e.material));break;case"PointCloud":case"Points":a=new rv(c(e.geometry),u(e.material));break;case"Sprite":a=new $0(u(e.material));break;case"Group":a=new ro;break;case"Bone":a=new nd;break;default:a=new St}if(a.uuid=e.uuid,e.name!==void 0&&(a.name=e.name),e.matrix!==void 0?(a.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(a.matrixAutoUpdate=e.matrixAutoUpdate),a.matrixAutoUpdate&&a.matrix.decompose(a.position,a.quaternion,a.scale)):(e.position!==void 0&&a.position.fromArray(e.position),e.rotation!==void 0&&a.rotation.fromArray(e.rotation),e.quaternion!==void 0&&a.quaternion.fromArray(e.quaternion),e.scale!==void 0&&a.scale.fromArray(e.scale)),e.castShadow!==void 0&&(a.castShadow=e.castShadow),e.receiveShadow!==void 0&&(a.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(a.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(a.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(a.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&a.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(a.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(a.visible=e.visible),e.frustumCulled!==void 0&&(a.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(a.renderOrder=e.renderOrder),e.userData!==void 0&&(a.userData=e.userData),e.layers!==void 0&&(a.layers.mask=e.layers),e.children!==void 0){const m=e.children;for(let v=0;v<m.length;v++)a.add(this.parseObject(m[v],t,n,i,r))}if(e.animations!==void 0){const m=e.animations;for(let v=0;v<m.length;v++){const y=m[v];a.animations.push(r[y])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(a.autoUpdate=e.autoUpdate);const m=e.levels;for(let v=0;v<m.length;v++){const y=m[v],x=a.getObjectByProperty("uuid",y.object);x!==void 0&&a.addLevel(x,y.distance)}}return a}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}}const kb={UVMapping:Vc,CubeReflectionMapping:Mr,CubeRefractionMapping:Sr,EquirectangularReflectionMapping:ta,EquirectangularRefractionMapping:na,CubeUVReflectionMapping:ho},fg={RepeatWrapping:ia,ClampToEdgeWrapping:Sn,MirroredRepeatWrapping:ra},dg={NearestFilter:Jt,NearestMipmapNearestFilter:Dc,NearestMipmapLinearFilter:zc,LinearFilter:Xt,LinearMipmapNearestFilter:Gf,LinearMipmapLinearFilter:ps};class Ub extends Un{constructor(e){super(e),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const r=this,a=ds.get(e);if(a!==void 0)return r.manager.itemStart(e),setTimeout(function(){t&&t(a),r.manager.itemEnd(e)},0),a;const c={};c.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",c.headers=this.requestHeader,fetch(e,c).then(function(u){return u.blob()}).then(function(u){return createImageBitmap(u,Object.assign(r.options,{colorSpaceConversion:"none"}))}).then(function(u){ds.add(e,u),t&&t(u),r.manager.itemEnd(e)}).catch(function(u){i&&i(u),r.manager.itemError(e),r.manager.itemEnd(e)}),r.manager.itemStart(e)}}let mc;const xd={getContext:function(){return mc===void 0&&(mc=new(window.AudioContext||window.webkitAudioContext)),mc},setContext:function(l){mc=l}};class Bb extends Un{constructor(e){super(e)}load(e,t,n,i){const r=this,a=new Ji(this.manager);a.setResponseType("arraybuffer"),a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(c){try{const u=c.slice(0);xd.getContext().decodeAudioData(u,function(d){t(d)})}catch(u){i?i(u):console.error(u),r.manager.itemError(e)}},n,i)}}class Vb extends $c{constructor(e,t,n=1){super(void 0,n),this.isHemisphereLightProbe=!0;const i=new De().set(e),r=new De().set(t),a=new I(i.r,i.g,i.b),c=new I(r.r,r.g,r.b),u=Math.sqrt(Math.PI),h=u*Math.sqrt(.75);this.sh.coefficients[0].copy(a).add(c).multiplyScalar(u),this.sh.coefficients[1].copy(a).sub(c).multiplyScalar(h)}}class Hb extends $c{constructor(e,t=1){super(void 0,t),this.isAmbientLightProbe=!0;const n=new De().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}const pg=new ot,mg=new ot,Hr=new ot;class Gb{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Ot,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Ot,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Hr.copy(e.projectionMatrix);const i=t.eyeSep/2,r=i*t.near/t.focus,a=t.near*Math.tan(os*t.fov*.5)/t.zoom;let c,u;mg.elements[12]=-i,pg.elements[12]=i,c=-a*t.aspect+r,u=a*t.aspect+r,Hr.elements[0]=2*t.near/(u-c),Hr.elements[8]=(u+c)/(u-c),this.cameraL.projectionMatrix.copy(Hr),c=-a*t.aspect-r,u=a*t.aspect-r,Hr.elements[0]=2*t.near/(u-c),Hr.elements[8]=(u+c)/(u-c),this.cameraR.projectionMatrix.copy(Hr)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(mg),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply(pg)}}class yd{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=gg(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=gg();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function gg(){return(typeof performance>"u"?Date:performance).now()}const Gr=new I,vg=new vn,Wb=new I,Wr=new I;class Xb extends St{constructor(){super(),this.type="AudioListener",this.context=xd.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new yd}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Gr,vg,Wb),Wr.set(0,0,-1).applyQuaternion(vg),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Gr.x,i),t.positionY.linearRampToValueAtTime(Gr.y,i),t.positionZ.linearRampToValueAtTime(Gr.z,i),t.forwardX.linearRampToValueAtTime(Wr.x,i),t.forwardY.linearRampToValueAtTime(Wr.y,i),t.forwardZ.linearRampToValueAtTime(Wr.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(Gr.x,Gr.y,Gr.z),t.setOrientation(Wr.x,Wr.y,Wr.z,n.x,n.y,n.z)}}class kv extends St{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Xr=new I,xg=new vn,qb=new I,qr=new I;class Yb extends kv{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Xr,xg,qb),qr.set(0,0,1).applyQuaternion(xg);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Xr.x,n),t.positionY.linearRampToValueAtTime(Xr.y,n),t.positionZ.linearRampToValueAtTime(Xr.z,n),t.orientationX.linearRampToValueAtTime(qr.x,n),t.orientationY.linearRampToValueAtTime(qr.y,n),t.orientationZ.linearRampToValueAtTime(qr.z,n)}else t.setPosition(Xr.x,Xr.y,Xr.z),t.setOrientation(qr.x,qr.y,qr.z)}}class Zb{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class Uv{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,r,a;switch(t){case"quaternion":i=this._slerp,r=this._slerpAdditive,a=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,r=this._select,a=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,r=this._lerpAdditive,a=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=r,this._setIdentity=a,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,r=e*i+i;let a=this.cumulativeWeight;if(a===0){for(let c=0;c!==i;++c)n[r+c]=n[c];a=t}else{a+=t;const c=t/a;this._mixBufferRegion(n,r,0,c,i)}this.cumulativeWeight=a}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,r=this.cumulativeWeight,a=this.cumulativeWeightAdditive,c=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,r<1){const u=t*this._origIndex;this._mixBufferRegion(n,i,u,1-r,t)}a>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let u=t,h=t+t;u!==h;++u)if(n[u]!==n[u+t]){c.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let r=n,a=i;r!==a;++r)t[r]=t[i+r%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,r){if(i>=.5)for(let a=0;a!==r;++a)e[t+a]=e[n+a]}_slerp(e,t,n,i){vn.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,r){const a=this._workIndex*r;vn.multiplyQuaternionsFlat(e,a,e,t,e,n),vn.slerpFlat(e,t,e,t,e,a,i)}_lerp(e,t,n,i,r){const a=1-i;for(let c=0;c!==r;++c){const u=t+c;e[u]=e[u]*a+e[n+c]*i}}_lerpAdditive(e,t,n,i,r){for(let a=0;a!==r;++a){const c=t+a;e[c]=e[c]+e[n+a]*i}}}const _d="\\[\\]\\.:\\/",jb=new RegExp("["+_d+"]","g"),Md="[^"+_d+"]",Jb="[^"+_d.replace("\\.","")+"]",Qb=/((?:WC+[\/:])*)/.source.replace("WC",Md),Kb=/(WCOD+)?/.source.replace("WCOD",Jb),$b=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Md),eT=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Md),tT=new RegExp("^"+Qb+Kb+$b+eT+"$"),nT=["material","materials","bones","map"];class iT{constructor(e,t,n){const i=n||vt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,r=n.length;i!==r;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class vt{constructor(e,t,n){this.path=t,this.parsedPath=n||vt.parseTrackName(t),this.node=vt.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new vt.Composite(e,t,n):new vt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(jb,"")}static parseTrackName(e){const t=tT.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const r=n.nodeName.substring(i+1);nT.indexOf(r)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=r)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(r){for(let a=0;a<r.length;a++){const c=r[a];if(c.name===t||c.uuid===t)return c;const u=n(c.children);if(u)return u}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,r=n.length;i!==r;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let r=t.propertyIndex;if(e||(e=vt.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let d=0;d<e.length;d++)if(e[d].name===h){h=d;break}break;case"map":if("map"in e){e=e.map;break}if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}e=e.material.map;break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const a=e[i];if(a===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let c=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?c=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(c=this.Versioning.MatrixWorldNeedsUpdate);let u=this.BindingType.Direct;if(r!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[r]!==void 0&&(r=e.morphTargetDictionary[r])}u=this.BindingType.ArrayElement,this.resolvedProperty=a,this.propertyIndex=r}else a.fromArray!==void 0&&a.toArray!==void 0?(u=this.BindingType.HasFromToArray,this.resolvedProperty=a):Array.isArray(a)?(u=this.BindingType.EntireArray,this.resolvedProperty=a):this.propertyName=i;this.getValue=this.GetterByBindingType[u],this.setValue=this.SetterByBindingTypeAndVersioning[u][c]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}vt.Composite=iT;vt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};vt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};vt.prototype.GetterByBindingType=[vt.prototype._getValue_direct,vt.prototype._getValue_array,vt.prototype._getValue_arrayElement,vt.prototype._getValue_toArray];vt.prototype.SetterByBindingTypeAndVersioning=[[vt.prototype._setValue_direct,vt.prototype._setValue_direct_setNeedsUpdate,vt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[vt.prototype._setValue_array,vt.prototype._setValue_array_setNeedsUpdate,vt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[vt.prototype._setValue_arrayElement,vt.prototype._setValue_arrayElement_setNeedsUpdate,vt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[vt.prototype._setValue_fromArray,vt.prototype._setValue_fromArray_setNeedsUpdate,vt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class rT{constructor(){this.isAnimationObjectGroup=!0,this.uuid=kn(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,r=this._bindings,a=r.length;let c,u=e.length,h=this.nCachedObjects_;for(let d=0,p=arguments.length;d!==p;++d){const m=arguments[d],v=m.uuid;let y=t[v];if(y===void 0){y=u++,t[v]=y,e.push(m);for(let x=0,_=a;x!==_;++x)r[x].push(new vt(m,n[x],i[x]))}else if(y<h){c=e[y];const x=--h,_=e[x];t[_.uuid]=y,e[y]=_,t[v]=x,e[x]=m;for(let S=0,w=a;S!==w;++S){const T=r[S],E=T[x];let C=T[y];T[y]=E,C===void 0&&(C=new vt(m,n[S],i[S])),T[x]=C}}else e[y]!==c&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_;for(let a=0,c=arguments.length;a!==c;++a){const u=arguments[a],h=u.uuid,d=t[h];if(d!==void 0&&d>=r){const p=r++,m=e[p];t[m.uuid]=d,e[d]=m,t[h]=p,e[p]=u;for(let v=0,y=i;v!==y;++v){const x=n[v],_=x[p],S=x[d];x[d]=_,x[p]=S}}}this.nCachedObjects_=r}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let r=this.nCachedObjects_,a=e.length;for(let c=0,u=arguments.length;c!==u;++c){const h=arguments[c],d=h.uuid,p=t[d];if(p!==void 0)if(delete t[d],p<r){const m=--r,v=e[m],y=--a,x=e[y];t[v.uuid]=p,e[p]=v,t[x.uuid]=m,e[m]=x,e.pop();for(let _=0,S=i;_!==S;++_){const w=n[_],T=w[m],E=w[y];w[p]=T,w[m]=E,w.pop()}}else{const m=--a,v=e[m];m>0&&(t[v.uuid]=p),e[p]=v,e.pop();for(let y=0,x=i;y!==x;++y){const _=n[y];_[p]=_[m],_.pop()}}}this.nCachedObjects_=r}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const r=this._bindings;if(i!==void 0)return r[i];const a=this._paths,c=this._parsedPaths,u=this._objects,h=u.length,d=this.nCachedObjects_,p=new Array(h);i=r.length,n[e]=i,a.push(e),c.push(t),r.push(p);for(let m=d,v=u.length;m!==v;++m){const y=u[m];p[m]=new vt(y,e,t)}return p}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,r=this._parsedPaths,a=this._bindings,c=a.length-1,u=a[c],h=e[c];t[h]=n,a[n]=u,a.pop(),r[n]=r[c],r.pop(),i[n]=i[c],i.pop()}}}class sT{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const r=t.tracks,a=r.length,c=new Array(a),u={endingStart:$r,endingEnd:$r};for(let h=0;h!==a;++h){const d=r[h].createInterpolant(null);c[h]=d,d.settings=u}this._interpolantSettings=u,this._interpolants=c,this._propertyBindings=new Array(a),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=R0,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,r=e._clip.duration,a=r/i,c=i/r;e.warp(1,a,t),this.warp(c,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,r=i.time,a=this.timeScale;let c=this._timeScaleInterpolant;c===null&&(c=i._lendControlInterpolant(),this._timeScaleInterpolant=c);const u=c.parameterPositions,h=c.sampleValues;return u[0]=r,u[1]=r+n,h[0]=e/a,h[1]=t/a,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const r=this._startTime;if(r!==null){const u=(e-r)*n;u<0||n===0?t=0:(this._startTime=null,t=n*u)}t*=this._updateTimeScale(e);const a=this._updateTime(t),c=this._updateWeight(e);if(c>0){const u=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case Xf:for(let d=0,p=u.length;d!==p;++d)u[d].evaluate(a),h[d].accumulateAdditive(c);break;case Hc:default:for(let d=0,p=u.length;d!==p;++d)u[d].evaluate(a),h[d].accumulate(i,c)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t)}}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,r=this._loopCount;const a=n===I0;if(e===0)return r===-1?i:a&&(r&1)===1?t-i:i;if(n===L0){r===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(r===-1&&(e>=0?(r=0,this._setEndings(!0,this.repetitions===0,a)):this._setEndings(this.repetitions===0,!0,a)),i>=t||i<0){const c=Math.floor(i/t);i-=t*c,r+=Math.abs(c);const u=this.repetitions-r;if(u<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(u===1){const h=e<0;this._setEndings(h,!h,a)}else this._setEndings(!1,!1,a);this._loopCount=r,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:c})}}else this.time=i;if(a&&(r&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=es,i.endingEnd=es):(e?i.endingStart=this.zeroSlopeAtStart?es:$r:i.endingStart=aa,t?i.endingEnd=this.zeroSlopeAtEnd?es:$r:i.endingEnd=aa)}_scheduleFading(e,t,n){const i=this._mixer,r=i.time;let a=this._weightInterpolant;a===null&&(a=i._lendControlInterpolant(),this._weightInterpolant=a);const c=a.parameterPositions,u=a.sampleValues;return c[0]=r,u[0]=t,c[1]=r+e,u[1]=n,this}}const oT=new Float32Array(1);class aT extends Ai{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,r=i.length,a=e._propertyBindings,c=e._interpolants,u=n.uuid,h=this._bindingsByRootAndName;let d=h[u];d===void 0&&(d={},h[u]=d);for(let p=0;p!==r;++p){const m=i[p],v=m.name;let y=d[v];if(y!==void 0)++y.referenceCount,a[p]=y;else{if(y=a[p],y!==void 0){y._cacheIndex===null&&(++y.referenceCount,this._addInactiveBinding(y,u,v));continue}const x=t&&t._propertyBindings[p].binding.parsedPath;y=new Uv(vt.create(n,v,x),m.ValueTypeName,m.getValueSize()),++y.referenceCount,this._addInactiveBinding(y,u,v),a[p]=y}c[p].resultBuffer=y.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,r=this._actionsByClip[i];this._bindAction(e,r&&r.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];r.useCount++===0&&(this._lendBinding(r),r.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.useCount===0&&(r.restoreOriginalState(),this._takeBackBinding(r))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,r=this._actionsByClip;let a=r[t];if(a===void 0)a={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,r[t]=a;else{const c=a.knownActions;e._byClipCacheIndex=c.length,c.push(e)}e._cacheIndex=i.length,i.push(e),a.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const r=e._clip.uuid,a=this._actionsByClip,c=a[r],u=c.knownActions,h=u[u.length-1],d=e._byClipCacheIndex;h._byClipCacheIndex=d,u[d]=h,u.pop(),e._byClipCacheIndex=null;const p=c.actionByRoot,m=(e._localRoot||this._root).uuid;delete p[m],u.length===0&&delete a[r],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const r=t[n];--r.referenceCount===0&&this._removeInactiveBinding(r)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,r=this._bindings;let a=i[t];a===void 0&&(a={},i[t]=a),a[n]=e,e._cacheIndex=r.length,r.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,r=n.path,a=this._bindingsByRootAndName,c=a[i],u=t[t.length-1],h=e._cacheIndex;u._cacheIndex=h,t[h]=u,t.pop(),delete c[r],Object.keys(c).length===0&&delete a[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,r=t[i];e._cacheIndex=i,t[i]=e,r._cacheIndex=n,t[n]=r}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new pd(new Float32Array(2),new Float32Array(2),1,oT),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,r=t[i];e.__cacheIndex=i,t[i]=e,r.__cacheIndex=n,t[n]=r}clipAction(e,t,n){const i=t||this._root,r=i.uuid;let a=typeof e=="string"?va.findByName(i,e):e;const c=a!==null?a.uuid:e,u=this._actionsByClip[c];let h=null;if(n===void 0&&(a!==null?n=a.blendMode:n=Hc),u!==void 0){const p=u.actionByRoot[r];if(p!==void 0&&p.blendMode===n)return p;h=u.knownActions[0],a===null&&(a=h._clip)}if(a===null)return null;const d=new sT(this,a,t,n);return this._bindAction(d,h),this._addInactiveAction(d,c,r),d}existingAction(e,t){const n=t||this._root,i=n.uuid,r=typeof e=="string"?va.findByName(n,e):e,a=r?r.uuid:e,c=this._actionsByClip[a];return c!==void 0&&c.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,r=Math.sign(e),a=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,r,a);const c=this._bindings,u=this._nActiveBindings;for(let h=0;h!==u;++h)c[h].apply(a);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,r=i[n];if(r!==void 0){const a=r.knownActions;for(let c=0,u=a.length;c!==u;++c){const h=a[c];this._deactivateAction(h);const d=h._cacheIndex,p=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,p._cacheIndex=d,t[d]=p,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const a in n){const c=n[a].actionByRoot,u=c[t];u!==void 0&&(this._deactivateAction(u),this._removeInactiveAction(u))}const i=this._bindingsByRootAndName,r=i[t];if(r!==void 0)for(const a in r){const c=r[a];c.restoreOriginalState(),this._removeInactiveBinding(c)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}class Sd{constructor(e){this.value=e}clone(){return new Sd(this.value.clone===void 0?this.value:this.value.clone())}}let lT=0;class cT extends Ai{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:lT++}),this.name="",this.usage=la,this.uniforms=[]}add(e){return this.uniforms.push(e),this}remove(e){const t=this.uniforms.indexOf(e);return t!==-1&&this.uniforms.splice(t,1),this}setName(e){return this.name=e,this}setUsage(e){return this.usage=e,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(e){this.name=e.name,this.usage=e.usage;const t=e.uniforms;this.uniforms.length=0;for(let n=0,i=t.length;n<i;n++)this.uniforms.push(t[n].clone());return this}clone(){return new this.constructor().copy(this)}}class uT extends Zc{constructor(e,t,n=1){super(e,t),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}class hT{constructor(e,t,n,i,r){this.isGLBufferAttribute=!0,this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=r,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}class Bv{constructor(e,t,n=0,i=1/0){this.ray=new Ma(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new ls,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return If(e,this,n,t),n.sort(yg),n}intersectObjects(e,t=!0,n=[]){for(let i=0,r=e.length;i<r;i++)If(e[i],this,n,t);return n.sort(yg),n}}function yg(l,e){return l.distance-e.distance}function If(l,e,t,n){if(l.layers.test(e.layers)&&l.raycast(e,t),n===!0){const i=l.children;for(let r=0,a=i.length;r<a;r++)If(i[r],e,t,!0)}}class Df{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(qt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class fT{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const _g=new fe;class dT{constructor(e=new fe(1/0,1/0),t=new fe(-1/0,-1/0)){this.isBox2=!0,this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=_g.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return _g.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}const Mg=new I,gc=new I;class pT{constructor(e=new I,t=new I){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){Mg.subVectors(e,this.start),gc.subVectors(this.end,this.start);const n=gc.dot(gc);let r=gc.dot(Mg)/n;return t&&(r=qt(r,0,1)),r}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const Sg=new I;class mT extends St{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const n=new ct,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let a=0,c=1,u=32;a<u;a++,c++){const h=a/u*Math.PI*2,d=c/u*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(d),Math.sin(d),1)}n.setAttribute("position",new Fe(i,3));const r=new wn({fog:!1,toneMapped:!1});this.cone=new Ci(n,r),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),Sg.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(Sg),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const mr=new I,vc=new ot,Uh=new ot;class gT extends Ci{constructor(e){const t=Vv(e),n=new ct,i=[],r=[],a=new De(0,0,1),c=new De(0,1,0);for(let h=0;h<t.length;h++){const d=t[h];d.parent&&d.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),r.push(a.r,a.g,a.b),r.push(c.r,c.g,c.b))}n.setAttribute("position",new Fe(i,3)),n.setAttribute("color",new Fe(r,3));const u=new wn({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,u),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");Uh.copy(this.root.matrixWorld).invert();for(let r=0,a=0;r<t.length;r++){const c=t[r];c.parent&&c.parent.isBone&&(vc.multiplyMatrices(Uh,c.matrixWorld),mr.setFromMatrixPosition(vc),i.setXYZ(a,mr.x,mr.y,mr.z),vc.multiplyMatrices(Uh,c.parent.matrixWorld),mr.setFromMatrixPosition(vc),i.setXYZ(a+1,mr.x,mr.y,mr.z),a+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose()}}function Vv(l){const e=[];l.isBone===!0&&e.push(l);for(let t=0;t<l.children.length;t++)e.push.apply(e,Vv(l.children[t]));return e}class vT extends cn{constructor(e,t,n){const i=new xo(t,4,2),r=new Ar({wireframe:!0,fog:!1,toneMapped:!1});super(i,r),this.light=e,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const xT=new I,wg=new De,bg=new De;class yT extends St{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const i=new vo(t);i.rotateY(Math.PI*.5),this.material=new Ar({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const r=i.getAttribute("position"),a=new Float32Array(r.count*3);i.setAttribute("color",new Pt(a,3)),this.add(new cn(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");wg.copy(this.light.color),bg.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const r=n<i/2?wg:bg;t.setXYZ(n,r.r,r.g,r.b)}t.needsUpdate=!0}e.lookAt(xT.setFromMatrixPosition(this.light.matrixWorld).negate())}}class _T extends Ci{constructor(e=10,t=10,n=4473924,i=8947848){n=new De(n),i=new De(i);const r=t/2,a=e/t,c=e/2,u=[],h=[];for(let m=0,v=0,y=-c;m<=t;m++,y+=a){u.push(-c,0,y,c,0,y),u.push(y,0,-c,y,0,c);const x=m===r?n:i;x.toArray(h,v),v+=3,x.toArray(h,v),v+=3,x.toArray(h,v),v+=3,x.toArray(h,v),v+=3}const d=new ct;d.setAttribute("position",new Fe(u,3)),d.setAttribute("color",new Fe(h,3));const p=new wn({vertexColors:!0,toneMapped:!1});super(d,p),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class MT extends Ci{constructor(e=10,t=16,n=8,i=64,r=4473924,a=8947848){r=new De(r),a=new De(a);const c=[],u=[];if(t>1)for(let p=0;p<t;p++){const m=p/t*(Math.PI*2),v=Math.sin(m)*e,y=Math.cos(m)*e;c.push(0,0,0),c.push(v,0,y);const x=p&1?r:a;u.push(x.r,x.g,x.b),u.push(x.r,x.g,x.b)}for(let p=0;p<n;p++){const m=p&1?r:a,v=e-e/n*p;for(let y=0;y<i;y++){let x=y/i*(Math.PI*2),_=Math.sin(x)*v,S=Math.cos(x)*v;c.push(_,0,S),u.push(m.r,m.g,m.b),x=(y+1)/i*(Math.PI*2),_=Math.sin(x)*v,S=Math.cos(x)*v,c.push(_,0,S),u.push(m.r,m.g,m.b)}}const h=new ct;h.setAttribute("position",new Fe(c,3)),h.setAttribute("color",new Fe(u,3));const d=new wn({vertexColors:!0,toneMapped:!1});super(h,d),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const Tg=new I,xc=new I,Eg=new I;class ST extends St{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,t===void 0&&(t=1);let i=new ct;i.setAttribute("position",new Fe([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const r=new wn({fog:!1,toneMapped:!1});this.lightPlane=new br(i,r),this.add(this.lightPlane),i=new ct,i.setAttribute("position",new Fe([0,0,0,0,0,1],3)),this.targetLine=new br(i,r),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){Tg.setFromMatrixPosition(this.light.matrixWorld),xc.setFromMatrixPosition(this.light.target.matrixWorld),Eg.subVectors(xc,Tg),this.lightPlane.lookAt(xc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(xc),this.targetLine.scale.z=Eg.length()}}const yc=new I,Bt=new Sa;class wT extends Ci{constructor(e){const t=new ct,n=new wn({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],r=[],a={};c("n1","n2"),c("n2","n4"),c("n4","n3"),c("n3","n1"),c("f1","f2"),c("f2","f4"),c("f4","f3"),c("f3","f1"),c("n1","f1"),c("n2","f2"),c("n3","f3"),c("n4","f4"),c("p","n1"),c("p","n2"),c("p","n3"),c("p","n4"),c("u1","u2"),c("u2","u3"),c("u3","u1"),c("c","t"),c("p","c"),c("cn1","cn2"),c("cn3","cn4"),c("cf1","cf2"),c("cf3","cf4");function c(y,x){u(y),u(x)}function u(y){i.push(0,0,0),r.push(0,0,0),a[y]===void 0&&(a[y]=[]),a[y].push(i.length/3-1)}t.setAttribute("position",new Fe(i,3)),t.setAttribute("color",new Fe(r,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=a,this.update();const h=new De(16755200),d=new De(16711680),p=new De(43775),m=new De(16777215),v=new De(3355443);this.setColors(h,d,p,m,v)}setColors(e,t,n,i,r){const c=this.geometry.getAttribute("color");c.setXYZ(0,e.r,e.g,e.b),c.setXYZ(1,e.r,e.g,e.b),c.setXYZ(2,e.r,e.g,e.b),c.setXYZ(3,e.r,e.g,e.b),c.setXYZ(4,e.r,e.g,e.b),c.setXYZ(5,e.r,e.g,e.b),c.setXYZ(6,e.r,e.g,e.b),c.setXYZ(7,e.r,e.g,e.b),c.setXYZ(8,e.r,e.g,e.b),c.setXYZ(9,e.r,e.g,e.b),c.setXYZ(10,e.r,e.g,e.b),c.setXYZ(11,e.r,e.g,e.b),c.setXYZ(12,e.r,e.g,e.b),c.setXYZ(13,e.r,e.g,e.b),c.setXYZ(14,e.r,e.g,e.b),c.setXYZ(15,e.r,e.g,e.b),c.setXYZ(16,e.r,e.g,e.b),c.setXYZ(17,e.r,e.g,e.b),c.setXYZ(18,e.r,e.g,e.b),c.setXYZ(19,e.r,e.g,e.b),c.setXYZ(20,e.r,e.g,e.b),c.setXYZ(21,e.r,e.g,e.b),c.setXYZ(22,e.r,e.g,e.b),c.setXYZ(23,e.r,e.g,e.b),c.setXYZ(24,t.r,t.g,t.b),c.setXYZ(25,t.r,t.g,t.b),c.setXYZ(26,t.r,t.g,t.b),c.setXYZ(27,t.r,t.g,t.b),c.setXYZ(28,t.r,t.g,t.b),c.setXYZ(29,t.r,t.g,t.b),c.setXYZ(30,t.r,t.g,t.b),c.setXYZ(31,t.r,t.g,t.b),c.setXYZ(32,n.r,n.g,n.b),c.setXYZ(33,n.r,n.g,n.b),c.setXYZ(34,n.r,n.g,n.b),c.setXYZ(35,n.r,n.g,n.b),c.setXYZ(36,n.r,n.g,n.b),c.setXYZ(37,n.r,n.g,n.b),c.setXYZ(38,i.r,i.g,i.b),c.setXYZ(39,i.r,i.g,i.b),c.setXYZ(40,r.r,r.g,r.b),c.setXYZ(41,r.r,r.g,r.b),c.setXYZ(42,r.r,r.g,r.b),c.setXYZ(43,r.r,r.g,r.b),c.setXYZ(44,r.r,r.g,r.b),c.setXYZ(45,r.r,r.g,r.b),c.setXYZ(46,r.r,r.g,r.b),c.setXYZ(47,r.r,r.g,r.b),c.setXYZ(48,r.r,r.g,r.b),c.setXYZ(49,r.r,r.g,r.b),c.needsUpdate=!0}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;Bt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),Gt("c",t,e,Bt,0,0,-1),Gt("t",t,e,Bt,0,0,1),Gt("n1",t,e,Bt,-n,-i,-1),Gt("n2",t,e,Bt,n,-i,-1),Gt("n3",t,e,Bt,-n,i,-1),Gt("n4",t,e,Bt,n,i,-1),Gt("f1",t,e,Bt,-n,-i,1),Gt("f2",t,e,Bt,n,-i,1),Gt("f3",t,e,Bt,-n,i,1),Gt("f4",t,e,Bt,n,i,1),Gt("u1",t,e,Bt,n*.7,i*1.1,-1),Gt("u2",t,e,Bt,-n*.7,i*1.1,-1),Gt("u3",t,e,Bt,0,i*2,-1),Gt("cf1",t,e,Bt,-n,0,1),Gt("cf2",t,e,Bt,n,0,1),Gt("cf3",t,e,Bt,0,-i,1),Gt("cf4",t,e,Bt,0,i,1),Gt("cn1",t,e,Bt,-n,0,-1),Gt("cn2",t,e,Bt,n,0,-1),Gt("cn3",t,e,Bt,0,-i,-1),Gt("cn4",t,e,Bt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function Gt(l,e,t,n,i,r,a){yc.set(i,r,a).unproject(n);const c=e[l];if(c!==void 0){const u=t.getAttribute("position");for(let h=0,d=c.length;h<d;h++)u.setXYZ(c[h],yc.x,yc.y,yc.z)}}const _c=new ms;class bT extends Ci{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),r=new ct;r.setIndex(new Pt(n,1)),r.setAttribute("position",new Pt(i,3)),super(r,new wn({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&_c.setFromObject(this.object),_c.isEmpty())return;const t=_c.min,n=_c.max,i=this.geometry.attributes.position,r=i.array;r[0]=n.x,r[1]=n.y,r[2]=n.z,r[3]=t.x,r[4]=n.y,r[5]=n.z,r[6]=t.x,r[7]=t.y,r[8]=n.z,r[9]=n.x,r[10]=t.y,r[11]=n.z,r[12]=n.x,r[13]=n.y,r[14]=t.z,r[15]=t.x,r[16]=n.y,r[17]=t.z,r[18]=t.x,r[19]=t.y,r[20]=t.z,r[21]=n.x,r[22]=t.y,r[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e,t){return super.copy(e,t),this.object=e.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class TT extends Ci{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],r=new ct;r.setIndex(new Pt(n,1)),r.setAttribute("position",new Fe(i,3)),super(r,new wn({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}dispose(){this.geometry.dispose(),this.material.dispose()}}class ET extends br{constructor(e,t=1,n=16776960){const i=n,r=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],a=new ct;a.setAttribute("position",new Fe(r,3)),a.computeBoundingSphere(),super(a,new wn({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const c=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],u=new ct;u.setAttribute("position",new Fe(c,3)),u.computeBoundingSphere(),this.add(new cn(u,new Ar({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(e)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const Ag=new I;let Mc,Bh;class AT extends St{constructor(e=new I(0,0,1),t=new I(0,0,0),n=1,i=16776960,r=n*.2,a=r*.2){super(),this.type="ArrowHelper",Mc===void 0&&(Mc=new ct,Mc.setAttribute("position",new Fe([0,0,0,0,1,0],3)),Bh=new vs(0,.5,1,5,1),Bh.translate(0,-.5,0)),this.position.copy(t),this.line=new br(Mc,new wn({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new cn(Bh,new Ar({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,r,a)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{Ag.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(Ag,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class CT extends Ci{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new ct;i.setAttribute("position",new Fe(t,3)),i.setAttribute("color",new Fe(n,3));const r=new wn({vertexColors:!0,toneMapped:!1});super(i,r),this.type="AxesHelper"}setColors(e,t,n){const i=new De,r=this.geometry.attributes.color.array;return i.set(e),i.toArray(r,0),i.toArray(r,3),i.set(t),i.toArray(r,6),i.toArray(r,9),i.set(n),i.toArray(r,12),i.toArray(r,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class PT{constructor(){this.type="ShapePath",this.color=new De,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new ha,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,r,a){return this.currentPath.bezierCurveTo(e,t,n,i,r,a),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e){function t(S){const w=[];for(let T=0,E=S.length;T<E;T++){const C=S[T],P=new cs;P.curves=C.curves,w.push(P)}return w}function n(S,w){const T=w.length;let E=!1;for(let C=T-1,P=0;P<T;C=P++){let N=w[C],A=w[P],L=A.x-N.x,F=A.y-N.y;if(Math.abs(F)>Number.EPSILON){if(F<0&&(N=w[P],L=-L,A=w[C],F=-F),S.y<N.y||S.y>A.y)continue;if(S.y===N.y){if(S.x===N.x)return!0}else{const q=F*(S.x-N.x)-L*(S.y-N.y);if(q===0)return!0;if(q<0)continue;E=!E}}else{if(S.y!==N.y)continue;if(A.x<=S.x&&S.x<=N.x||N.x<=S.x&&S.x<=A.x)return!0}}return E}const i=Ti.isClockWise,r=this.subPaths;if(r.length===0)return[];let a,c,u;const h=[];if(r.length===1)return c=r[0],u=new cs,u.curves=c.curves,h.push(u),h;let d=!i(r[0].getPoints());d=e?!d:d;const p=[],m=[];let v=[],y=0,x;m[y]=void 0,v[y]=[];for(let S=0,w=r.length;S<w;S++)c=r[S],x=c.getPoints(),a=i(x),a=e?!a:a,a?(!d&&m[y]&&y++,m[y]={s:new cs,p:x},m[y].s.curves=c.curves,d&&y++,v[y]=[]):v[y].push({h:c,p:x[0]});if(!m[0])return t(r);if(m.length>1){let S=!1,w=0;for(let T=0,E=m.length;T<E;T++)p[T]=[];for(let T=0,E=m.length;T<E;T++){const C=v[T];for(let P=0;P<C.length;P++){const N=C[P];let A=!0;for(let L=0;L<m.length;L++)n(N.p,m[L].p)&&(T!==L&&w++,A?(A=!1,p[L].push(N)):S=!0);A&&p[T].push(N)}}w>0&&S===!1&&(v=p)}let _;for(let S=0,w=m.length;S<w;S++){u=m[S].s,h.push(u),_=v[S];for(let T=0,E=_.length;T<E;T++)u.holes.push(_[T].h)}return h}}const Wi=LT();function LT(){const l=new ArrayBuffer(4),e=new Float32Array(l),t=new Uint32Array(l),n=new Uint32Array(512),i=new Uint32Array(512);for(let u=0;u<256;++u){const h=u-127;h<-27?(n[u]=0,n[u|256]=32768,i[u]=24,i[u|256]=24):h<-14?(n[u]=1024>>-h-14,n[u|256]=1024>>-h-14|32768,i[u]=-h-1,i[u|256]=-h-1):h<=15?(n[u]=h+15<<10,n[u|256]=h+15<<10|32768,i[u]=13,i[u|256]=13):h<128?(n[u]=31744,n[u|256]=64512,i[u]=24,i[u|256]=24):(n[u]=31744,n[u|256]=64512,i[u]=13,i[u|256]=13)}const r=new Uint32Array(2048),a=new Uint32Array(64),c=new Uint32Array(64);for(let u=1;u<1024;++u){let h=u<<13,d=0;for(;(h&8388608)===0;)h<<=1,d-=8388608;h&=-8388609,d+=947912704,r[u]=h|d}for(let u=1024;u<2048;++u)r[u]=939524096+(u-1024<<13);for(let u=1;u<31;++u)a[u]=u<<23;a[31]=1199570944,a[32]=2147483648;for(let u=33;u<63;++u)a[u]=2147483648+(u-32<<23);a[63]=3347054592;for(let u=1;u<64;++u)u!==32&&(c[u]=1024);return{floatView:e,uint32View:t,baseTable:n,shiftTable:i,mantissaTable:r,exponentTable:a,offsetTable:c}}function RT(l){Math.abs(l)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),l=qt(l,-65504,65504),Wi.floatView[0]=l;const e=Wi.uint32View[0],t=e>>23&511;return Wi.baseTable[t]+((e&8388607)>>Wi.shiftTable[t])}function IT(l){const e=l>>10;return Wi.uint32View[0]=Wi.mantissaTable[Wi.offsetTable[e]+(l&1023)]+Wi.exponentTable[e],Wi.floatView[0]}var DT=Object.freeze({__proto__:null,toHalfFloat:RT,fromHalfFloat:IT});function zT(){console.error("THREE.ImmediateRenderObject has been removed.")}class NT extends ri{constructor(e,t,n){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(e,t,n),this.samples=4}}class OT extends _a{constructor(e,t,n,i){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(e,t,n,i)}}class FT extends Gc{constructor(e,t,n,i){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(e,t,n,i)}}class kT extends Cr{constructor(e,t,n,i,r,a){console.warn("THREE.BoxBufferGeometry has been renamed to THREE.BoxGeometry."),super(e,t,n,i,r,a)}}class UT extends ba{constructor(e,t,n,i){console.warn("THREE.CapsuleBufferGeometry has been renamed to THREE.CapsuleGeometry."),super(e,t,n,i)}}class BT extends Ta{constructor(e,t,n,i){console.warn("THREE.CircleBufferGeometry has been renamed to THREE.CircleGeometry."),super(e,t,n,i)}}class VT extends Ea{constructor(e,t,n,i,r,a,c){console.warn("THREE.ConeBufferGeometry has been renamed to THREE.ConeGeometry."),super(e,t,n,i,r,a,c)}}class HT extends vs{constructor(e,t,n,i,r,a,c,u){console.warn("THREE.CylinderBufferGeometry has been renamed to THREE.CylinderGeometry."),super(e,t,n,i,r,a,c,u)}}class GT extends Aa{constructor(e,t){console.warn("THREE.DodecahedronBufferGeometry has been renamed to THREE.DodecahedronGeometry."),super(e,t)}}class WT extends Ca{constructor(e,t){console.warn("THREE.ExtrudeBufferGeometry has been renamed to THREE.ExtrudeGeometry."),super(e,t)}}class XT extends Pa{constructor(e,t){console.warn("THREE.IcosahedronBufferGeometry has been renamed to THREE.IcosahedronGeometry."),super(e,t)}}class qT extends go{constructor(e,t,n,i){console.warn("THREE.LatheBufferGeometry has been renamed to THREE.LatheGeometry."),super(e,t,n,i)}}class YT extends vo{constructor(e,t){console.warn("THREE.OctahedronBufferGeometry has been renamed to THREE.OctahedronGeometry."),super(e,t)}}class ZT extends po{constructor(e,t,n,i){console.warn("THREE.PlaneBufferGeometry has been renamed to THREE.PlaneGeometry."),super(e,t,n,i)}}class jT extends Qi{constructor(e,t,n,i){console.warn("THREE.PolyhedronBufferGeometry has been renamed to THREE.PolyhedronGeometry."),super(e,t,n,i)}}class JT extends La{constructor(e,t,n,i,r,a){console.warn("THREE.RingBufferGeometry has been renamed to THREE.RingGeometry."),super(e,t,n,i,r,a)}}class QT extends Ra{constructor(e,t){console.warn("THREE.ShapeBufferGeometry has been renamed to THREE.ShapeGeometry."),super(e,t)}}class KT extends xo{constructor(e,t,n,i,r,a,c){console.warn("THREE.SphereBufferGeometry has been renamed to THREE.SphereGeometry."),super(e,t,n,i,r,a,c)}}class $T extends Ia{constructor(e,t){console.warn("THREE.TetrahedronBufferGeometry has been renamed to THREE.TetrahedronGeometry."),super(e,t)}}class eE extends Da{constructor(e,t,n,i,r){console.warn("THREE.TorusBufferGeometry has been renamed to THREE.TorusGeometry."),super(e,t,n,i,r)}}class tE extends za{constructor(e,t,n,i,r,a){console.warn("THREE.TorusKnotBufferGeometry has been renamed to THREE.TorusKnotGeometry."),super(e,t,n,i,r,a)}}class nE extends Na{constructor(e,t,n,i,r){console.warn("THREE.TubeBufferGeometry has been renamed to THREE.TubeGeometry."),super(e,t,n,i,r)}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Bc}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Bc);const Fc=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:Hf,AddEquation:Qr,AddOperation:u0,AdditiveAnimationBlendMode:Xf,AdditiveBlending:Jh,AlphaFormat:_0,AlwaysDepth:i0,AlwaysStencilFunc:O0,AmbientLight:Dv,AmbientLightProbe:Hb,AnimationClip:va,AnimationLoader:Pb,AnimationMixer:aT,AnimationObjectGroup:rT,AnimationUtils:Tb,ArcCurve:ov,ArrayCamera:j0,ArrowHelper:AT,Audio:kv,AudioAnalyser:Zb,AudioContext:xd,AudioListener:Xb,AudioLoader:Bb,AxesHelper:CT,BackSide:Fn,BasicDepthPacking:D0,BasicShadowMap:ty,Bone:nd,BooleanKeyframeTrack:xs,Box2:dT,Box3:ms,Box3Helper:TT,BoxBufferGeometry:kT,BoxGeometry:Cr,BoxHelper:bT,BufferAttribute:Pt,BufferGeometry:ct,BufferGeometryLoader:Fv,ByteType:m0,Cache:ds,Camera:Sa,CameraHelper:wT,CanvasTexture:jw,CapsuleBufferGeometry:UT,CapsuleGeometry:ba,CatmullRomCurve3:av,CineonToneMapping:d0,CircleBufferGeometry:BT,CircleGeometry:Ta,ClampToEdgeWrapping:Sn,Clock:yd,Color:De,ColorKeyframeTrack:md,ColorManagement:ei,CompressedTexture:sv,CompressedTextureLoader:Lb,ConeBufferGeometry:VT,ConeGeometry:Ea,CubeCamera:V0,CubeReflectionMapping:Mr,CubeRefractionMapping:Sr,CubeTexture:wa,CubeTextureLoader:Rb,CubeUVReflectionMapping:ho,CubicBezierCurve:sd,CubicBezierCurve3:lv,CubicInterpolant:Tv,CullFaceBack:jh,CullFaceFront:Gg,CullFaceFrontBack:ey,CullFaceNone:Hg,Curve:pi,CurvePath:uv,CustomBlending:Wg,CustomToneMapping:p0,CylinderBufferGeometry:HT,CylinderGeometry:vs,Cylindrical:fT,Data3DTexture:Gc,DataArrayTexture:_a,DataTexture:oo,DataTexture2DArray:OT,DataTexture3D:FT,DataTextureLoader:Ib,DataUtils:DT,DecrementStencilOp:dy,DecrementWrapStencilOp:my,DefaultLoadingManager:Cv,DepthFormat:yr,DepthStencilFormat:hs,DepthTexture:J0,DirectionalLight:Iv,DirectionalLightHelper:ST,DiscreteInterpolant:Ev,DodecahedronBufferGeometry:GT,DodecahedronGeometry:Aa,DoubleSide:Xi,DstAlphaFactor:Qg,DstColorFactor:$g,DynamicCopyUsage:Ly,DynamicDrawUsage:by,DynamicReadUsage:Ay,EdgesGeometry:hv,EllipseCurve:Jc,EqualDepth:s0,EqualStencilFunc:yy,EquirectangularReflectionMapping:ta,EquirectangularRefractionMapping:na,Euler:fo,EventDispatcher:Ai,ExtrudeBufferGeometry:WT,ExtrudeGeometry:Ca,FileLoader:Ji,Float16BufferAttribute:h_,Float32BufferAttribute:Fe,Float64BufferAttribute:f_,FloatType:qi,Fog:Yc,FogExp2:qc,FramebufferTexture:Zw,FrontSide:us,Frustum:Wc,GLBufferAttribute:hT,GLSL1:Iy,GLSL3:wf,GreaterDepth:a0,GreaterEqualDepth:o0,GreaterEqualStencilFunc:wy,GreaterStencilFunc:My,GridHelper:_T,Group:ro,HalfFloatType:ao,HemisphereLight:Pv,HemisphereLightHelper:yT,HemisphereLightProbe:Vb,IcosahedronBufferGeometry:XT,IcosahedronGeometry:Pa,ImageBitmapLoader:Ub,ImageLoader:xa,ImageUtils:Yf,ImmediateRenderObject:zT,IncrementStencilOp:fy,IncrementWrapStencilOp:py,InstancedBufferAttribute:co,InstancedBufferGeometry:Ov,InstancedInterleavedBuffer:uT,InstancedMesh:nv,Int16BufferAttribute:c_,Int32BufferAttribute:u_,Int8BufferAttribute:o_,IntType:v0,InterleavedBuffer:Zc,InterleavedBufferAttribute:fs,Interpolant:Oa,InterpolateDiscrete:sa,InterpolateLinear:oa,InterpolateSmooth:Cc,InvertStencilOp:gy,KeepStencilOp:Pc,KeyframeTrack:mi,LOD:ev,LatheBufferGeometry:qT,LatheGeometry:go,Layers:ls,LessDepth:r0,LessEqualDepth:Ic,LessEqualStencilFunc:_y,LessStencilFunc:xy,Light:Pr,LightProbe:$c,Line:br,Line3:pT,LineBasicMaterial:wn,LineCurve:Qc,LineCurve3:cv,LineDashedMaterial:wv,LineLoop:iv,LineSegments:Ci,LinearEncoding:ji,LinearFilter:Xt,LinearInterpolant:pd,LinearMipMapLinearFilter:sy,LinearMipMapNearestFilter:ry,LinearMipmapLinearFilter:ps,LinearMipmapNearestFilter:Gf,LinearSRGBColorSpace:xr,LinearToneMapping:h0,Loader:Un,LoaderUtils:Rf,LoadingManager:gd,LoopOnce:L0,LoopPingPong:I0,LoopRepeat:R0,LuminanceAlphaFormat:w0,LuminanceFormat:S0,MOUSE:Zr,Material:un,MaterialLoader:eu,MathUtils:qy,Matrix3:Ln,Matrix4:ot,MaxEquation:ef,Mesh:cn,MeshBasicMaterial:Ar,MeshDepthMaterial:Qf,MeshDistanceMaterial:Kf,MeshLambertMaterial:Mv,MeshMatcapMaterial:Sv,MeshNormalMaterial:_v,MeshPhongMaterial:xv,MeshPhysicalMaterial:hd,MeshStandardMaterial:ud,MeshToonMaterial:yv,MinEquation:$h,MirroredRepeatWrapping:ra,MixOperation:c0,MultiplyBlending:Kh,MultiplyOperation:ya,NearestFilter:Jt,NearestMipMapLinearFilter:iy,NearestMipMapNearestFilter:ny,NearestMipmapLinearFilter:zc,NearestMipmapNearestFilter:Dc,NeverDepth:n0,NeverStencilFunc:vy,NoBlending:Zi,NoColorSpace:cy,NoToneMapping:di,NormalAnimationBlendMode:Hc,NormalBlending:rs,NotEqualDepth:l0,NotEqualStencilFunc:Sy,NumberKeyframeTrack:ma,Object3D:St,ObjectLoader:Fb,ObjectSpaceNormalMap:N0,OctahedronBufferGeometry:YT,OctahedronGeometry:vo,OneFactor:Zg,OneMinusDstAlphaFactor:Kg,OneMinusDstColorFactor:e0,OneMinusSrcAlphaFactor:Vf,OneMinusSrcColorFactor:Jg,OrthographicCamera:_r,PCFShadowMap:kf,PCFSoftShadowMap:Uf,PMREMGenerator:Tf,Path:ha,PerspectiveCamera:Ot,Plane:gr,PlaneBufferGeometry:ZT,PlaneGeometry:po,PlaneHelper:ET,PointLight:Rv,PointLightHelper:vT,Points:rv,PointsMaterial:id,PolarGridHelper:MT,PolyhedronBufferGeometry:jT,PolyhedronGeometry:Qi,PositionalAudio:Yb,PropertyBinding:vt,PropertyMixer:Uv,QuadraticBezierCurve:od,QuadraticBezierCurve3:ad,Quaternion:vn,QuaternionKeyframeTrack:yo,QuaternionLinearInterpolant:Av,REVISION:Bc,RGBADepthPacking:z0,RGBAFormat:ii,RGBAIntegerFormat:C0,RGBA_ASTC_10x10_Format:yf,RGBA_ASTC_10x5_Format:gf,RGBA_ASTC_10x6_Format:vf,RGBA_ASTC_10x8_Format:xf,RGBA_ASTC_12x10_Format:_f,RGBA_ASTC_12x12_Format:Mf,RGBA_ASTC_4x4_Format:lf,RGBA_ASTC_5x4_Format:cf,RGBA_ASTC_5x5_Format:uf,RGBA_ASTC_6x5_Format:hf,RGBA_ASTC_6x6_Format:ff,RGBA_ASTC_8x5_Format:df,RGBA_ASTC_8x6_Format:pf,RGBA_ASTC_8x8_Format:mf,RGBA_BPTC_Format:Sf,RGBA_ETC2_EAC_Format:af,RGBA_PVRTC_2BPPV1_Format:sf,RGBA_PVRTC_4BPPV1_Format:rf,RGBA_S3TC_DXT1_Format:Tc,RGBA_S3TC_DXT3_Format:Ec,RGBA_S3TC_DXT5_Format:Ac,RGBFormat:M0,RGB_ETC1_Format:P0,RGB_ETC2_Format:of,RGB_PVRTC_2BPPV1_Format:nf,RGB_PVRTC_4BPPV1_Format:tf,RGB_S3TC_DXT1_Format:bc,RGFormat:E0,RGIntegerFormat:A0,RawShaderMaterial:vv,Ray:Ma,Raycaster:Bv,RectAreaLight:zv,RedFormat:b0,RedIntegerFormat:T0,ReinhardToneMapping:f0,RepeatWrapping:ia,ReplaceStencilOp:hy,ReverseSubtractEquation:qg,RingBufferGeometry:JT,RingGeometry:La,SRGBColorSpace:bi,Scene:ed,ShaderChunk:ht,ShaderLib:fi,ShaderMaterial:Ei,ShadowMaterial:gv,Shape:cs,ShapeBufferGeometry:QT,ShapeGeometry:Ra,ShapePath:PT,ShapeUtils:Ti,ShortType:g0,Skeleton:jc,SkeletonHelper:gT,SkinnedMesh:tv,Source:ts,Sphere:gs,SphereBufferGeometry:KT,SphereGeometry:xo,Spherical:Df,SphericalHarmonics3:Nv,SplineCurve:ld,SpotLight:Lv,SpotLightHelper:mT,Sprite:$0,SpriteMaterial:td,SrcAlphaFactor:Bf,SrcAlphaSaturateFactor:t0,SrcColorFactor:jg,StaticCopyUsage:Py,StaticDrawUsage:la,StaticReadUsage:Ey,StereoCamera:Gb,StreamCopyUsage:Ry,StreamDrawUsage:Ty,StreamReadUsage:Cy,StringKeyframeTrack:ys,SubtractEquation:Xg,SubtractiveBlending:Qh,TOUCH:jr,TangentSpaceNormalMap:Er,TetrahedronBufferGeometry:$T,TetrahedronGeometry:Ia,Texture:Qt,TextureLoader:Db,TorusBufferGeometry:eE,TorusGeometry:Da,TorusKnotBufferGeometry:tE,TorusKnotGeometry:za,Triangle:ni,TriangleFanDrawMode:ly,TriangleStripDrawMode:ay,TrianglesDrawMode:oy,TubeBufferGeometry:nE,TubeGeometry:Na,UVMapping:Vc,Uint16BufferAttribute:Zf,Uint32BufferAttribute:jf,Uint8BufferAttribute:a_,Uint8ClampedBufferAttribute:l_,Uniform:Sd,UniformsGroup:cT,UniformsLib:we,UniformsUtils:B0,UnsignedByteType:wr,UnsignedInt248Type:ss,UnsignedIntType:vr,UnsignedShort4444Type:x0,UnsignedShort5551Type:y0,UnsignedShortType:Wf,VSMShadowMap:to,Vector2:fe,Vector3:I,Vector4:Tt,VectorKeyframeTrack:ga,VideoTexture:Yw,WebGL1Renderer:Q0,WebGL3DRenderTarget:Jy,WebGLArrayRenderTarget:jy,WebGLCubeRenderTarget:H0,WebGLMultipleRenderTargets:Qy,WebGLMultisampleRenderTarget:NT,WebGLRenderTarget:ri,WebGLRenderer:$f,WebGLUtils:Z0,WireframeGeometry:mv,WrapAroundEnding:aa,ZeroCurvatureEnding:$r,ZeroFactor:Yg,ZeroSlopeEnding:es,ZeroStencilOp:uy,_SRGBAFormat:Nc,sRGBEncoding:Lt},Symbol.toStringTag,{value:"Module"}));var is={exports:{}},_s={};/**
 * @license React
 * react-reconciler-constants.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */_s.ConcurrentRoot=1;_s.ContinuousEventPriority=4;_s.DefaultEventPriority=16;_s.DiscreteEventPriority=1;_s.IdleEventPriority=536870912;_s.LegacyRoot=0;(function(l){l.exports=_s})(is);function iE(l){let e;const t=new Set,n=(h,d)=>{const p=typeof h=="function"?h(e):h;if(p!==e){const m=e;e=d?p:Object.assign({},e,p),t.forEach(v=>v(e,m))}},i=()=>e,r=(h,d=i,p=Object.is)=>{console.warn("[DEPRECATED] Please use `subscribeWithSelector` middleware");let m=d(e);function v(){const y=d(e);if(!p(m,y)){const x=m;h(m=y,x)}}return t.add(v),()=>t.delete(v)},u={setState:n,getState:i,subscribe:(h,d,p)=>d||p?r(h,d,p):(t.add(h),()=>t.delete(h)),destroy:()=>t.clear()};return e=l(n,i,u),u}const rE=typeof window>"u"||!window.navigator||/ServerSideRendering|^Deno\//.test(window.navigator.userAgent),Cg=rE?Ne.exports.useEffect:Ne.exports.useLayoutEffect;function sE(l){const e=typeof l=="function"?iE(l):l,t=(n=e.getState,i=Object.is)=>{const[,r]=Ne.exports.useReducer(_=>_+1,0),a=e.getState(),c=Ne.exports.useRef(a),u=Ne.exports.useRef(n),h=Ne.exports.useRef(i),d=Ne.exports.useRef(!1),p=Ne.exports.useRef();p.current===void 0&&(p.current=n(a));let m,v=!1;(c.current!==a||u.current!==n||h.current!==i||d.current)&&(m=n(a),v=!i(p.current,m)),Cg(()=>{v&&(p.current=m),c.current=a,u.current=n,h.current=i,d.current=!1});const y=Ne.exports.useRef(a);Cg(()=>{const _=()=>{try{const w=e.getState(),T=u.current(w);h.current(p.current,T)||(c.current=w,p.current=T,r())}catch{d.current=!0,r()}},S=e.subscribe(_);return e.getState()!==y.current&&_(),S},[]);const x=v?m:p.current;return Ne.exports.useDebugValue(x),x};return Object.assign(t,e),t[Symbol.iterator]=function(){console.warn("[useStore, api] = create() is deprecated and will be removed in v4");const n=[t,e];return{next(){const i=n.length<=0;return{value:n.shift(),done:i}}}},t}var Hv={exports:{}},kc={exports:{}},Gv={};/**
 * @license React
 * scheduler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */(function(l){function e(V,k){var U=V.length;V.push(k);e:for(;0<U;){var le=U-1>>>1,re=V[le];if(0<i(re,k))V[le]=k,V[U]=re,U=le;else break e}}function t(V){return V.length===0?null:V[0]}function n(V){if(V.length===0)return null;var k=V[0],U=V.pop();if(U!==k){V[0]=U;e:for(var le=0,re=V.length,me=re>>>1;le<me;){var Ee=2*(le+1)-1,Ve=V[Ee],oe=Ee+1,je=V[oe];if(0>i(Ve,U))oe<re&&0>i(je,Ve)?(V[le]=je,V[oe]=U,le=oe):(V[le]=Ve,V[Ee]=U,le=Ee);else if(oe<re&&0>i(je,U))V[le]=je,V[oe]=U,le=oe;else break e}}return k}function i(V,k){var U=V.sortIndex-k.sortIndex;return U!==0?U:V.id-k.id}if(typeof performance=="object"&&typeof performance.now=="function"){var r=performance;l.unstable_now=function(){return r.now()}}else{var a=Date,c=a.now();l.unstable_now=function(){return a.now()-c}}var u=[],h=[],d=1,p=null,m=3,v=!1,y=!1,x=!1,_=typeof setTimeout=="function"?setTimeout:null,S=typeof clearTimeout=="function"?clearTimeout:null,w=typeof setImmediate<"u"?setImmediate:null;typeof navigator<"u"&&navigator.scheduling!==void 0&&navigator.scheduling.isInputPending!==void 0&&navigator.scheduling.isInputPending.bind(navigator.scheduling);function T(V){for(var k=t(h);k!==null;){if(k.callback===null)n(h);else if(k.startTime<=V)n(h),k.sortIndex=k.expirationTime,e(u,k);else break;k=t(h)}}function E(V){if(x=!1,T(V),!y)if(t(u)!==null)y=!0,te(C);else{var k=t(h);k!==null&&pe(E,k.startTime-V)}}function C(V,k){y=!1,x&&(x=!1,S(A),A=-1),v=!0;var U=m;try{for(T(k),p=t(u);p!==null&&(!(p.expirationTime>k)||V&&!q());){var le=p.callback;if(typeof le=="function"){p.callback=null,m=p.priorityLevel;var re=le(p.expirationTime<=k);k=l.unstable_now(),typeof re=="function"?p.callback=re:p===t(u)&&n(u),T(k)}else n(u);p=t(u)}if(p!==null)var me=!0;else{var Ee=t(h);Ee!==null&&pe(E,Ee.startTime-k),me=!1}return me}finally{p=null,m=U,v=!1}}var P=!1,N=null,A=-1,L=5,F=-1;function q(){return!(l.unstable_now()-F<L)}function se(){if(N!==null){var V=l.unstable_now();F=V;var k=!0;try{k=N(!0,V)}finally{k?J():(P=!1,N=null)}}else P=!1}var J;if(typeof w=="function")J=function(){w(se)};else if(typeof MessageChannel<"u"){var W=new MessageChannel,$=W.port2;W.port1.onmessage=se,J=function(){$.postMessage(null)}}else J=function(){_(se,0)};function te(V){N=V,P||(P=!0,J())}function pe(V,k){A=_(function(){V(l.unstable_now())},k)}l.unstable_IdlePriority=5,l.unstable_ImmediatePriority=1,l.unstable_LowPriority=4,l.unstable_NormalPriority=3,l.unstable_Profiling=null,l.unstable_UserBlockingPriority=2,l.unstable_cancelCallback=function(V){V.callback=null},l.unstable_continueExecution=function(){y||v||(y=!0,te(C))},l.unstable_forceFrameRate=function(V){0>V||125<V?console.error("forceFrameRate takes a positive int between 0 and 125, forcing frame rates higher than 125 fps is not supported"):L=0<V?Math.floor(1e3/V):5},l.unstable_getCurrentPriorityLevel=function(){return m},l.unstable_getFirstCallbackNode=function(){return t(u)},l.unstable_next=function(V){switch(m){case 1:case 2:case 3:var k=3;break;default:k=m}var U=m;m=k;try{return V()}finally{m=U}},l.unstable_pauseExecution=function(){},l.unstable_requestPaint=function(){},l.unstable_runWithPriority=function(V,k){switch(V){case 1:case 2:case 3:case 4:case 5:break;default:V=3}var U=m;m=V;try{return k()}finally{m=U}},l.unstable_scheduleCallback=function(V,k,U){var le=l.unstable_now();switch(typeof U=="object"&&U!==null?(U=U.delay,U=typeof U=="number"&&0<U?le+U:le):U=le,V){case 1:var re=-1;break;case 2:re=250;break;case 5:re=1073741823;break;case 4:re=1e4;break;default:re=5e3}return re=U+re,V={id:d++,callback:k,priorityLevel:V,startTime:U,expirationTime:re,sortIndex:-1},U>le?(V.sortIndex=U,e(h,V),t(u)===null&&V===t(h)&&(x?(S(A),A=-1):x=!0,pe(E,U-le))):(V.sortIndex=re,e(u,V),y||v||(y=!0,te(C))),V},l.unstable_shouldYield=q,l.unstable_wrapCallback=function(V){var k=m;return function(){var U=m;m=k;try{return V.apply(this,arguments)}finally{m=U}}}})(Gv);(function(l){l.exports=Gv})(kc);/**
 * @license React
 * react-reconciler.production.min.js
 *
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 */var oE=function(e){var t={},n=Ne.exports,i=kc.exports,r=Object.assign;function a(s){for(var o="https://reactjs.org/docs/error-decoder.html?invariant="+s,f=1;f<arguments.length;f++)o+="&args[]="+encodeURIComponent(arguments[f]);return"Minified React error #"+s+"; visit "+o+" for the full message or use the non-minified dev environment for full errors and additional helpful warnings."}var c=n.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED,u=Symbol.for("react.element"),h=Symbol.for("react.portal"),d=Symbol.for("react.fragment"),p=Symbol.for("react.strict_mode"),m=Symbol.for("react.profiler"),v=Symbol.for("react.provider"),y=Symbol.for("react.context"),x=Symbol.for("react.forward_ref"),_=Symbol.for("react.suspense"),S=Symbol.for("react.suspense_list"),w=Symbol.for("react.memo"),T=Symbol.for("react.lazy"),E=Symbol.for("react.offscreen"),C=Symbol.iterator;function P(s){return s===null||typeof s!="object"?null:(s=C&&s[C]||s["@@iterator"],typeof s=="function"?s:null)}function N(s){if(s==null)return null;if(typeof s=="function")return s.displayName||s.name||null;if(typeof s=="string")return s;switch(s){case d:return"Fragment";case h:return"Portal";case m:return"Profiler";case p:return"StrictMode";case _:return"Suspense";case S:return"SuspenseList"}if(typeof s=="object")switch(s.$$typeof){case y:return(s.displayName||"Context")+".Consumer";case v:return(s._context.displayName||"Context")+".Provider";case x:var o=s.render;return s=s.displayName,s||(s=o.displayName||o.name||"",s=s!==""?"ForwardRef("+s+")":"ForwardRef"),s;case w:return o=s.displayName||null,o!==null?o:N(s.type)||"Memo";case T:o=s._payload,s=s._init;try{return N(s(o))}catch{}}return null}function A(s){var o=s.type;switch(s.tag){case 24:return"Cache";case 9:return(o.displayName||"Context")+".Consumer";case 10:return(o._context.displayName||"Context")+".Provider";case 18:return"DehydratedFragment";case 11:return s=o.render,s=s.displayName||s.name||"",o.displayName||(s!==""?"ForwardRef("+s+")":"ForwardRef");case 7:return"Fragment";case 5:return o;case 4:return"Portal";case 3:return"Root";case 6:return"Text";case 16:return N(o);case 8:return o===p?"StrictMode":"Mode";case 22:return"Offscreen";case 12:return"Profiler";case 21:return"Scope";case 13:return"Suspense";case 19:return"SuspenseList";case 25:return"TracingMarker";case 1:case 0:case 17:case 2:case 14:case 15:if(typeof o=="function")return o.displayName||o.name||null;if(typeof o=="string")return o}return null}function L(s){var o=s,f=s;if(s.alternate)for(;o.return;)o=o.return;else{s=o;do o=s,(o.flags&4098)!==0&&(f=o.return),s=o.return;while(s)}return o.tag===3?f:null}function F(s){if(L(s)!==s)throw Error(a(188))}function q(s){var o=s.alternate;if(!o){if(o=L(s),o===null)throw Error(a(188));return o!==s?null:s}for(var f=s,g=o;;){var M=f.return;if(M===null)break;var b=M.alternate;if(b===null){if(g=M.return,g!==null){f=g;continue}break}if(M.child===b.child){for(b=M.child;b;){if(b===f)return F(M),s;if(b===g)return F(M),o;b=b.sibling}throw Error(a(188))}if(f.return!==g.return)f=M,g=b;else{for(var z=!1,G=M.child;G;){if(G===f){z=!0,f=M,g=b;break}if(G===g){z=!0,g=M,f=b;break}G=G.sibling}if(!z){for(G=b.child;G;){if(G===f){z=!0,f=b,g=M;break}if(G===g){z=!0,g=b,f=M;break}G=G.sibling}if(!z)throw Error(a(189))}}if(f.alternate!==g)throw Error(a(190))}if(f.tag!==3)throw Error(a(188));return f.stateNode.current===f?s:o}function se(s){return s=q(s),s!==null?J(s):null}function J(s){if(s.tag===5||s.tag===6)return s;for(s=s.child;s!==null;){var o=J(s);if(o!==null)return o;s=s.sibling}return null}function W(s){if(s.tag===5||s.tag===6)return s;for(s=s.child;s!==null;){if(s.tag!==4){var o=W(s);if(o!==null)return o}s=s.sibling}return null}var $=Array.isArray,te=e.getPublicInstance,pe=e.getRootHostContext,V=e.getChildHostContext,k=e.prepareForCommit,U=e.resetAfterCommit,le=e.createInstance,re=e.appendInitialChild,me=e.finalizeInitialChildren,Ee=e.prepareUpdate,Ve=e.shouldSetTextContent,oe=e.createTextInstance,je=e.scheduleTimeout,Ge=e.cancelTimeout,Ye=e.noTimeout,be=e.isPrimaryRenderer,Ze=e.supportsMutation,he=e.supportsPersistence,ne=e.supportsHydration,_e=e.getInstanceFromNode,Oe=e.preparePortalMount,Te=e.getCurrentEventPriority,$e=e.detachDeletedInstance,We=e.supportsMicrotasks,He=e.scheduleMicrotask,mt=e.supportsTestSelectors,wt=e.findFiberRoot,O=e.getBoundingRect,R=e.getTextContent,Q=e.isHiddenSubtree,ge=e.matchAccessibilityRole,Se=e.setFocusIfFocusable,Ae=e.setupIntersectionObserver,Je=e.appendChild,Ce=e.appendChildToContainer,de=e.commitTextUpdate,ke=e.commitMount,B=e.commitUpdate,ee=e.insertBefore,ve=e.insertInContainerBefore,Le=e.removeChild,Qe=e.removeChildFromContainer,H=e.resetTextContent,Ie=e.hideInstance,Me=e.hideTextInstance,ce=e.unhideInstance,xe=e.unhideTextInstance,Ke=e.clearContainer,Et=e.cloneInstance,Rt=e.createContainerChildSet,si=e.appendChildToContainerChildSet,It=e.finalizeContainerChildren,Bn=e.replaceContainerChildren,xn=e.cloneHiddenInstance,ka=e.cloneHiddenTextInstance,Ms=e.canHydrateInstance,Ua=e.canHydrateTextInstance,tu=e.canHydrateSuspenseInstance,Ba=e.isSuspenseInstancePending,_o=e.isSuspenseInstanceFallback,D=e.registerSuspenseInstanceRetry,Z=e.getNextHydratableSibling,ae=e.getFirstHydratableChild,Y=e.getFirstHydratableChildWithinContainer,ue=e.getFirstHydratableChildWithinSuspenseInstance,Xe=e.hydrateInstance,et=e.hydrateTextInstance,at=e.hydrateSuspenseInstance,tt=e.getNextHydratableInstanceAfterSuspenseInstance,xt=e.commitHydratedContainer,dt=e.commitHydratedSuspenseInstance,pt=e.clearSuspenseBoundary,Dt=e.clearSuspenseBoundaryFromContainer,Pi=e.shouldDeleteUnhydratedTailInstances,Ki=e.didNotMatchHydratedContainerTextInstance,$i=e.didNotMatchHydratedTextInstance,bn;function ft(s){if(bn===void 0)try{throw Error()}catch(f){var o=f.stack.trim().match(/\n( *(at )?)/);bn=o&&o[1]||""}return`
`+bn+s}var gi=!1;function zt(s,o){if(!s||gi)return"";gi=!0;var f=Error.prepareStackTrace;Error.prepareStackTrace=void 0;try{if(o)if(o=function(){throw Error()},Object.defineProperty(o.prototype,"props",{set:function(){throw Error()}}),typeof Reflect=="object"&&Reflect.construct){try{Reflect.construct(o,[])}catch(ye){var g=ye}Reflect.construct(s,[],o)}else{try{o.call()}catch(ye){g=ye}s.call(o.prototype)}else{try{throw Error()}catch(ye){g=ye}s()}}catch(ye){if(ye&&g&&typeof ye.stack=="string"){for(var M=ye.stack.split(`
`),b=g.stack.split(`
`),z=M.length-1,G=b.length-1;1<=z&&0<=G&&M[z]!==b[G];)G--;for(;1<=z&&0<=G;z--,G--)if(M[z]!==b[G]){if(z!==1||G!==1)do if(z--,G--,0>G||M[z]!==b[G]){var ie=`
`+M[z].replace(" at new "," at ");return s.displayName&&ie.includes("<anonymous>")&&(ie=ie.replace("<anonymous>",s.displayName)),ie}while(1<=z&&0<=G);break}}}finally{gi=!1,Error.prepareStackTrace=f}return(s=s?s.displayName||s.name:"")?ft(s):""}var Tn=Object.prototype.hasOwnProperty,Vn=[],Hn=-1;function Gn(s){return{current:s}}function st(s){0>Hn||(s.current=Vn[Hn],Vn[Hn]=null,Hn--)}function gt(s,o){Hn++,Vn[Hn]=s.current,s.current=o}var Wn={},bt=Gn(Wn),nn=Gn(!1),Li=Wn;function Ri(s,o){var f=s.type.contextTypes;if(!f)return Wn;var g=s.stateNode;if(g&&g.__reactInternalMemoizedUnmaskedChildContext===o)return g.__reactInternalMemoizedMaskedChildContext;var M={},b;for(b in f)M[b]=o[b];return g&&(s=s.stateNode,s.__reactInternalMemoizedUnmaskedChildContext=o,s.__reactInternalMemoizedMaskedChildContext=M),M}function En(s){return s=s.childContextTypes,s!=null}function Va(){st(nn),st(bt)}function Td(s,o,f){if(bt.current!==Wn)throw Error(a(168));gt(bt,o),gt(nn,f)}function Ed(s,o,f){var g=s.stateNode;if(o=o.childContextTypes,typeof g.getChildContext!="function")return f;g=g.getChildContext();for(var M in g)if(!(M in o))throw Error(a(108,A(s)||"Unknown",M));return r({},f,g)}function Ha(s){return s=(s=s.stateNode)&&s.__reactInternalMemoizedMergedChildContext||Wn,Li=bt.current,gt(bt,s),gt(nn,nn.current),!0}function Ad(s,o,f){var g=s.stateNode;if(!g)throw Error(a(169));f?(s=Ed(s,o,Li),g.__reactInternalMemoizedMergedChildContext=s,st(nn),st(bt),gt(bt,s)):st(nn),gt(nn,f)}var oi=Math.clz32?Math.clz32:ax,sx=Math.log,ox=Math.LN2;function ax(s){return s>>>=0,s===0?32:31-(sx(s)/ox|0)|0}var Ga=64,Wa=4194304;function Mo(s){switch(s&-s){case 1:return 1;case 2:return 2;case 4:return 4;case 8:return 8;case 16:return 16;case 32:return 32;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return s&4194240;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return s&130023424;case 134217728:return 134217728;case 268435456:return 268435456;case 536870912:return 536870912;case 1073741824:return 1073741824;default:return s}}function Xa(s,o){var f=s.pendingLanes;if(f===0)return 0;var g=0,M=s.suspendedLanes,b=s.pingedLanes,z=f&268435455;if(z!==0){var G=z&~M;G!==0?g=Mo(G):(b&=z,b!==0&&(g=Mo(b)))}else z=f&~M,z!==0?g=Mo(z):b!==0&&(g=Mo(b));if(g===0)return 0;if(o!==0&&o!==g&&(o&M)===0&&(M=g&-g,b=o&-o,M>=b||M===16&&(b&4194240)!==0))return o;if((g&4)!==0&&(g|=f&16),o=s.entangledLanes,o!==0)for(s=s.entanglements,o&=g;0<o;)f=31-oi(o),M=1<<f,g|=s[f],o&=~M;return g}function lx(s,o){switch(s){case 1:case 2:case 4:return o+250;case 8:case 16:case 32:case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:return o+5e3;case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:return-1;case 134217728:case 268435456:case 536870912:case 1073741824:return-1;default:return-1}}function cx(s,o){for(var f=s.suspendedLanes,g=s.pingedLanes,M=s.expirationTimes,b=s.pendingLanes;0<b;){var z=31-oi(b),G=1<<z,ie=M[z];ie===-1?((G&f)===0||(G&g)!==0)&&(M[z]=lx(G,o)):ie<=o&&(s.expiredLanes|=G),b&=~G}}function nu(s){return s=s.pendingLanes&-1073741825,s!==0?s:s&1073741824?1073741824:0}function iu(s){for(var o=[],f=0;31>f;f++)o.push(s);return o}function So(s,o,f){s.pendingLanes|=o,o!==536870912&&(s.suspendedLanes=0,s.pingedLanes=0),s=s.eventTimes,o=31-oi(o),s[o]=f}function ux(s,o){var f=s.pendingLanes&~o;s.pendingLanes=o,s.suspendedLanes=0,s.pingedLanes=0,s.expiredLanes&=o,s.mutableReadLanes&=o,s.entangledLanes&=o,o=s.entanglements;var g=s.eventTimes;for(s=s.expirationTimes;0<f;){var M=31-oi(f),b=1<<M;o[M]=0,g[M]=-1,s[M]=-1,f&=~b}}function ru(s,o){var f=s.entangledLanes|=o;for(s=s.entanglements;f;){var g=31-oi(f),M=1<<g;M&o|s[g]&o&&(s[g]|=o),f&=~M}}var yt=0;function Cd(s){return s&=-s,1<s?4<s?(s&268435455)!==0?16:536870912:4:1}var su=i.unstable_scheduleCallback,Pd=i.unstable_cancelCallback,hx=i.unstable_shouldYield,fx=i.unstable_requestPaint,rn=i.unstable_now,ou=i.unstable_ImmediatePriority,dx=i.unstable_UserBlockingPriority,au=i.unstable_NormalPriority,px=i.unstable_IdlePriority,qa=null,vi=null;function mx(s){if(vi&&typeof vi.onCommitFiberRoot=="function")try{vi.onCommitFiberRoot(qa,s,void 0,(s.current.flags&128)===128)}catch{}}function gx(s,o){return s===o&&(s!==0||1/s===1/o)||s!==s&&o!==o}var xi=typeof Object.is=="function"?Object.is:gx,Ii=null,Ya=!1,lu=!1;function Ld(s){Ii===null?Ii=[s]:Ii.push(s)}function vx(s){Ya=!0,Ld(s)}function yi(){if(!lu&&Ii!==null){lu=!0;var s=0,o=yt;try{var f=Ii;for(yt=1;s<f.length;s++){var g=f[s];do g=g(!0);while(g!==null)}Ii=null,Ya=!1}catch(M){throw Ii!==null&&(Ii=Ii.slice(s+1)),su(ou,yi),M}finally{yt=o,lu=!1}}return null}var xx=c.ReactCurrentBatchConfig;function Za(s,o){if(xi(s,o))return!0;if(typeof s!="object"||s===null||typeof o!="object"||o===null)return!1;var f=Object.keys(s),g=Object.keys(o);if(f.length!==g.length)return!1;for(g=0;g<f.length;g++){var M=f[g];if(!Tn.call(o,M)||!xi(s[M],o[M]))return!1}return!0}function yx(s){switch(s.tag){case 5:return ft(s.type);case 16:return ft("Lazy");case 13:return ft("Suspense");case 19:return ft("SuspenseList");case 0:case 2:case 15:return s=zt(s.type,!1),s;case 11:return s=zt(s.type.render,!1),s;case 1:return s=zt(s.type,!0),s;default:return""}}function ai(s,o){if(s&&s.defaultProps){o=r({},o),s=s.defaultProps;for(var f in s)o[f]===void 0&&(o[f]=s[f]);return o}return o}var ja=Gn(null),Ja=null,Ss=null,cu=null;function uu(){cu=Ss=Ja=null}function Rd(s,o,f){be?(gt(ja,o._currentValue),o._currentValue=f):(gt(ja,o._currentValue2),o._currentValue2=f)}function hu(s){var o=ja.current;st(ja),be?s._currentValue=o:s._currentValue2=o}function fu(s,o,f){for(;s!==null;){var g=s.alternate;if((s.childLanes&o)!==o?(s.childLanes|=o,g!==null&&(g.childLanes|=o)):g!==null&&(g.childLanes&o)!==o&&(g.childLanes|=o),s===f)break;s=s.return}}function ws(s,o){Ja=s,cu=Ss=null,s=s.dependencies,s!==null&&s.firstContext!==null&&((s.lanes&o)!==0&&(Dn=!0),s.firstContext=null)}function Xn(s){var o=be?s._currentValue:s._currentValue2;if(cu!==s)if(s={context:s,memoizedValue:o,next:null},Ss===null){if(Ja===null)throw Error(a(308));Ss=s,Ja.dependencies={lanes:0,firstContext:s}}else Ss=Ss.next=s;return o}var _i=null,er=!1;function du(s){s.updateQueue={baseState:s.memoizedState,firstBaseUpdate:null,lastBaseUpdate:null,shared:{pending:null,interleaved:null,lanes:0},effects:null}}function Id(s,o){s=s.updateQueue,o.updateQueue===s&&(o.updateQueue={baseState:s.baseState,firstBaseUpdate:s.firstBaseUpdate,lastBaseUpdate:s.lastBaseUpdate,shared:s.shared,effects:s.effects})}function Di(s,o){return{eventTime:s,lane:o,tag:0,payload:null,callback:null,next:null}}function tr(s,o){var f=s.updateQueue;f!==null&&(f=f.shared,Yt!==null&&(s.mode&1)!==0&&(ut&2)===0?(s=f.interleaved,s===null?(o.next=o,_i===null?_i=[f]:_i.push(f)):(o.next=s.next,s.next=o),f.interleaved=o):(s=f.pending,s===null?o.next=o:(o.next=s.next,s.next=o),f.pending=o))}function Qa(s,o,f){if(o=o.updateQueue,o!==null&&(o=o.shared,(f&4194240)!==0)){var g=o.lanes;g&=s.pendingLanes,f|=g,o.lanes=f,ru(s,f)}}function Dd(s,o){var f=s.updateQueue,g=s.alternate;if(g!==null&&(g=g.updateQueue,f===g)){var M=null,b=null;if(f=f.firstBaseUpdate,f!==null){do{var z={eventTime:f.eventTime,lane:f.lane,tag:f.tag,payload:f.payload,callback:f.callback,next:null};b===null?M=b=z:b=b.next=z,f=f.next}while(f!==null);b===null?M=b=o:b=b.next=o}else M=b=o;f={baseState:g.baseState,firstBaseUpdate:M,lastBaseUpdate:b,shared:g.shared,effects:g.effects},s.updateQueue=f;return}s=f.lastBaseUpdate,s===null?f.firstBaseUpdate=o:s.next=o,f.lastBaseUpdate=o}function Ka(s,o,f,g){var M=s.updateQueue;er=!1;var b=M.firstBaseUpdate,z=M.lastBaseUpdate,G=M.shared.pending;if(G!==null){M.shared.pending=null;var ie=G,ye=ie.next;ie.next=null,z===null?b=ye:z.next=ye,z=ie;var ze=s.alternate;ze!==null&&(ze=ze.updateQueue,G=ze.lastBaseUpdate,G!==z&&(G===null?ze.firstBaseUpdate=ye:G.next=ye,ze.lastBaseUpdate=ie))}if(b!==null){var nt=M.baseState;z=0,ze=ye=ie=null,G=b;do{var qe=G.lane,At=G.eventTime;if((g&qe)===qe){ze!==null&&(ze=ze.next={eventTime:At,lane:0,tag:G.tag,payload:G.payload,callback:G.callback,next:null});e:{var Be=s,pn=G;switch(qe=o,At=f,pn.tag){case 1:if(Be=pn.payload,typeof Be=="function"){nt=Be.call(At,nt,qe);break e}nt=Be;break e;case 3:Be.flags=Be.flags&-65537|128;case 0:if(Be=pn.payload,qe=typeof Be=="function"?Be.call(At,nt,qe):Be,qe==null)break e;nt=r({},nt,qe);break e;case 2:er=!0}}G.callback!==null&&G.lane!==0&&(s.flags|=64,qe=M.effects,qe===null?M.effects=[G]:qe.push(G))}else At={eventTime:At,lane:qe,tag:G.tag,payload:G.payload,callback:G.callback,next:null},ze===null?(ye=ze=At,ie=nt):ze=ze.next=At,z|=qe;if(G=G.next,G===null){if(G=M.shared.pending,G===null)break;qe=G,G=qe.next,qe.next=null,M.lastBaseUpdate=qe,M.shared.pending=null}}while(1);if(ze===null&&(ie=nt),M.baseState=ie,M.firstBaseUpdate=ye,M.lastBaseUpdate=ze,o=M.shared.interleaved,o!==null){M=o;do z|=M.lane,M=M.next;while(M!==o)}else b===null&&(M.shared.lanes=0);Is|=z,s.lanes=z,s.memoizedState=nt}}function zd(s,o,f){if(s=o.effects,o.effects=null,s!==null)for(o=0;o<s.length;o++){var g=s[o],M=g.callback;if(M!==null){if(g.callback=null,g=f,typeof M!="function")throw Error(a(191,M));M.call(g)}}}var Nd=new n.Component().refs;function pu(s,o,f,g){o=s.memoizedState,f=f(g,o),f=f==null?o:r({},o,f),s.memoizedState=f,s.lanes===0&&(s.updateQueue.baseState=f)}var $a={isMounted:function(s){return(s=s._reactInternals)?L(s)===s:!1},enqueueSetState:function(s,o,f){s=s._reactInternals;var g=_n(),M=rr(s),b=Di(g,M);b.payload=o,f!=null&&(b.callback=f),tr(s,b),o=Jn(s,M,g),o!==null&&Qa(o,s,M)},enqueueReplaceState:function(s,o,f){s=s._reactInternals;var g=_n(),M=rr(s),b=Di(g,M);b.tag=1,b.payload=o,f!=null&&(b.callback=f),tr(s,b),o=Jn(s,M,g),o!==null&&Qa(o,s,M)},enqueueForceUpdate:function(s,o){s=s._reactInternals;var f=_n(),g=rr(s),M=Di(f,g);M.tag=2,o!=null&&(M.callback=o),tr(s,M),o=Jn(s,g,f),o!==null&&Qa(o,s,g)}};function Od(s,o,f,g,M,b,z){return s=s.stateNode,typeof s.shouldComponentUpdate=="function"?s.shouldComponentUpdate(g,b,z):o.prototype&&o.prototype.isPureReactComponent?!Za(f,g)||!Za(M,b):!0}function Fd(s,o,f){var g=!1,M=Wn,b=o.contextType;return typeof b=="object"&&b!==null?b=Xn(b):(M=En(o)?Li:bt.current,g=o.contextTypes,b=(g=g!=null)?Ri(s,M):Wn),o=new o(f,b),s.memoizedState=o.state!==null&&o.state!==void 0?o.state:null,o.updater=$a,s.stateNode=o,o._reactInternals=s,g&&(s=s.stateNode,s.__reactInternalMemoizedUnmaskedChildContext=M,s.__reactInternalMemoizedMaskedChildContext=b),o}function kd(s,o,f,g){s=o.state,typeof o.componentWillReceiveProps=="function"&&o.componentWillReceiveProps(f,g),typeof o.UNSAFE_componentWillReceiveProps=="function"&&o.UNSAFE_componentWillReceiveProps(f,g),o.state!==s&&$a.enqueueReplaceState(o,o.state,null)}function mu(s,o,f,g){var M=s.stateNode;M.props=f,M.state=s.memoizedState,M.refs=Nd,du(s);var b=o.contextType;typeof b=="object"&&b!==null?M.context=Xn(b):(b=En(o)?Li:bt.current,M.context=Ri(s,b)),M.state=s.memoizedState,b=o.getDerivedStateFromProps,typeof b=="function"&&(pu(s,o,b,f),M.state=s.memoizedState),typeof o.getDerivedStateFromProps=="function"||typeof M.getSnapshotBeforeUpdate=="function"||typeof M.UNSAFE_componentWillMount!="function"&&typeof M.componentWillMount!="function"||(o=M.state,typeof M.componentWillMount=="function"&&M.componentWillMount(),typeof M.UNSAFE_componentWillMount=="function"&&M.UNSAFE_componentWillMount(),o!==M.state&&$a.enqueueReplaceState(M,M.state,null),Ka(s,f,M,g),M.state=s.memoizedState),typeof M.componentDidMount=="function"&&(s.flags|=4194308)}var bs=[],Ts=0,el=null,tl=0,qn=[],Yn=0,Lr=null,zi=1,Ni="";function Rr(s,o){bs[Ts++]=tl,bs[Ts++]=el,el=s,tl=o}function Ud(s,o,f){qn[Yn++]=zi,qn[Yn++]=Ni,qn[Yn++]=Lr,Lr=s;var g=zi;s=Ni;var M=32-oi(g)-1;g&=~(1<<M),f+=1;var b=32-oi(o)+M;if(30<b){var z=M-M%5;b=(g&(1<<z)-1).toString(32),g>>=z,M-=z,zi=1<<32-oi(o)+M|f<<M|g,Ni=b+s}else zi=1<<b|f<<M|g,Ni=s}function gu(s){s.return!==null&&(Rr(s,1),Ud(s,1,0))}function vu(s){for(;s===el;)el=bs[--Ts],bs[Ts]=null,tl=bs[--Ts],bs[Ts]=null;for(;s===Lr;)Lr=qn[--Yn],qn[Yn]=null,Ni=qn[--Yn],qn[Yn]=null,zi=qn[--Yn],qn[Yn]=null}var Rn=null,In=null,Nt=!1,wo=!1,li=null;function Bd(s,o){var f=Qn(5,null,null,0);f.elementType="DELETED",f.stateNode=o,f.return=s,o=s.deletions,o===null?(s.deletions=[f],s.flags|=16):o.push(f)}function Vd(s,o){switch(s.tag){case 5:return o=Ms(o,s.type,s.pendingProps),o!==null?(s.stateNode=o,Rn=s,In=ae(o),!0):!1;case 6:return o=Ua(o,s.pendingProps),o!==null?(s.stateNode=o,Rn=s,In=null,!0):!1;case 13:if(o=tu(o),o!==null){var f=Lr!==null?{id:zi,overflow:Ni}:null;return s.memoizedState={dehydrated:o,treeContext:f,retryLane:1073741824},f=Qn(18,null,null,0),f.stateNode=o,f.return=s,s.child=f,Rn=s,In=null,!0}return!1;default:return!1}}function xu(s){return(s.mode&1)!==0&&(s.flags&128)===0}function yu(s){if(Nt){var o=In;if(o){var f=o;if(!Vd(s,o)){if(xu(s))throw Error(a(418));o=Z(f);var g=Rn;o&&Vd(s,o)?Bd(g,f):(s.flags=s.flags&-4097|2,Nt=!1,Rn=s)}}else{if(xu(s))throw Error(a(418));s.flags=s.flags&-4097|2,Nt=!1,Rn=s}}}function Hd(s){for(s=s.return;s!==null&&s.tag!==5&&s.tag!==3&&s.tag!==13;)s=s.return;Rn=s}function bo(s){if(!ne||s!==Rn)return!1;if(!Nt)return Hd(s),Nt=!0,!1;if(s.tag!==3&&(s.tag!==5||Pi(s.type)&&!Ve(s.type,s.memoizedProps))){var o=In;if(o){if(xu(s)){for(s=In;s;)s=Z(s);throw Error(a(418))}for(;o;)Bd(s,o),o=Z(o)}}if(Hd(s),s.tag===13){if(!ne)throw Error(a(316));if(s=s.memoizedState,s=s!==null?s.dehydrated:null,!s)throw Error(a(317));In=tt(s)}else In=Rn?Z(s.stateNode):null;return!0}function Es(){ne&&(In=Rn=null,wo=Nt=!1)}function _u(s){li===null?li=[s]:li.push(s)}function To(s,o,f){if(s=f.ref,s!==null&&typeof s!="function"&&typeof s!="object"){if(f._owner){if(f=f._owner,f){if(f.tag!==1)throw Error(a(309));var g=f.stateNode}if(!g)throw Error(a(147,s));var M=g,b=""+s;return o!==null&&o.ref!==null&&typeof o.ref=="function"&&o.ref._stringRef===b?o.ref:(o=function(z){var G=M.refs;G===Nd&&(G=M.refs={}),z===null?delete G[b]:G[b]=z},o._stringRef=b,o)}if(typeof s!="string")throw Error(a(284));if(!f._owner)throw Error(a(290,s))}return s}function nl(s,o){throw s=Object.prototype.toString.call(o),Error(a(31,s==="[object Object]"?"object with keys {"+Object.keys(o).join(", ")+"}":s))}function Gd(s){var o=s._init;return o(s._payload)}function Wd(s){function o(j,X){if(s){var K=j.deletions;K===null?(j.deletions=[X],j.flags|=16):K.push(X)}}function f(j,X){if(!s)return null;for(;X!==null;)o(j,X),X=X.sibling;return null}function g(j,X){for(j=new Map;X!==null;)X.key!==null?j.set(X.key,X):j.set(X.index,X),X=X.sibling;return j}function M(j,X){return j=or(j,X),j.index=0,j.sibling=null,j}function b(j,X,K){return j.index=K,s?(K=j.alternate,K!==null?(K=K.index,K<X?(j.flags|=2,X):K):(j.flags|=2,X)):(j.flags|=1048576,X)}function z(j){return s&&j.alternate===null&&(j.flags|=2),j}function G(j,X,K,Re){return X===null||X.tag!==6?(X=ih(K,j.mode,Re),X.return=j,X):(X=M(X,K),X.return=j,X)}function ie(j,X,K,Re){var Ue=K.type;return Ue===d?ze(j,X,K.props.children,Re,K.key):X!==null&&(X.elementType===Ue||typeof Ue=="object"&&Ue!==null&&Ue.$$typeof===T&&Gd(Ue)===X.type)?(Re=M(X,K.props),Re.ref=To(j,X,K),Re.return=j,Re):(Re=Dl(K.type,K.key,K.props,null,j.mode,Re),Re.ref=To(j,X,K),Re.return=j,Re)}function ye(j,X,K,Re){return X===null||X.tag!==4||X.stateNode.containerInfo!==K.containerInfo||X.stateNode.implementation!==K.implementation?(X=rh(K,j.mode,Re),X.return=j,X):(X=M(X,K.children||[]),X.return=j,X)}function ze(j,X,K,Re,Ue){return X===null||X.tag!==7?(X=kr(K,j.mode,Re,Ue),X.return=j,X):(X=M(X,K),X.return=j,X)}function nt(j,X,K){if(typeof X=="string"&&X!==""||typeof X=="number")return X=ih(""+X,j.mode,K),X.return=j,X;if(typeof X=="object"&&X!==null){switch(X.$$typeof){case u:return K=Dl(X.type,X.key,X.props,null,j.mode,K),K.ref=To(j,null,X),K.return=j,K;case h:return X=rh(X,j.mode,K),X.return=j,X;case T:var Re=X._init;return nt(j,Re(X._payload),K)}if($(X)||P(X))return X=kr(X,j.mode,K,null),X.return=j,X;nl(j,X)}return null}function qe(j,X,K,Re){var Ue=X!==null?X.key:null;if(typeof K=="string"&&K!==""||typeof K=="number")return Ue!==null?null:G(j,X,""+K,Re);if(typeof K=="object"&&K!==null){switch(K.$$typeof){case u:return K.key===Ue?ie(j,X,K,Re):null;case h:return K.key===Ue?ye(j,X,K,Re):null;case T:return Ue=K._init,qe(j,X,Ue(K._payload),Re)}if($(K)||P(K))return Ue!==null?null:ze(j,X,K,Re,null);nl(j,K)}return null}function At(j,X,K,Re,Ue){if(typeof Re=="string"&&Re!==""||typeof Re=="number")return j=j.get(K)||null,G(X,j,""+Re,Ue);if(typeof Re=="object"&&Re!==null){switch(Re.$$typeof){case u:return j=j.get(Re.key===null?K:Re.key)||null,ie(X,j,Re,Ue);case h:return j=j.get(Re.key===null?K:Re.key)||null,ye(X,j,Re,Ue);case T:var lt=Re._init;return At(j,X,K,lt(Re._payload),Ue)}if($(Re)||P(Re))return j=j.get(K)||null,ze(X,j,Re,Ue,null);nl(X,Re)}return null}function Be(j,X,K,Re){for(var Ue=null,lt=null,it=X,_t=X=0,on=null;it!==null&&_t<K.length;_t++){it.index>_t?(on=it,it=null):on=it.sibling;var Mt=qe(j,it,K[_t],Re);if(Mt===null){it===null&&(it=on);break}s&&it&&Mt.alternate===null&&o(j,it),X=b(Mt,X,_t),lt===null?Ue=Mt:lt.sibling=Mt,lt=Mt,it=on}if(_t===K.length)return f(j,it),Nt&&Rr(j,_t),Ue;if(it===null){for(;_t<K.length;_t++)it=nt(j,K[_t],Re),it!==null&&(X=b(it,X,_t),lt===null?Ue=it:lt.sibling=it,lt=it);return Nt&&Rr(j,_t),Ue}for(it=g(j,it);_t<K.length;_t++)on=At(it,j,_t,K[_t],Re),on!==null&&(s&&on.alternate!==null&&it.delete(on.key===null?_t:on.key),X=b(on,X,_t),lt===null?Ue=on:lt.sibling=on,lt=on);return s&&it.forEach(function(ar){return o(j,ar)}),Nt&&Rr(j,_t),Ue}function pn(j,X,K,Re){var Ue=P(K);if(typeof Ue!="function")throw Error(a(150));if(K=Ue.call(K),K==null)throw Error(a(151));for(var lt=Ue=null,it=X,_t=X=0,on=null,Mt=K.next();it!==null&&!Mt.done;_t++,Mt=K.next()){it.index>_t?(on=it,it=null):on=it.sibling;var ar=qe(j,it,Mt.value,Re);if(ar===null){it===null&&(it=on);break}s&&it&&ar.alternate===null&&o(j,it),X=b(ar,X,_t),lt===null?Ue=ar:lt.sibling=ar,lt=ar,it=on}if(Mt.done)return f(j,it),Nt&&Rr(j,_t),Ue;if(it===null){for(;!Mt.done;_t++,Mt=K.next())Mt=nt(j,Mt.value,Re),Mt!==null&&(X=b(Mt,X,_t),lt===null?Ue=Mt:lt.sibling=Mt,lt=Mt);return Nt&&Rr(j,_t),Ue}for(it=g(j,it);!Mt.done;_t++,Mt=K.next())Mt=At(it,j,_t,Mt.value,Re),Mt!==null&&(s&&Mt.alternate!==null&&it.delete(Mt.key===null?_t:Mt.key),X=b(Mt,X,_t),lt===null?Ue=Mt:lt.sibling=Mt,lt=Mt);return s&&it.forEach(function(jx){return o(j,jx)}),Nt&&Rr(j,_t),Ue}function Kn(j,X,K,Re){if(typeof K=="object"&&K!==null&&K.type===d&&K.key===null&&(K=K.props.children),typeof K=="object"&&K!==null){switch(K.$$typeof){case u:e:{for(var Ue=K.key,lt=X;lt!==null;){if(lt.key===Ue){if(Ue=K.type,Ue===d){if(lt.tag===7){f(j,lt.sibling),X=M(lt,K.props.children),X.return=j,j=X;break e}}else if(lt.elementType===Ue||typeof Ue=="object"&&Ue!==null&&Ue.$$typeof===T&&Gd(Ue)===lt.type){f(j,lt.sibling),X=M(lt,K.props),X.ref=To(j,lt,K),X.return=j,j=X;break e}f(j,lt);break}else o(j,lt);lt=lt.sibling}K.type===d?(X=kr(K.props.children,j.mode,Re,K.key),X.return=j,j=X):(Re=Dl(K.type,K.key,K.props,null,j.mode,Re),Re.ref=To(j,X,K),Re.return=j,j=Re)}return z(j);case h:e:{for(lt=K.key;X!==null;){if(X.key===lt)if(X.tag===4&&X.stateNode.containerInfo===K.containerInfo&&X.stateNode.implementation===K.implementation){f(j,X.sibling),X=M(X,K.children||[]),X.return=j,j=X;break e}else{f(j,X);break}else o(j,X);X=X.sibling}X=rh(K,j.mode,Re),X.return=j,j=X}return z(j);case T:return lt=K._init,Kn(j,X,lt(K._payload),Re)}if($(K))return Be(j,X,K,Re);if(P(K))return pn(j,X,K,Re);nl(j,K)}return typeof K=="string"&&K!==""||typeof K=="number"?(K=""+K,X!==null&&X.tag===6?(f(j,X.sibling),X=M(X,K),X.return=j,j=X):(f(j,X),X=ih(K,j.mode,Re),X.return=j,j=X),z(j)):f(j,X)}return Kn}var As=Wd(!0),Xd=Wd(!1),Eo={},Zn=Gn(Eo),Ao=Gn(Eo),Cs=Gn(Eo);function Mi(s){if(s===Eo)throw Error(a(174));return s}function Mu(s,o){gt(Cs,o),gt(Ao,s),gt(Zn,Eo),s=pe(o),st(Zn),gt(Zn,s)}function Ps(){st(Zn),st(Ao),st(Cs)}function qd(s){var o=Mi(Cs.current),f=Mi(Zn.current);o=V(f,s.type,o),f!==o&&(gt(Ao,s),gt(Zn,o))}function Su(s){Ao.current===s&&(st(Zn),st(Ao))}var Ft=Gn(0);function il(s){for(var o=s;o!==null;){if(o.tag===13){var f=o.memoizedState;if(f!==null&&(f=f.dehydrated,f===null||Ba(f)||_o(f)))return o}else if(o.tag===19&&o.memoizedProps.revealOrder!==void 0){if((o.flags&128)!==0)return o}else if(o.child!==null){o.child.return=o,o=o.child;continue}if(o===s)break;for(;o.sibling===null;){if(o.return===null||o.return===s)return null;o=o.return}o.sibling.return=o.return,o=o.sibling}return null}var wu=[];function bu(){for(var s=0;s<wu.length;s++){var o=wu[s];be?o._workInProgressVersionPrimary=null:o._workInProgressVersionSecondary=null}wu.length=0}var rl=c.ReactCurrentDispatcher,jn=c.ReactCurrentBatchConfig,Ls=0,Ut=null,hn=null,sn=null,sl=!1,Co=!1,Po=0,_x=0;function fn(){throw Error(a(321))}function Tu(s,o){if(o===null)return!1;for(var f=0;f<o.length&&f<s.length;f++)if(!xi(s[f],o[f]))return!1;return!0}function Eu(s,o,f,g,M,b){if(Ls=b,Ut=o,o.memoizedState=null,o.updateQueue=null,o.lanes=0,rl.current=s===null||s.memoizedState===null?bx:Tx,s=f(g,M),Co){b=0;do{if(Co=!1,Po=0,25<=b)throw Error(a(301));b+=1,sn=hn=null,o.updateQueue=null,rl.current=Ex,s=f(g,M)}while(Co)}if(rl.current=ul,o=hn!==null&&hn.next!==null,Ls=0,sn=hn=Ut=null,sl=!1,o)throw Error(a(300));return s}function Au(){var s=Po!==0;return Po=0,s}function Oi(){var s={memoizedState:null,baseState:null,baseQueue:null,queue:null,next:null};return sn===null?Ut.memoizedState=sn=s:sn=sn.next=s,sn}function Si(){if(hn===null){var s=Ut.alternate;s=s!==null?s.memoizedState:null}else s=hn.next;var o=sn===null?Ut.memoizedState:sn.next;if(o!==null)sn=o,hn=s;else{if(s===null)throw Error(a(310));hn=s,s={memoizedState:hn.memoizedState,baseState:hn.baseState,baseQueue:hn.baseQueue,queue:hn.queue,next:null},sn===null?Ut.memoizedState=sn=s:sn=sn.next=s}return sn}function Ir(s,o){return typeof o=="function"?o(s):o}function ol(s){var o=Si(),f=o.queue;if(f===null)throw Error(a(311));f.lastRenderedReducer=s;var g=hn,M=g.baseQueue,b=f.pending;if(b!==null){if(M!==null){var z=M.next;M.next=b.next,b.next=z}g.baseQueue=M=b,f.pending=null}if(M!==null){b=M.next,g=g.baseState;var G=z=null,ie=null,ye=b;do{var ze=ye.lane;if((Ls&ze)===ze)ie!==null&&(ie=ie.next={lane:0,action:ye.action,hasEagerState:ye.hasEagerState,eagerState:ye.eagerState,next:null}),g=ye.hasEagerState?ye.eagerState:s(g,ye.action);else{var nt={lane:ze,action:ye.action,hasEagerState:ye.hasEagerState,eagerState:ye.eagerState,next:null};ie===null?(G=ie=nt,z=g):ie=ie.next=nt,Ut.lanes|=ze,Is|=ze}ye=ye.next}while(ye!==null&&ye!==b);ie===null?z=g:ie.next=G,xi(g,o.memoizedState)||(Dn=!0),o.memoizedState=g,o.baseState=z,o.baseQueue=ie,f.lastRenderedState=g}if(s=f.interleaved,s!==null){M=s;do b=M.lane,Ut.lanes|=b,Is|=b,M=M.next;while(M!==s)}else M===null&&(f.lanes=0);return[o.memoizedState,f.dispatch]}function al(s){var o=Si(),f=o.queue;if(f===null)throw Error(a(311));f.lastRenderedReducer=s;var g=f.dispatch,M=f.pending,b=o.memoizedState;if(M!==null){f.pending=null;var z=M=M.next;do b=s(b,z.action),z=z.next;while(z!==M);xi(b,o.memoizedState)||(Dn=!0),o.memoizedState=b,o.baseQueue===null&&(o.baseState=b),f.lastRenderedState=b}return[b,g]}function Yd(){}function Zd(s,o){var f=Ut,g=Si(),M=o(),b=!xi(g.memoizedState,M);if(b&&(g.memoizedState=M,Dn=!0),g=g.queue,Ro(Qd.bind(null,f,g,s),[s]),g.getSnapshot!==o||b||sn!==null&&sn.memoizedState.tag&1){if(f.flags|=2048,Lo(9,Jd.bind(null,f,g,M,o),void 0,null),Yt===null)throw Error(a(349));(Ls&30)!==0||jd(f,o,M)}return M}function jd(s,o,f){s.flags|=16384,s={getSnapshot:o,value:f},o=Ut.updateQueue,o===null?(o={lastEffect:null,stores:null},Ut.updateQueue=o,o.stores=[s]):(f=o.stores,f===null?o.stores=[s]:f.push(s))}function Jd(s,o,f,g){o.value=f,o.getSnapshot=g,Kd(o)&&Jn(s,1,-1)}function Qd(s,o,f){return f(function(){Kd(o)&&Jn(s,1,-1)})}function Kd(s){var o=s.getSnapshot;s=s.value;try{var f=o();return!xi(s,f)}catch{return!0}}function Cu(s){var o=Oi();return typeof s=="function"&&(s=s()),o.memoizedState=o.baseState=s,s={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:Ir,lastRenderedState:s},o.queue=s,s=s.dispatch=wx.bind(null,Ut,s),[o.memoizedState,s]}function Lo(s,o,f,g){return s={tag:s,create:o,destroy:f,deps:g,next:null},o=Ut.updateQueue,o===null?(o={lastEffect:null,stores:null},Ut.updateQueue=o,o.lastEffect=s.next=s):(f=o.lastEffect,f===null?o.lastEffect=s.next=s:(g=f.next,f.next=s,s.next=g,o.lastEffect=s)),s}function $d(){return Si().memoizedState}function ll(s,o,f,g){var M=Oi();Ut.flags|=s,M.memoizedState=Lo(1|o,f,void 0,g===void 0?null:g)}function cl(s,o,f,g){var M=Si();g=g===void 0?null:g;var b=void 0;if(hn!==null){var z=hn.memoizedState;if(b=z.destroy,g!==null&&Tu(g,z.deps)){M.memoizedState=Lo(o,f,b,g);return}}Ut.flags|=s,M.memoizedState=Lo(1|o,f,b,g)}function Pu(s,o){return ll(8390656,8,s,o)}function Ro(s,o){return cl(2048,8,s,o)}function ep(s,o){return cl(4,2,s,o)}function tp(s,o){return cl(4,4,s,o)}function np(s,o){if(typeof o=="function")return s=s(),o(s),function(){o(null)};if(o!=null)return s=s(),o.current=s,function(){o.current=null}}function ip(s,o,f){return f=f!=null?f.concat([s]):null,cl(4,4,np.bind(null,o,s),f)}function Lu(){}function rp(s,o){var f=Si();o=o===void 0?null:o;var g=f.memoizedState;return g!==null&&o!==null&&Tu(o,g[1])?g[0]:(f.memoizedState=[s,o],s)}function sp(s,o){var f=Si();o=o===void 0?null:o;var g=f.memoizedState;return g!==null&&o!==null&&Tu(o,g[1])?g[0]:(s=s(),f.memoizedState=[s,o],s)}function Mx(s,o){var f=yt;yt=f!==0&&4>f?f:4,s(!0);var g=jn.transition;jn.transition={};try{s(!1),o()}finally{yt=f,jn.transition=g}}function op(){return Si().memoizedState}function Sx(s,o,f){var g=rr(s);f={lane:g,action:f,hasEagerState:!1,eagerState:null,next:null},ap(s)?lp(o,f):(cp(s,o,f),f=_n(),s=Jn(s,g,f),s!==null&&up(s,o,g))}function wx(s,o,f){var g=rr(s),M={lane:g,action:f,hasEagerState:!1,eagerState:null,next:null};if(ap(s))lp(o,M);else{cp(s,o,M);var b=s.alternate;if(s.lanes===0&&(b===null||b.lanes===0)&&(b=o.lastRenderedReducer,b!==null))try{var z=o.lastRenderedState,G=b(z,f);if(M.hasEagerState=!0,M.eagerState=G,xi(G,z))return}catch{}finally{}f=_n(),s=Jn(s,g,f),s!==null&&up(s,o,g)}}function ap(s){var o=s.alternate;return s===Ut||o!==null&&o===Ut}function lp(s,o){Co=sl=!0;var f=s.pending;f===null?o.next=o:(o.next=f.next,f.next=o),s.pending=o}function cp(s,o,f){Yt!==null&&(s.mode&1)!==0&&(ut&2)===0?(s=o.interleaved,s===null?(f.next=f,_i===null?_i=[o]:_i.push(o)):(f.next=s.next,s.next=f),o.interleaved=f):(s=o.pending,s===null?f.next=f:(f.next=s.next,s.next=f),o.pending=f)}function up(s,o,f){if((f&4194240)!==0){var g=o.lanes;g&=s.pendingLanes,f|=g,o.lanes=f,ru(s,f)}}var ul={readContext:Xn,useCallback:fn,useContext:fn,useEffect:fn,useImperativeHandle:fn,useInsertionEffect:fn,useLayoutEffect:fn,useMemo:fn,useReducer:fn,useRef:fn,useState:fn,useDebugValue:fn,useDeferredValue:fn,useTransition:fn,useMutableSource:fn,useSyncExternalStore:fn,useId:fn,unstable_isNewReconciler:!1},bx={readContext:Xn,useCallback:function(s,o){return Oi().memoizedState=[s,o===void 0?null:o],s},useContext:Xn,useEffect:Pu,useImperativeHandle:function(s,o,f){return f=f!=null?f.concat([s]):null,ll(4194308,4,np.bind(null,o,s),f)},useLayoutEffect:function(s,o){return ll(4194308,4,s,o)},useInsertionEffect:function(s,o){return ll(4,2,s,o)},useMemo:function(s,o){var f=Oi();return o=o===void 0?null:o,s=s(),f.memoizedState=[s,o],s},useReducer:function(s,o,f){var g=Oi();return o=f!==void 0?f(o):o,g.memoizedState=g.baseState=o,s={pending:null,interleaved:null,lanes:0,dispatch:null,lastRenderedReducer:s,lastRenderedState:o},g.queue=s,s=s.dispatch=Sx.bind(null,Ut,s),[g.memoizedState,s]},useRef:function(s){var o=Oi();return s={current:s},o.memoizedState=s},useState:Cu,useDebugValue:Lu,useDeferredValue:function(s){var o=Cu(s),f=o[0],g=o[1];return Pu(function(){var M=jn.transition;jn.transition={};try{g(s)}finally{jn.transition=M}},[s]),f},useTransition:function(){var s=Cu(!1),o=s[0];return s=Mx.bind(null,s[1]),Oi().memoizedState=s,[o,s]},useMutableSource:function(){},useSyncExternalStore:function(s,o,f){var g=Ut,M=Oi();if(Nt){if(f===void 0)throw Error(a(407));f=f()}else{if(f=o(),Yt===null)throw Error(a(349));(Ls&30)!==0||jd(g,o,f)}M.memoizedState=f;var b={value:f,getSnapshot:o};return M.queue=b,Pu(Qd.bind(null,g,b,s),[s]),g.flags|=2048,Lo(9,Jd.bind(null,g,b,f,o),void 0,null),f},useId:function(){var s=Oi(),o=Yt.identifierPrefix;if(Nt){var f=Ni,g=zi;f=(g&~(1<<32-oi(g)-1)).toString(32)+f,o=":"+o+"R"+f,f=Po++,0<f&&(o+="H"+f.toString(32)),o+=":"}else f=_x++,o=":"+o+"r"+f.toString(32)+":";return s.memoizedState=o},unstable_isNewReconciler:!1},Tx={readContext:Xn,useCallback:rp,useContext:Xn,useEffect:Ro,useImperativeHandle:ip,useInsertionEffect:ep,useLayoutEffect:tp,useMemo:sp,useReducer:ol,useRef:$d,useState:function(){return ol(Ir)},useDebugValue:Lu,useDeferredValue:function(s){var o=ol(Ir),f=o[0],g=o[1];return Ro(function(){var M=jn.transition;jn.transition={};try{g(s)}finally{jn.transition=M}},[s]),f},useTransition:function(){var s=ol(Ir)[0],o=Si().memoizedState;return[s,o]},useMutableSource:Yd,useSyncExternalStore:Zd,useId:op,unstable_isNewReconciler:!1},Ex={readContext:Xn,useCallback:rp,useContext:Xn,useEffect:Ro,useImperativeHandle:ip,useInsertionEffect:ep,useLayoutEffect:tp,useMemo:sp,useReducer:al,useRef:$d,useState:function(){return al(Ir)},useDebugValue:Lu,useDeferredValue:function(s){var o=al(Ir),f=o[0],g=o[1];return Ro(function(){var M=jn.transition;jn.transition={};try{g(s)}finally{jn.transition=M}},[s]),f},useTransition:function(){var s=al(Ir)[0],o=Si().memoizedState;return[s,o]},useMutableSource:Yd,useSyncExternalStore:Zd,useId:op,unstable_isNewReconciler:!1};function Ru(s,o){try{var f="",g=o;do f+=yx(g),g=g.return;while(g);var M=f}catch(b){M=`
Error generating stack: `+b.message+`
`+b.stack}return{value:s,source:o,stack:M}}function Iu(s,o){try{console.error(o.value)}catch(f){setTimeout(function(){throw f})}}var Ax=typeof WeakMap=="function"?WeakMap:Map;function hp(s,o,f){f=Di(-1,f),f.tag=3,f.payload={element:null};var g=o.value;return f.callback=function(){El||(El=!0,Ju=g),Iu(s,o)},f}function fp(s,o,f){f=Di(-1,f),f.tag=3;var g=s.type.getDerivedStateFromError;if(typeof g=="function"){var M=o.value;f.payload=function(){return g(M)},f.callback=function(){Iu(s,o)}}var b=s.stateNode;return b!==null&&typeof b.componentDidCatch=="function"&&(f.callback=function(){Iu(s,o),typeof g!="function"&&(nr===null?nr=new Set([this]):nr.add(this));var z=o.stack;this.componentDidCatch(o.value,{componentStack:z!==null?z:""})}),f}function dp(s,o,f){var g=s.pingCache;if(g===null){g=s.pingCache=new Ax;var M=new Set;g.set(o,M)}else M=g.get(o),M===void 0&&(M=new Set,g.set(o,M));M.has(f)||(M.add(f),s=Vx.bind(null,s,o,f),o.then(s,s))}function pp(s){do{var o;if((o=s.tag===13)&&(o=s.memoizedState,o=o!==null?o.dehydrated!==null:!0),o)return s;s=s.return}while(s!==null);return null}function mp(s,o,f,g,M){return(s.mode&1)===0?(s===o?s.flags|=65536:(s.flags|=128,f.flags|=131072,f.flags&=-52805,f.tag===1&&(f.alternate===null?f.tag=17:(o=Di(-1,1),o.tag=2,tr(f,o))),f.lanes|=1),s):(s.flags|=65536,s.lanes=M,s)}function wi(s){s.flags|=4}function gp(s,o){if(s!==null&&s.child===o.child)return!0;if((o.flags&16)!==0)return!1;for(s=o.child;s!==null;){if((s.flags&12854)!==0||(s.subtreeFlags&12854)!==0)return!1;s=s.sibling}return!0}var Io,Do,hl,fl;if(Ze)Io=function(s,o){for(var f=o.child;f!==null;){if(f.tag===5||f.tag===6)re(s,f.stateNode);else if(f.tag!==4&&f.child!==null){f.child.return=f,f=f.child;continue}if(f===o)break;for(;f.sibling===null;){if(f.return===null||f.return===o)return;f=f.return}f.sibling.return=f.return,f=f.sibling}},Do=function(){},hl=function(s,o,f,g,M){if(s=s.memoizedProps,s!==g){var b=o.stateNode,z=Mi(Zn.current);f=Ee(b,f,s,g,M,z),(o.updateQueue=f)&&wi(o)}},fl=function(s,o,f,g){f!==g&&wi(o)};else if(he){Io=function(s,o,f,g){for(var M=o.child;M!==null;){if(M.tag===5){var b=M.stateNode;f&&g&&(b=xn(b,M.type,M.memoizedProps,M)),re(s,b)}else if(M.tag===6)b=M.stateNode,f&&g&&(b=ka(b,M.memoizedProps,M)),re(s,b);else if(M.tag!==4){if(M.tag===22&&M.memoizedState!==null)b=M.child,b!==null&&(b.return=M),Io(s,M,!0,!0);else if(M.child!==null){M.child.return=M,M=M.child;continue}}if(M===o)break;for(;M.sibling===null;){if(M.return===null||M.return===o)return;M=M.return}M.sibling.return=M.return,M=M.sibling}};var vp=function(s,o,f,g){for(var M=o.child;M!==null;){if(M.tag===5){var b=M.stateNode;f&&g&&(b=xn(b,M.type,M.memoizedProps,M)),si(s,b)}else if(M.tag===6)b=M.stateNode,f&&g&&(b=ka(b,M.memoizedProps,M)),si(s,b);else if(M.tag!==4){if(M.tag===22&&M.memoizedState!==null)b=M.child,b!==null&&(b.return=M),vp(s,M,!0,!0);else if(M.child!==null){M.child.return=M,M=M.child;continue}}if(M===o)break;for(;M.sibling===null;){if(M.return===null||M.return===o)return;M=M.return}M.sibling.return=M.return,M=M.sibling}};Do=function(s,o){var f=o.stateNode;if(!gp(s,o)){s=f.containerInfo;var g=Rt(s);vp(g,o,!1,!1),f.pendingChildren=g,wi(o),It(s,g)}},hl=function(s,o,f,g,M){var b=s.stateNode,z=s.memoizedProps;if((s=gp(s,o))&&z===g)o.stateNode=b;else{var G=o.stateNode,ie=Mi(Zn.current),ye=null;z!==g&&(ye=Ee(G,f,z,g,M,ie)),s&&ye===null?o.stateNode=b:(b=Et(b,ye,f,z,g,o,s,G),me(b,f,g,M,ie)&&wi(o),o.stateNode=b,s?wi(o):Io(b,o,!1,!1))}},fl=function(s,o,f,g){f!==g?(s=Mi(Cs.current),f=Mi(Zn.current),o.stateNode=oe(g,s,f,o),wi(o)):o.stateNode=s.stateNode}}else Do=function(){},hl=function(){},fl=function(){};function zo(s,o){if(!Nt)switch(s.tailMode){case"hidden":o=s.tail;for(var f=null;o!==null;)o.alternate!==null&&(f=o),o=o.sibling;f===null?s.tail=null:f.sibling=null;break;case"collapsed":f=s.tail;for(var g=null;f!==null;)f.alternate!==null&&(g=f),f=f.sibling;g===null?o||s.tail===null?s.tail=null:s.tail.sibling=null:g.sibling=null}}function dn(s){var o=s.alternate!==null&&s.alternate.child===s.child,f=0,g=0;if(o)for(var M=s.child;M!==null;)f|=M.lanes|M.childLanes,g|=M.subtreeFlags&14680064,g|=M.flags&14680064,M.return=s,M=M.sibling;else for(M=s.child;M!==null;)f|=M.lanes|M.childLanes,g|=M.subtreeFlags,g|=M.flags,M.return=s,M=M.sibling;return s.subtreeFlags|=g,s.childLanes=f,o}function Cx(s,o,f){var g=o.pendingProps;switch(vu(o),o.tag){case 2:case 16:case 15:case 0:case 11:case 7:case 8:case 12:case 9:case 14:return dn(o),null;case 1:return En(o.type)&&Va(),dn(o),null;case 3:return g=o.stateNode,Ps(),st(nn),st(bt),bu(),g.pendingContext&&(g.context=g.pendingContext,g.pendingContext=null),(s===null||s.child===null)&&(bo(o)?wi(o):s===null||s.memoizedState.isDehydrated&&(o.flags&256)===0||(o.flags|=1024,li!==null&&($u(li),li=null))),Do(s,o),dn(o),null;case 5:Su(o),f=Mi(Cs.current);var M=o.type;if(s!==null&&o.stateNode!=null)hl(s,o,M,g,f),s.ref!==o.ref&&(o.flags|=512,o.flags|=2097152);else{if(!g){if(o.stateNode===null)throw Error(a(166));return dn(o),null}if(s=Mi(Zn.current),bo(o)){if(!ne)throw Error(a(175));s=Xe(o.stateNode,o.type,o.memoizedProps,f,s,o,!wo),o.updateQueue=s,s!==null&&wi(o)}else{var b=le(M,g,f,s,o);Io(b,o,!1,!1),o.stateNode=b,me(b,M,g,f,s)&&wi(o)}o.ref!==null&&(o.flags|=512,o.flags|=2097152)}return dn(o),null;case 6:if(s&&o.stateNode!=null)fl(s,o,s.memoizedProps,g);else{if(typeof g!="string"&&o.stateNode===null)throw Error(a(166));if(s=Mi(Cs.current),f=Mi(Zn.current),bo(o)){if(!ne)throw Error(a(176));if(s=o.stateNode,g=o.memoizedProps,(f=et(s,g,o,!wo))&&(M=Rn,M!==null))switch(b=(M.mode&1)!==0,M.tag){case 3:Ki(M.stateNode.containerInfo,s,g,b);break;case 5:$i(M.type,M.memoizedProps,M.stateNode,s,g,b)}f&&wi(o)}else o.stateNode=oe(g,s,f,o)}return dn(o),null;case 13:if(st(Ft),g=o.memoizedState,Nt&&In!==null&&(o.mode&1)!==0&&(o.flags&128)===0){for(s=In;s;)s=Z(s);return Es(),o.flags|=98560,o}if(g!==null&&g.dehydrated!==null){if(g=bo(o),s===null){if(!g)throw Error(a(318));if(!ne)throw Error(a(344));if(s=o.memoizedState,s=s!==null?s.dehydrated:null,!s)throw Error(a(317));at(s,o)}else Es(),(o.flags&128)===0&&(o.memoizedState=null),o.flags|=4;return dn(o),null}return li!==null&&($u(li),li=null),(o.flags&128)!==0?(o.lanes=f,o):(g=g!==null,f=!1,s===null?bo(o):f=s.memoizedState!==null,g&&!f&&(o.child.flags|=8192,(o.mode&1)!==0&&(s===null||(Ft.current&1)!==0?Kt===0&&(Kt=3):th())),o.updateQueue!==null&&(o.flags|=4),dn(o),null);case 4:return Ps(),Do(s,o),s===null&&Oe(o.stateNode.containerInfo),dn(o),null;case 10:return hu(o.type._context),dn(o),null;case 17:return En(o.type)&&Va(),dn(o),null;case 19:if(st(Ft),M=o.memoizedState,M===null)return dn(o),null;if(g=(o.flags&128)!==0,b=M.rendering,b===null)if(g)zo(M,!1);else{if(Kt!==0||s!==null&&(s.flags&128)!==0)for(s=o.child;s!==null;){if(b=il(s),b!==null){for(o.flags|=128,zo(M,!1),s=b.updateQueue,s!==null&&(o.updateQueue=s,o.flags|=4),o.subtreeFlags=0,s=f,g=o.child;g!==null;)f=g,M=s,f.flags&=14680066,b=f.alternate,b===null?(f.childLanes=0,f.lanes=M,f.child=null,f.subtreeFlags=0,f.memoizedProps=null,f.memoizedState=null,f.updateQueue=null,f.dependencies=null,f.stateNode=null):(f.childLanes=b.childLanes,f.lanes=b.lanes,f.child=b.child,f.subtreeFlags=0,f.deletions=null,f.memoizedProps=b.memoizedProps,f.memoizedState=b.memoizedState,f.updateQueue=b.updateQueue,f.type=b.type,M=b.dependencies,f.dependencies=M===null?null:{lanes:M.lanes,firstContext:M.firstContext}),g=g.sibling;return gt(Ft,Ft.current&1|2),o.child}s=s.sibling}M.tail!==null&&rn()>ju&&(o.flags|=128,g=!0,zo(M,!1),o.lanes=4194304)}else{if(!g)if(s=il(b),s!==null){if(o.flags|=128,g=!0,s=s.updateQueue,s!==null&&(o.updateQueue=s,o.flags|=4),zo(M,!0),M.tail===null&&M.tailMode==="hidden"&&!b.alternate&&!Nt)return dn(o),null}else 2*rn()-M.renderingStartTime>ju&&f!==1073741824&&(o.flags|=128,g=!0,zo(M,!1),o.lanes=4194304);M.isBackwards?(b.sibling=o.child,o.child=b):(s=M.last,s!==null?s.sibling=b:o.child=b,M.last=b)}return M.tail!==null?(o=M.tail,M.rendering=o,M.tail=o.sibling,M.renderingStartTime=rn(),o.sibling=null,s=Ft.current,gt(Ft,g?s&1|2:s&1),o):(dn(o),null);case 22:case 23:return eh(),g=o.memoizedState!==null,s!==null&&s.memoizedState!==null!==g&&(o.flags|=8192),g&&(o.mode&1)!==0?(zn&1073741824)!==0&&(dn(o),Ze&&o.subtreeFlags&6&&(o.flags|=8192)):dn(o),null;case 24:return null;case 25:return null}throw Error(a(156,o.tag))}var Px=c.ReactCurrentOwner,Dn=!1;function yn(s,o,f,g){o.child=s===null?Xd(o,null,f,g):As(o,s.child,f,g)}function xp(s,o,f,g,M){f=f.render;var b=o.ref;return ws(o,M),g=Eu(s,o,f,g,b,M),f=Au(),s!==null&&!Dn?(o.updateQueue=s.updateQueue,o.flags&=-2053,s.lanes&=~M,Fi(s,o,M)):(Nt&&f&&gu(o),o.flags|=1,yn(s,o,g,M),o.child)}function yp(s,o,f,g,M){if(s===null){var b=f.type;return typeof b=="function"&&!nh(b)&&b.defaultProps===void 0&&f.compare===null&&f.defaultProps===void 0?(o.tag=15,o.type=b,_p(s,o,b,g,M)):(s=Dl(f.type,null,g,o,o.mode,M),s.ref=o.ref,s.return=o,o.child=s)}if(b=s.child,(s.lanes&M)===0){var z=b.memoizedProps;if(f=f.compare,f=f!==null?f:Za,f(z,g)&&s.ref===o.ref)return Fi(s,o,M)}return o.flags|=1,s=or(b,g),s.ref=o.ref,s.return=o,o.child=s}function _p(s,o,f,g,M){if(s!==null&&Za(s.memoizedProps,g)&&s.ref===o.ref)if(Dn=!1,(s.lanes&M)!==0)(s.flags&131072)!==0&&(Dn=!0);else return o.lanes=s.lanes,Fi(s,o,M);return Du(s,o,f,g,M)}function Mp(s,o,f){var g=o.pendingProps,M=g.children,b=s!==null?s.memoizedState:null;if(g.mode==="hidden")if((o.mode&1)===0)o.memoizedState={baseLanes:0,cachePool:null},gt(Rs,zn),zn|=f;else if((f&1073741824)!==0)o.memoizedState={baseLanes:0,cachePool:null},g=b!==null?b.baseLanes:f,gt(Rs,zn),zn|=g;else return s=b!==null?b.baseLanes|f:f,o.lanes=o.childLanes=1073741824,o.memoizedState={baseLanes:s,cachePool:null},o.updateQueue=null,gt(Rs,zn),zn|=s,null;else b!==null?(g=b.baseLanes|f,o.memoizedState=null):g=f,gt(Rs,zn),zn|=g;return yn(s,o,M,f),o.child}function Sp(s,o){var f=o.ref;(s===null&&f!==null||s!==null&&s.ref!==f)&&(o.flags|=512,o.flags|=2097152)}function Du(s,o,f,g,M){var b=En(f)?Li:bt.current;return b=Ri(o,b),ws(o,M),f=Eu(s,o,f,g,b,M),g=Au(),s!==null&&!Dn?(o.updateQueue=s.updateQueue,o.flags&=-2053,s.lanes&=~M,Fi(s,o,M)):(Nt&&g&&gu(o),o.flags|=1,yn(s,o,f,M),o.child)}function wp(s,o,f,g,M){if(En(f)){var b=!0;Ha(o)}else b=!1;if(ws(o,M),o.stateNode===null)s!==null&&(s.alternate=null,o.alternate=null,o.flags|=2),Fd(o,f,g),mu(o,f,g,M),g=!0;else if(s===null){var z=o.stateNode,G=o.memoizedProps;z.props=G;var ie=z.context,ye=f.contextType;typeof ye=="object"&&ye!==null?ye=Xn(ye):(ye=En(f)?Li:bt.current,ye=Ri(o,ye));var ze=f.getDerivedStateFromProps,nt=typeof ze=="function"||typeof z.getSnapshotBeforeUpdate=="function";nt||typeof z.UNSAFE_componentWillReceiveProps!="function"&&typeof z.componentWillReceiveProps!="function"||(G!==g||ie!==ye)&&kd(o,z,g,ye),er=!1;var qe=o.memoizedState;z.state=qe,Ka(o,g,z,M),ie=o.memoizedState,G!==g||qe!==ie||nn.current||er?(typeof ze=="function"&&(pu(o,f,ze,g),ie=o.memoizedState),(G=er||Od(o,f,G,g,qe,ie,ye))?(nt||typeof z.UNSAFE_componentWillMount!="function"&&typeof z.componentWillMount!="function"||(typeof z.componentWillMount=="function"&&z.componentWillMount(),typeof z.UNSAFE_componentWillMount=="function"&&z.UNSAFE_componentWillMount()),typeof z.componentDidMount=="function"&&(o.flags|=4194308)):(typeof z.componentDidMount=="function"&&(o.flags|=4194308),o.memoizedProps=g,o.memoizedState=ie),z.props=g,z.state=ie,z.context=ye,g=G):(typeof z.componentDidMount=="function"&&(o.flags|=4194308),g=!1)}else{z=o.stateNode,Id(s,o),G=o.memoizedProps,ye=o.type===o.elementType?G:ai(o.type,G),z.props=ye,nt=o.pendingProps,qe=z.context,ie=f.contextType,typeof ie=="object"&&ie!==null?ie=Xn(ie):(ie=En(f)?Li:bt.current,ie=Ri(o,ie));var At=f.getDerivedStateFromProps;(ze=typeof At=="function"||typeof z.getSnapshotBeforeUpdate=="function")||typeof z.UNSAFE_componentWillReceiveProps!="function"&&typeof z.componentWillReceiveProps!="function"||(G!==nt||qe!==ie)&&kd(o,z,g,ie),er=!1,qe=o.memoizedState,z.state=qe,Ka(o,g,z,M);var Be=o.memoizedState;G!==nt||qe!==Be||nn.current||er?(typeof At=="function"&&(pu(o,f,At,g),Be=o.memoizedState),(ye=er||Od(o,f,ye,g,qe,Be,ie)||!1)?(ze||typeof z.UNSAFE_componentWillUpdate!="function"&&typeof z.componentWillUpdate!="function"||(typeof z.componentWillUpdate=="function"&&z.componentWillUpdate(g,Be,ie),typeof z.UNSAFE_componentWillUpdate=="function"&&z.UNSAFE_componentWillUpdate(g,Be,ie)),typeof z.componentDidUpdate=="function"&&(o.flags|=4),typeof z.getSnapshotBeforeUpdate=="function"&&(o.flags|=1024)):(typeof z.componentDidUpdate!="function"||G===s.memoizedProps&&qe===s.memoizedState||(o.flags|=4),typeof z.getSnapshotBeforeUpdate!="function"||G===s.memoizedProps&&qe===s.memoizedState||(o.flags|=1024),o.memoizedProps=g,o.memoizedState=Be),z.props=g,z.state=Be,z.context=ie,g=ye):(typeof z.componentDidUpdate!="function"||G===s.memoizedProps&&qe===s.memoizedState||(o.flags|=4),typeof z.getSnapshotBeforeUpdate!="function"||G===s.memoizedProps&&qe===s.memoizedState||(o.flags|=1024),g=!1)}return zu(s,o,f,g,b,M)}function zu(s,o,f,g,M,b){Sp(s,o);var z=(o.flags&128)!==0;if(!g&&!z)return M&&Ad(o,f,!1),Fi(s,o,b);g=o.stateNode,Px.current=o;var G=z&&typeof f.getDerivedStateFromError!="function"?null:g.render();return o.flags|=1,s!==null&&z?(o.child=As(o,s.child,null,b),o.child=As(o,null,G,b)):yn(s,o,G,b),o.memoizedState=g.state,M&&Ad(o,f,!0),o.child}function bp(s){var o=s.stateNode;o.pendingContext?Td(s,o.pendingContext,o.pendingContext!==o.context):o.context&&Td(s,o.context,!1),Mu(s,o.containerInfo)}function Tp(s,o,f,g,M){return Es(),_u(M),o.flags|=256,yn(s,o,f,g),o.child}var dl={dehydrated:null,treeContext:null,retryLane:0};function pl(s){return{baseLanes:s,cachePool:null}}function Ep(s,o,f){var g=o.pendingProps,M=Ft.current,b=!1,z=(o.flags&128)!==0,G;if((G=z)||(G=s!==null&&s.memoizedState===null?!1:(M&2)!==0),G?(b=!0,o.flags&=-129):(s===null||s.memoizedState!==null)&&(M|=1),gt(Ft,M&1),s===null)return yu(o),s=o.memoizedState,s!==null&&(s=s.dehydrated,s!==null)?((o.mode&1)===0?o.lanes=1:_o(s)?o.lanes=8:o.lanes=1073741824,null):(M=g.children,s=g.fallback,b?(g=o.mode,b=o.child,M={mode:"hidden",children:M},(g&1)===0&&b!==null?(b.childLanes=0,b.pendingProps=M):b=zl(M,g,0,null),s=kr(s,g,f,null),b.return=o,s.return=o,b.sibling=s,o.child=b,o.child.memoizedState=pl(f),o.memoizedState=dl,s):Nu(o,M));if(M=s.memoizedState,M!==null){if(G=M.dehydrated,G!==null){if(z)return o.flags&256?(o.flags&=-257,ml(s,o,f,Error(a(422)))):o.memoizedState!==null?(o.child=s.child,o.flags|=128,null):(b=g.fallback,M=o.mode,g=zl({mode:"visible",children:g.children},M,0,null),b=kr(b,M,f,null),b.flags|=2,g.return=o,b.return=o,g.sibling=b,o.child=g,(o.mode&1)!==0&&As(o,s.child,null,f),o.child.memoizedState=pl(f),o.memoizedState=dl,b);if((o.mode&1)===0)o=ml(s,o,f,null);else if(_o(G))o=ml(s,o,f,Error(a(419)));else if(g=(f&s.childLanes)!==0,Dn||g){if(g=Yt,g!==null){switch(f&-f){case 4:b=2;break;case 16:b=8;break;case 64:case 128:case 256:case 512:case 1024:case 2048:case 4096:case 8192:case 16384:case 32768:case 65536:case 131072:case 262144:case 524288:case 1048576:case 2097152:case 4194304:case 8388608:case 16777216:case 33554432:case 67108864:b=32;break;case 536870912:b=268435456;break;default:b=0}g=(b&(g.suspendedLanes|f))!==0?0:b,g!==0&&g!==M.retryLane&&(M.retryLane=g,Jn(s,g,-1))}th(),o=ml(s,o,f,Error(a(421)))}else Ba(G)?(o.flags|=128,o.child=s.child,o=Hx.bind(null,s),D(G,o),o=null):(f=M.treeContext,ne&&(In=ue(G),Rn=o,Nt=!0,li=null,wo=!1,f!==null&&(qn[Yn++]=zi,qn[Yn++]=Ni,qn[Yn++]=Lr,zi=f.id,Ni=f.overflow,Lr=o)),o=Nu(o,o.pendingProps.children),o.flags|=4096);return o}return b?(g=Cp(s,o,g.children,g.fallback,f),b=o.child,M=s.child.memoizedState,b.memoizedState=M===null?pl(f):{baseLanes:M.baseLanes|f,cachePool:null},b.childLanes=s.childLanes&~f,o.memoizedState=dl,g):(f=Ap(s,o,g.children,f),o.memoizedState=null,f)}return b?(g=Cp(s,o,g.children,g.fallback,f),b=o.child,M=s.child.memoizedState,b.memoizedState=M===null?pl(f):{baseLanes:M.baseLanes|f,cachePool:null},b.childLanes=s.childLanes&~f,o.memoizedState=dl,g):(f=Ap(s,o,g.children,f),o.memoizedState=null,f)}function Nu(s,o){return o=zl({mode:"visible",children:o},s.mode,0,null),o.return=s,s.child=o}function Ap(s,o,f,g){var M=s.child;return s=M.sibling,f=or(M,{mode:"visible",children:f}),(o.mode&1)===0&&(f.lanes=g),f.return=o,f.sibling=null,s!==null&&(g=o.deletions,g===null?(o.deletions=[s],o.flags|=16):g.push(s)),o.child=f}function Cp(s,o,f,g,M){var b=o.mode;s=s.child;var z=s.sibling,G={mode:"hidden",children:f};return(b&1)===0&&o.child!==s?(f=o.child,f.childLanes=0,f.pendingProps=G,o.deletions=null):(f=or(s,G),f.subtreeFlags=s.subtreeFlags&14680064),z!==null?g=or(z,g):(g=kr(g,b,M,null),g.flags|=2),g.return=o,f.return=o,f.sibling=g,o.child=f,g}function ml(s,o,f,g){return g!==null&&_u(g),As(o,s.child,null,f),s=Nu(o,o.pendingProps.children),s.flags|=2,o.memoizedState=null,s}function Pp(s,o,f){s.lanes|=o;var g=s.alternate;g!==null&&(g.lanes|=o),fu(s.return,o,f)}function Ou(s,o,f,g,M){var b=s.memoizedState;b===null?s.memoizedState={isBackwards:o,rendering:null,renderingStartTime:0,last:g,tail:f,tailMode:M}:(b.isBackwards=o,b.rendering=null,b.renderingStartTime=0,b.last=g,b.tail=f,b.tailMode=M)}function Lp(s,o,f){var g=o.pendingProps,M=g.revealOrder,b=g.tail;if(yn(s,o,g.children,f),g=Ft.current,(g&2)!==0)g=g&1|2,o.flags|=128;else{if(s!==null&&(s.flags&128)!==0)e:for(s=o.child;s!==null;){if(s.tag===13)s.memoizedState!==null&&Pp(s,f,o);else if(s.tag===19)Pp(s,f,o);else if(s.child!==null){s.child.return=s,s=s.child;continue}if(s===o)break e;for(;s.sibling===null;){if(s.return===null||s.return===o)break e;s=s.return}s.sibling.return=s.return,s=s.sibling}g&=1}if(gt(Ft,g),(o.mode&1)===0)o.memoizedState=null;else switch(M){case"forwards":for(f=o.child,M=null;f!==null;)s=f.alternate,s!==null&&il(s)===null&&(M=f),f=f.sibling;f=M,f===null?(M=o.child,o.child=null):(M=f.sibling,f.sibling=null),Ou(o,!1,M,f,b);break;case"backwards":for(f=null,M=o.child,o.child=null;M!==null;){if(s=M.alternate,s!==null&&il(s)===null){o.child=M;break}s=M.sibling,M.sibling=f,f=M,M=s}Ou(o,!0,f,null,b);break;case"together":Ou(o,!1,null,null,void 0);break;default:o.memoizedState=null}return o.child}function Fi(s,o,f){if(s!==null&&(o.dependencies=s.dependencies),Is|=o.lanes,(f&o.childLanes)===0)return null;if(s!==null&&o.child!==s.child)throw Error(a(153));if(o.child!==null){for(s=o.child,f=or(s,s.pendingProps),o.child=f,f.return=o;s.sibling!==null;)s=s.sibling,f=f.sibling=or(s,s.pendingProps),f.return=o;f.sibling=null}return o.child}function Lx(s,o,f){switch(o.tag){case 3:bp(o),Es();break;case 5:qd(o);break;case 1:En(o.type)&&Ha(o);break;case 4:Mu(o,o.stateNode.containerInfo);break;case 10:Rd(o,o.type._context,o.memoizedProps.value);break;case 13:var g=o.memoizedState;if(g!==null)return g.dehydrated!==null?(gt(Ft,Ft.current&1),o.flags|=128,null):(f&o.child.childLanes)!==0?Ep(s,o,f):(gt(Ft,Ft.current&1),s=Fi(s,o,f),s!==null?s.sibling:null);gt(Ft,Ft.current&1);break;case 19:if(g=(f&o.childLanes)!==0,(s.flags&128)!==0){if(g)return Lp(s,o,f);o.flags|=128}var M=o.memoizedState;if(M!==null&&(M.rendering=null,M.tail=null,M.lastEffect=null),gt(Ft,Ft.current),g)break;return null;case 22:case 23:return o.lanes=0,Mp(s,o,f)}return Fi(s,o,f)}function Rx(s,o){switch(vu(o),o.tag){case 1:return En(o.type)&&Va(),s=o.flags,s&65536?(o.flags=s&-65537|128,o):null;case 3:return Ps(),st(nn),st(bt),bu(),s=o.flags,(s&65536)!==0&&(s&128)===0?(o.flags=s&-65537|128,o):null;case 5:return Su(o),null;case 13:if(st(Ft),s=o.memoizedState,s!==null&&s.dehydrated!==null){if(o.alternate===null)throw Error(a(340));Es()}return s=o.flags,s&65536?(o.flags=s&-65537|128,o):null;case 19:return st(Ft),null;case 4:return Ps(),null;case 10:return hu(o.type._context),null;case 22:case 23:return eh(),null;case 24:return null;default:return null}}var gl=!1,Dr=!1,Ix=typeof WeakSet=="function"?WeakSet:Set,Pe=null;function vl(s,o){var f=s.ref;if(f!==null)if(typeof f=="function")try{f(null)}catch(g){Pn(s,o,g)}else f.current=null}function Fu(s,o,f){try{f()}catch(g){Pn(s,o,g)}}var Rp=!1;function Dx(s,o){for(k(s.containerInfo),Pe=o;Pe!==null;)if(s=Pe,o=s.child,(s.subtreeFlags&1028)!==0&&o!==null)o.return=s,Pe=o;else for(;Pe!==null;){s=Pe;try{var f=s.alternate;if((s.flags&1024)!==0)switch(s.tag){case 0:case 11:case 15:break;case 1:if(f!==null){var g=f.memoizedProps,M=f.memoizedState,b=s.stateNode,z=b.getSnapshotBeforeUpdate(s.elementType===s.type?g:ai(s.type,g),M);b.__reactInternalSnapshotBeforeUpdate=z}break;case 3:Ze&&Ke(s.stateNode.containerInfo);break;case 5:case 6:case 4:case 17:break;default:throw Error(a(163))}}catch(G){Pn(s,s.return,G)}if(o=s.sibling,o!==null){o.return=s.return,Pe=o;break}Pe=s.return}return f=Rp,Rp=!1,f}function zr(s,o,f){var g=o.updateQueue;if(g=g!==null?g.lastEffect:null,g!==null){var M=g=g.next;do{if((M.tag&s)===s){var b=M.destroy;M.destroy=void 0,b!==void 0&&Fu(o,f,b)}M=M.next}while(M!==g)}}function No(s,o){if(o=o.updateQueue,o=o!==null?o.lastEffect:null,o!==null){var f=o=o.next;do{if((f.tag&s)===s){var g=f.create;f.destroy=g()}f=f.next}while(f!==o)}}function ku(s){var o=s.ref;if(o!==null){var f=s.stateNode;switch(s.tag){case 5:s=te(f);break;default:s=f}typeof o=="function"?o(s):o.current=s}}function Ip(s,o,f){if(vi&&typeof vi.onCommitFiberUnmount=="function")try{vi.onCommitFiberUnmount(qa,o)}catch{}switch(o.tag){case 0:case 11:case 14:case 15:if(s=o.updateQueue,s!==null&&(s=s.lastEffect,s!==null)){var g=s=s.next;do{var M=g,b=M.destroy;M=M.tag,b!==void 0&&((M&2)!==0||(M&4)!==0)&&Fu(o,f,b),g=g.next}while(g!==s)}break;case 1:if(vl(o,f),s=o.stateNode,typeof s.componentWillUnmount=="function")try{s.props=o.memoizedProps,s.state=o.memoizedState,s.componentWillUnmount()}catch(z){Pn(o,f,z)}break;case 5:vl(o,f);break;case 4:Ze?kp(s,o,f):he&&he&&(o=o.stateNode.containerInfo,f=Rt(o),Bn(o,f))}}function Dp(s,o,f){for(var g=o;;)if(Ip(s,g,f),g.child===null||Ze&&g.tag===4){if(g===o)break;for(;g.sibling===null;){if(g.return===null||g.return===o)return;g=g.return}g.sibling.return=g.return,g=g.sibling}else g.child.return=g,g=g.child}function zp(s){var o=s.alternate;o!==null&&(s.alternate=null,zp(o)),s.child=null,s.deletions=null,s.sibling=null,s.tag===5&&(o=s.stateNode,o!==null&&$e(o)),s.stateNode=null,s.return=null,s.dependencies=null,s.memoizedProps=null,s.memoizedState=null,s.pendingProps=null,s.stateNode=null,s.updateQueue=null}function Np(s){return s.tag===5||s.tag===3||s.tag===4}function Op(s){e:for(;;){for(;s.sibling===null;){if(s.return===null||Np(s.return))return null;s=s.return}for(s.sibling.return=s.return,s=s.sibling;s.tag!==5&&s.tag!==6&&s.tag!==18;){if(s.flags&2||s.child===null||s.tag===4)continue e;s.child.return=s,s=s.child}if(!(s.flags&2))return s.stateNode}}function Fp(s){if(Ze){e:{for(var o=s.return;o!==null;){if(Np(o))break e;o=o.return}throw Error(a(160))}var f=o;switch(f.tag){case 5:o=f.stateNode,f.flags&32&&(H(o),f.flags&=-33),f=Op(s),Bu(s,f,o);break;case 3:case 4:o=f.stateNode.containerInfo,f=Op(s),Uu(s,f,o);break;default:throw Error(a(161))}}}function Uu(s,o,f){var g=s.tag;if(g===5||g===6)s=s.stateNode,o?ve(f,s,o):Ce(f,s);else if(g!==4&&(s=s.child,s!==null))for(Uu(s,o,f),s=s.sibling;s!==null;)Uu(s,o,f),s=s.sibling}function Bu(s,o,f){var g=s.tag;if(g===5||g===6)s=s.stateNode,o?ee(f,s,o):Je(f,s);else if(g!==4&&(s=s.child,s!==null))for(Bu(s,o,f),s=s.sibling;s!==null;)Bu(s,o,f),s=s.sibling}function kp(s,o,f){for(var g=o,M=!1,b,z;;){if(!M){M=g.return;e:for(;;){if(M===null)throw Error(a(160));switch(b=M.stateNode,M.tag){case 5:z=!1;break e;case 3:b=b.containerInfo,z=!0;break e;case 4:b=b.containerInfo,z=!0;break e}M=M.return}M=!0}if(g.tag===5||g.tag===6)Dp(s,g,f),z?Qe(b,g.stateNode):Le(b,g.stateNode);else if(g.tag===18)z?Dt(b,g.stateNode):pt(b,g.stateNode);else if(g.tag===4){if(g.child!==null){b=g.stateNode.containerInfo,z=!0,g.child.return=g,g=g.child;continue}}else if(Ip(s,g,f),g.child!==null){g.child.return=g,g=g.child;continue}if(g===o)break;for(;g.sibling===null;){if(g.return===null||g.return===o)return;g=g.return,g.tag===4&&(M=!1)}g.sibling.return=g.return,g=g.sibling}}function Vu(s,o){if(Ze){switch(o.tag){case 0:case 11:case 14:case 15:zr(3,o,o.return),No(3,o),zr(5,o,o.return);return;case 1:return;case 5:var f=o.stateNode;if(f!=null){var g=o.memoizedProps;s=s!==null?s.memoizedProps:g;var M=o.type,b=o.updateQueue;o.updateQueue=null,b!==null&&B(f,b,M,s,g,o)}return;case 6:if(o.stateNode===null)throw Error(a(162));f=o.memoizedProps,de(o.stateNode,s!==null?s.memoizedProps:f,f);return;case 3:ne&&s!==null&&s.memoizedState.isDehydrated&&xt(o.stateNode.containerInfo);return;case 12:return;case 13:xl(o);return;case 19:xl(o);return;case 17:return}throw Error(a(163))}switch(o.tag){case 0:case 11:case 14:case 15:zr(3,o,o.return),No(3,o),zr(5,o,o.return);return;case 12:return;case 13:xl(o);return;case 19:xl(o);return;case 3:ne&&s!==null&&s.memoizedState.isDehydrated&&xt(o.stateNode.containerInfo);break;case 22:case 23:return}e:if(he){switch(o.tag){case 1:case 5:case 6:break e;case 3:case 4:o=o.stateNode,Bn(o.containerInfo,o.pendingChildren);break e}throw Error(a(163))}}function xl(s){var o=s.updateQueue;if(o!==null){s.updateQueue=null;var f=s.stateNode;f===null&&(f=s.stateNode=new Ix),o.forEach(function(g){var M=Gx.bind(null,s,g);f.has(g)||(f.add(g),g.then(M,M))})}}function zx(s,o){for(Pe=o;Pe!==null;){o=Pe;var f=o.deletions;if(f!==null)for(var g=0;g<f.length;g++){var M=f[g];try{var b=s;Ze?kp(b,M,o):Dp(b,M,o);var z=M.alternate;z!==null&&(z.return=null),M.return=null}catch(Ue){Pn(M,o,Ue)}}if(f=o.child,(o.subtreeFlags&12854)!==0&&f!==null)f.return=o,Pe=f;else for(;Pe!==null;){o=Pe;try{var G=o.flags;if(G&32&&Ze&&H(o.stateNode),G&512){var ie=o.alternate;if(ie!==null){var ye=ie.ref;ye!==null&&(typeof ye=="function"?ye(null):ye.current=null)}}if(G&8192)switch(o.tag){case 13:if(o.memoizedState!==null){var ze=o.alternate;(ze===null||ze.memoizedState===null)&&(Zu=rn())}break;case 22:var nt=o.memoizedState!==null,qe=o.alternate,At=qe!==null&&qe.memoizedState!==null;if(f=o,Ze){e:if(g=f,M=nt,b=null,Ze)for(var Be=g;;){if(Be.tag===5){if(b===null){b=Be;var pn=Be.stateNode;M?Ie(pn):ce(Be.stateNode,Be.memoizedProps)}}else if(Be.tag===6){if(b===null){var Kn=Be.stateNode;M?Me(Kn):xe(Kn,Be.memoizedProps)}}else if((Be.tag!==22&&Be.tag!==23||Be.memoizedState===null||Be===g)&&Be.child!==null){Be.child.return=Be,Be=Be.child;continue}if(Be===g)break;for(;Be.sibling===null;){if(Be.return===null||Be.return===g)break e;b===Be&&(b=null),Be=Be.return}b===Be&&(b=null),Be.sibling.return=Be.return,Be=Be.sibling}}if(nt&&!At&&(f.mode&1)!==0){Pe=f;for(var j=f.child;j!==null;){for(f=Pe=j;Pe!==null;){g=Pe;var X=g.child;switch(g.tag){case 0:case 11:case 14:case 15:zr(4,g,g.return);break;case 1:vl(g,g.return);var K=g.stateNode;if(typeof K.componentWillUnmount=="function"){var Re=g.return;try{K.props=g.memoizedProps,K.state=g.memoizedState,K.componentWillUnmount()}catch(Ue){Pn(g,Re,Ue)}}break;case 5:vl(g,g.return);break;case 22:if(g.memoizedState!==null){Vp(f);continue}}X!==null?(X.return=g,Pe=X):Vp(f)}j=j.sibling}}}switch(G&4102){case 2:Fp(o),o.flags&=-3;break;case 6:Fp(o),o.flags&=-3,Vu(o.alternate,o);break;case 4096:o.flags&=-4097;break;case 4100:o.flags&=-4097,Vu(o.alternate,o);break;case 4:Vu(o.alternate,o)}}catch(Ue){Pn(o,o.return,Ue)}if(f=o.sibling,f!==null){f.return=o.return,Pe=f;break}Pe=o.return}}}function Nx(s,o,f){Pe=s,Up(s)}function Up(s,o,f){for(var g=(s.mode&1)!==0;Pe!==null;){var M=Pe,b=M.child;if(M.tag===22&&g){var z=M.memoizedState!==null||gl;if(!z){var G=M.alternate,ie=G!==null&&G.memoizedState!==null||Dr;G=gl;var ye=Dr;if(gl=z,(Dr=ie)&&!ye)for(Pe=M;Pe!==null;)z=Pe,ie=z.child,z.tag===22&&z.memoizedState!==null?Hp(M):ie!==null?(ie.return=z,Pe=ie):Hp(M);for(;b!==null;)Pe=b,Up(b),b=b.sibling;Pe=M,gl=G,Dr=ye}Bp(s)}else(M.subtreeFlags&8772)!==0&&b!==null?(b.return=M,Pe=b):Bp(s)}}function Bp(s){for(;Pe!==null;){var o=Pe;if((o.flags&8772)!==0){var f=o.alternate;try{if((o.flags&8772)!==0)switch(o.tag){case 0:case 11:case 15:Dr||No(5,o);break;case 1:var g=o.stateNode;if(o.flags&4&&!Dr)if(f===null)g.componentDidMount();else{var M=o.elementType===o.type?f.memoizedProps:ai(o.type,f.memoizedProps);g.componentDidUpdate(M,f.memoizedState,g.__reactInternalSnapshotBeforeUpdate)}var b=o.updateQueue;b!==null&&zd(o,b,g);break;case 3:var z=o.updateQueue;if(z!==null){if(f=null,o.child!==null)switch(o.child.tag){case 5:f=te(o.child.stateNode);break;case 1:f=o.child.stateNode}zd(o,z,f)}break;case 5:var G=o.stateNode;f===null&&o.flags&4&&ke(G,o.type,o.memoizedProps,o);break;case 6:break;case 4:break;case 12:break;case 13:if(ne&&o.memoizedState===null){var ie=o.alternate;if(ie!==null){var ye=ie.memoizedState;if(ye!==null){var ze=ye.dehydrated;ze!==null&&dt(ze)}}}break;case 19:case 17:case 21:case 22:case 23:break;default:throw Error(a(163))}Dr||o.flags&512&&ku(o)}catch(nt){Pn(o,o.return,nt)}}if(o===s){Pe=null;break}if(f=o.sibling,f!==null){f.return=o.return,Pe=f;break}Pe=o.return}}function Vp(s){for(;Pe!==null;){var o=Pe;if(o===s){Pe=null;break}var f=o.sibling;if(f!==null){f.return=o.return,Pe=f;break}Pe=o.return}}function Hp(s){for(;Pe!==null;){var o=Pe;try{switch(o.tag){case 0:case 11:case 15:var f=o.return;try{No(4,o)}catch(ie){Pn(o,f,ie)}break;case 1:var g=o.stateNode;if(typeof g.componentDidMount=="function"){var M=o.return;try{g.componentDidMount()}catch(ie){Pn(o,M,ie)}}var b=o.return;try{ku(o)}catch(ie){Pn(o,b,ie)}break;case 5:var z=o.return;try{ku(o)}catch(ie){Pn(o,z,ie)}}}catch(ie){Pn(o,o.return,ie)}if(o===s){Pe=null;break}var G=o.sibling;if(G!==null){G.return=o.return,Pe=G;break}Pe=o.return}}var yl=0,_l=1,Ml=2,Sl=3,wl=4;if(typeof Symbol=="function"&&Symbol.for){var Oo=Symbol.for;yl=Oo("selector.component"),_l=Oo("selector.has_pseudo_class"),Ml=Oo("selector.role"),Sl=Oo("selector.test_id"),wl=Oo("selector.text")}function Hu(s){var o=_e(s);if(o!=null){if(typeof o.memoizedProps["data-testname"]!="string")throw Error(a(364));return o}if(s=wt(s),s===null)throw Error(a(362));return s.stateNode.current}function Gu(s,o){switch(o.$$typeof){case yl:if(s.type===o.value)return!0;break;case _l:e:{o=o.value,s=[s,0];for(var f=0;f<s.length;){var g=s[f++],M=s[f++],b=o[M];if(g.tag!==5||!Q(g)){for(;b!=null&&Gu(g,b);)M++,b=o[M];if(M===o.length){o=!0;break e}else for(g=g.child;g!==null;)s.push(g,M),g=g.sibling}}o=!1}return o;case Ml:if(s.tag===5&&ge(s.stateNode,o.value))return!0;break;case wl:if((s.tag===5||s.tag===6)&&(s=R(s),s!==null&&0<=s.indexOf(o.value)))return!0;break;case Sl:if(s.tag===5&&(s=s.memoizedProps["data-testname"],typeof s=="string"&&s.toLowerCase()===o.value.toLowerCase()))return!0;break;default:throw Error(a(365))}return!1}function Wu(s){switch(s.$$typeof){case yl:return"<"+(N(s.value)||"Unknown")+">";case _l:return":has("+(Wu(s)||"")+")";case Ml:return'[role="'+s.value+'"]';case wl:return'"'+s.value+'"';case Sl:return'[data-testname="'+s.value+'"]';default:throw Error(a(365))}}function Gp(s,o){var f=[];s=[s,0];for(var g=0;g<s.length;){var M=s[g++],b=s[g++],z=o[b];if(M.tag!==5||!Q(M)){for(;z!=null&&Gu(M,z);)b++,z=o[b];if(b===o.length)f.push(M);else for(M=M.child;M!==null;)s.push(M,b),M=M.sibling}}return f}function Xu(s,o){if(!mt)throw Error(a(363));s=Hu(s),s=Gp(s,o),o=[],s=Array.from(s);for(var f=0;f<s.length;){var g=s[f++];if(g.tag===5)Q(g)||o.push(g.stateNode);else for(g=g.child;g!==null;)s.push(g),g=g.sibling}return o}var Ox=Math.ceil,bl=c.ReactCurrentDispatcher,qu=c.ReactCurrentOwner,Ht=c.ReactCurrentBatchConfig,ut=0,Yt=null,Zt=null,ln=0,zn=0,Rs=Gn(0),Kt=0,Fo=null,Is=0,Tl=0,Yu=0,ko=null,An=null,Zu=0,ju=1/0;function Ds(){ju=rn()+500}var El=!1,Ju=null,nr=null,Al=!1,ir=null,Cl=0,Uo=0,Qu=null,Pl=-1,Ll=0;function _n(){return(ut&6)!==0?rn():Pl!==-1?Pl:Pl=rn()}function rr(s){return(s.mode&1)===0?1:(ut&2)!==0&&ln!==0?ln&-ln:xx.transition!==null?(Ll===0&&(s=Ga,Ga<<=1,(Ga&4194240)===0&&(Ga=64),Ll=s),Ll):(s=yt,s!==0?s:Te())}function Jn(s,o,f){if(50<Uo)throw Uo=0,Qu=null,Error(a(185));var g=Rl(s,o);return g===null?null:(So(g,o,f),((ut&2)===0||g!==Yt)&&(g===Yt&&((ut&2)===0&&(Tl|=o),Kt===4&&sr(g,ln)),Cn(g,f),o===1&&ut===0&&(s.mode&1)===0&&(Ds(),Ya&&yi())),g)}function Rl(s,o){s.lanes|=o;var f=s.alternate;for(f!==null&&(f.lanes|=o),f=s,s=s.return;s!==null;)s.childLanes|=o,f=s.alternate,f!==null&&(f.childLanes|=o),f=s,s=s.return;return f.tag===3?f.stateNode:null}function Cn(s,o){var f=s.callbackNode;cx(s,o);var g=Xa(s,s===Yt?ln:0);if(g===0)f!==null&&Pd(f),s.callbackNode=null,s.callbackPriority=0;else if(o=g&-g,s.callbackPriority!==o){if(f!=null&&Pd(f),o===1)s.tag===0?vx(Xp.bind(null,s)):Ld(Xp.bind(null,s)),We?He(function(){ut===0&&yi()}):su(ou,yi),f=null;else{switch(Cd(g)){case 1:f=ou;break;case 4:f=dx;break;case 16:f=au;break;case 536870912:f=px;break;default:f=au}f=em(f,Wp.bind(null,s))}s.callbackPriority=o,s.callbackNode=f}}function Wp(s,o){if(Pl=-1,Ll=0,(ut&6)!==0)throw Error(a(327));var f=s.callbackNode;if(Fr()&&s.callbackNode!==f)return null;var g=Xa(s,s===Yt?ln:0);if(g===0)return null;if((g&30)!==0||(g&s.expiredLanes)!==0||o)o=Il(s,g);else{o=g;var M=ut;ut|=2;var b=Zp();(Yt!==s||ln!==o)&&(Ds(),Nr(s,o));do try{Ux();break}catch(G){Yp(s,G)}while(1);uu(),bl.current=b,ut=M,Zt!==null?o=0:(Yt=null,ln=0,o=Kt)}if(o!==0){if(o===2&&(M=nu(s),M!==0&&(g=M,o=Ku(s,M))),o===1)throw f=Fo,Nr(s,0),sr(s,g),Cn(s,rn()),f;if(o===6)sr(s,g);else{if(M=s.current.alternate,(g&30)===0&&!Fx(M)&&(o=Il(s,g),o===2&&(b=nu(s),b!==0&&(g=b,o=Ku(s,b))),o===1))throw f=Fo,Nr(s,0),sr(s,g),Cn(s,rn()),f;switch(s.finishedWork=M,s.finishedLanes=g,o){case 0:case 1:throw Error(a(345));case 2:Or(s,An);break;case 3:if(sr(s,g),(g&130023424)===g&&(o=Zu+500-rn(),10<o)){if(Xa(s,0)!==0)break;if(M=s.suspendedLanes,(M&g)!==g){_n(),s.pingedLanes|=s.suspendedLanes&M;break}s.timeoutHandle=je(Or.bind(null,s,An),o);break}Or(s,An);break;case 4:if(sr(s,g),(g&4194240)===g)break;for(o=s.eventTimes,M=-1;0<g;){var z=31-oi(g);b=1<<z,z=o[z],z>M&&(M=z),g&=~b}if(g=M,g=rn()-g,g=(120>g?120:480>g?480:1080>g?1080:1920>g?1920:3e3>g?3e3:4320>g?4320:1960*Ox(g/1960))-g,10<g){s.timeoutHandle=je(Or.bind(null,s,An),g);break}Or(s,An);break;case 5:Or(s,An);break;default:throw Error(a(329))}}}return Cn(s,rn()),s.callbackNode===f?Wp.bind(null,s):null}function Ku(s,o){var f=ko;return s.current.memoizedState.isDehydrated&&(Nr(s,o).flags|=256),s=Il(s,o),s!==2&&(o=An,An=f,o!==null&&$u(o)),s}function $u(s){An===null?An=s:An.push.apply(An,s)}function Fx(s){for(var o=s;;){if(o.flags&16384){var f=o.updateQueue;if(f!==null&&(f=f.stores,f!==null))for(var g=0;g<f.length;g++){var M=f[g],b=M.getSnapshot;M=M.value;try{if(!xi(b(),M))return!1}catch{return!1}}}if(f=o.child,o.subtreeFlags&16384&&f!==null)f.return=o,o=f;else{if(o===s)break;for(;o.sibling===null;){if(o.return===null||o.return===s)return!0;o=o.return}o.sibling.return=o.return,o=o.sibling}}return!0}function sr(s,o){for(o&=~Yu,o&=~Tl,s.suspendedLanes|=o,s.pingedLanes&=~o,s=s.expirationTimes;0<o;){var f=31-oi(o),g=1<<f;s[f]=-1,o&=~g}}function Xp(s){if((ut&6)!==0)throw Error(a(327));Fr();var o=Xa(s,0);if((o&1)===0)return Cn(s,rn()),null;var f=Il(s,o);if(s.tag!==0&&f===2){var g=nu(s);g!==0&&(o=g,f=Ku(s,g))}if(f===1)throw f=Fo,Nr(s,0),sr(s,o),Cn(s,rn()),f;if(f===6)throw Error(a(345));return s.finishedWork=s.current.alternate,s.finishedLanes=o,Or(s,An),Cn(s,rn()),null}function qp(s){ir!==null&&ir.tag===0&&(ut&6)===0&&Fr();var o=ut;ut|=1;var f=Ht.transition,g=yt;try{if(Ht.transition=null,yt=1,s)return s()}finally{yt=g,Ht.transition=f,ut=o,(ut&6)===0&&yi()}}function eh(){zn=Rs.current,st(Rs)}function Nr(s,o){s.finishedWork=null,s.finishedLanes=0;var f=s.timeoutHandle;if(f!==Ye&&(s.timeoutHandle=Ye,Ge(f)),Zt!==null)for(f=Zt.return;f!==null;){var g=f;switch(vu(g),g.tag){case 1:g=g.type.childContextTypes,g!=null&&Va();break;case 3:Ps(),st(nn),st(bt),bu();break;case 5:Su(g);break;case 4:Ps();break;case 13:st(Ft);break;case 19:st(Ft);break;case 10:hu(g.type._context);break;case 22:case 23:eh()}f=f.return}if(Yt=s,Zt=s=or(s.current,null),ln=zn=o,Kt=0,Fo=null,Yu=Tl=Is=0,An=ko=null,_i!==null){for(o=0;o<_i.length;o++)if(f=_i[o],g=f.interleaved,g!==null){f.interleaved=null;var M=g.next,b=f.pending;if(b!==null){var z=b.next;b.next=M,g.next=z}f.pending=g}_i=null}return s}function Yp(s,o){do{var f=Zt;try{if(uu(),rl.current=ul,sl){for(var g=Ut.memoizedState;g!==null;){var M=g.queue;M!==null&&(M.pending=null),g=g.next}sl=!1}if(Ls=0,sn=hn=Ut=null,Co=!1,Po=0,qu.current=null,f===null||f.return===null){Kt=1,Fo=o,Zt=null;break}e:{var b=s,z=f.return,G=f,ie=o;if(o=ln,G.flags|=32768,ie!==null&&typeof ie=="object"&&typeof ie.then=="function"){var ye=ie,ze=G,nt=ze.tag;if((ze.mode&1)===0&&(nt===0||nt===11||nt===15)){var qe=ze.alternate;qe?(ze.updateQueue=qe.updateQueue,ze.memoizedState=qe.memoizedState,ze.lanes=qe.lanes):(ze.updateQueue=null,ze.memoizedState=null)}var At=pp(z);if(At!==null){At.flags&=-257,mp(At,z,G,b,o),At.mode&1&&dp(b,ye,o),o=At,ie=ye;var Be=o.updateQueue;if(Be===null){var pn=new Set;pn.add(ie),o.updateQueue=pn}else Be.add(ie);break e}else{if((o&1)===0){dp(b,ye,o),th();break e}ie=Error(a(426))}}else if(Nt&&G.mode&1){var Kn=pp(z);if(Kn!==null){(Kn.flags&65536)===0&&(Kn.flags|=256),mp(Kn,z,G,b,o),_u(ie);break e}}b=ie,Kt!==4&&(Kt=2),ko===null?ko=[b]:ko.push(b),ie=Ru(ie,G),G=z;do{switch(G.tag){case 3:G.flags|=65536,o&=-o,G.lanes|=o;var j=hp(G,ie,o);Dd(G,j);break e;case 1:b=ie;var X=G.type,K=G.stateNode;if((G.flags&128)===0&&(typeof X.getDerivedStateFromError=="function"||K!==null&&typeof K.componentDidCatch=="function"&&(nr===null||!nr.has(K)))){G.flags|=65536,o&=-o,G.lanes|=o;var Re=fp(G,b,o);Dd(G,Re);break e}}G=G.return}while(G!==null)}Jp(f)}catch(Ue){o=Ue,Zt===f&&f!==null&&(Zt=f=f.return);continue}break}while(1)}function Zp(){var s=bl.current;return bl.current=ul,s===null?ul:s}function th(){(Kt===0||Kt===3||Kt===2)&&(Kt=4),Yt===null||(Is&268435455)===0&&(Tl&268435455)===0||sr(Yt,ln)}function Il(s,o){var f=ut;ut|=2;var g=Zp();Yt===s&&ln===o||Nr(s,o);do try{kx();break}catch(M){Yp(s,M)}while(1);if(uu(),ut=f,bl.current=g,Zt!==null)throw Error(a(261));return Yt=null,ln=0,Kt}function kx(){for(;Zt!==null;)jp(Zt)}function Ux(){for(;Zt!==null&&!hx();)jp(Zt)}function jp(s){var o=$p(s.alternate,s,zn);s.memoizedProps=s.pendingProps,o===null?Jp(s):Zt=o,qu.current=null}function Jp(s){var o=s;do{var f=o.alternate;if(s=o.return,(o.flags&32768)===0){if(f=Cx(f,o,zn),f!==null){Zt=f;return}}else{if(f=Rx(f,o),f!==null){f.flags&=32767,Zt=f;return}if(s!==null)s.flags|=32768,s.subtreeFlags=0,s.deletions=null;else{Kt=6,Zt=null;return}}if(o=o.sibling,o!==null){Zt=o;return}Zt=o=s}while(o!==null);Kt===0&&(Kt=5)}function Or(s,o){var f=yt,g=Ht.transition;try{Ht.transition=null,yt=1,Bx(s,o,f)}finally{Ht.transition=g,yt=f}return null}function Bx(s,o,f){do Fr();while(ir!==null);if((ut&6)!==0)throw Error(a(327));var g=s.finishedWork,M=s.finishedLanes;if(g===null)return null;if(s.finishedWork=null,s.finishedLanes=0,g===s.current)throw Error(a(177));s.callbackNode=null,s.callbackPriority=0;var b=g.lanes|g.childLanes;if(ux(s,b),s===Yt&&(Zt=Yt=null,ln=0),(g.subtreeFlags&2064)===0&&(g.flags&2064)===0||Al||(Al=!0,em(au,function(){return Fr(),null})),b=(g.flags&15990)!==0,(g.subtreeFlags&15990)!==0||b){b=Ht.transition,Ht.transition=null;var z=yt;yt=1;var G=ut;ut|=4,qu.current=null,Dx(s,g),zx(s,g),U(s.containerInfo),s.current=g,Nx(g),fx(),ut=G,yt=z,Ht.transition=b}else s.current=g;if(Al&&(Al=!1,ir=s,Cl=M),b=s.pendingLanes,b===0&&(nr=null),mx(g.stateNode),Cn(s,rn()),o!==null)for(f=s.onRecoverableError,g=0;g<o.length;g++)f(o[g]);if(El)throw El=!1,s=Ju,Ju=null,s;return(Cl&1)!==0&&s.tag!==0&&Fr(),b=s.pendingLanes,(b&1)!==0?s===Qu?Uo++:(Uo=0,Qu=s):Uo=0,yi(),null}function Fr(){if(ir!==null){var s=Cd(Cl),o=Ht.transition,f=yt;try{if(Ht.transition=null,yt=16>s?16:s,ir===null)var g=!1;else{if(s=ir,ir=null,Cl=0,(ut&6)!==0)throw Error(a(331));var M=ut;for(ut|=4,Pe=s.current;Pe!==null;){var b=Pe,z=b.child;if((Pe.flags&16)!==0){var G=b.deletions;if(G!==null){for(var ie=0;ie<G.length;ie++){var ye=G[ie];for(Pe=ye;Pe!==null;){var ze=Pe;switch(ze.tag){case 0:case 11:case 15:zr(8,ze,b)}var nt=ze.child;if(nt!==null)nt.return=ze,Pe=nt;else for(;Pe!==null;){ze=Pe;var qe=ze.sibling,At=ze.return;if(zp(ze),ze===ye){Pe=null;break}if(qe!==null){qe.return=At,Pe=qe;break}Pe=At}}}var Be=b.alternate;if(Be!==null){var pn=Be.child;if(pn!==null){Be.child=null;do{var Kn=pn.sibling;pn.sibling=null,pn=Kn}while(pn!==null)}}Pe=b}}if((b.subtreeFlags&2064)!==0&&z!==null)z.return=b,Pe=z;else e:for(;Pe!==null;){if(b=Pe,(b.flags&2048)!==0)switch(b.tag){case 0:case 11:case 15:zr(9,b,b.return)}var j=b.sibling;if(j!==null){j.return=b.return,Pe=j;break e}Pe=b.return}}var X=s.current;for(Pe=X;Pe!==null;){z=Pe;var K=z.child;if((z.subtreeFlags&2064)!==0&&K!==null)K.return=z,Pe=K;else e:for(z=X;Pe!==null;){if(G=Pe,(G.flags&2048)!==0)try{switch(G.tag){case 0:case 11:case 15:No(9,G)}}catch(Ue){Pn(G,G.return,Ue)}if(G===z){Pe=null;break e}var Re=G.sibling;if(Re!==null){Re.return=G.return,Pe=Re;break e}Pe=G.return}}if(ut=M,yi(),vi&&typeof vi.onPostCommitFiberRoot=="function")try{vi.onPostCommitFiberRoot(qa,s)}catch{}g=!0}return g}finally{yt=f,Ht.transition=o}}return!1}function Qp(s,o,f){o=Ru(f,o),o=hp(s,o,1),tr(s,o),o=_n(),s=Rl(s,1),s!==null&&(So(s,1,o),Cn(s,o))}function Pn(s,o,f){if(s.tag===3)Qp(s,s,f);else for(;o!==null;){if(o.tag===3){Qp(o,s,f);break}else if(o.tag===1){var g=o.stateNode;if(typeof o.type.getDerivedStateFromError=="function"||typeof g.componentDidCatch=="function"&&(nr===null||!nr.has(g))){s=Ru(f,s),s=fp(o,s,1),tr(o,s),s=_n(),o=Rl(o,1),o!==null&&(So(o,1,s),Cn(o,s));break}}o=o.return}}function Vx(s,o,f){var g=s.pingCache;g!==null&&g.delete(o),o=_n(),s.pingedLanes|=s.suspendedLanes&f,Yt===s&&(ln&f)===f&&(Kt===4||Kt===3&&(ln&130023424)===ln&&500>rn()-Zu?Nr(s,0):Yu|=f),Cn(s,o)}function Kp(s,o){o===0&&((s.mode&1)===0?o=1:(o=Wa,Wa<<=1,(Wa&130023424)===0&&(Wa=4194304)));var f=_n();s=Rl(s,o),s!==null&&(So(s,o,f),Cn(s,f))}function Hx(s){var o=s.memoizedState,f=0;o!==null&&(f=o.retryLane),Kp(s,f)}function Gx(s,o){var f=0;switch(s.tag){case 13:var g=s.stateNode,M=s.memoizedState;M!==null&&(f=M.retryLane);break;case 19:g=s.stateNode;break;default:throw Error(a(314))}g!==null&&g.delete(o),Kp(s,f)}var $p;$p=function(s,o,f){if(s!==null)if(s.memoizedProps!==o.pendingProps||nn.current)Dn=!0;else{if((s.lanes&f)===0&&(o.flags&128)===0)return Dn=!1,Lx(s,o,f);Dn=(s.flags&131072)!==0}else Dn=!1,Nt&&(o.flags&1048576)!==0&&Ud(o,tl,o.index);switch(o.lanes=0,o.tag){case 2:var g=o.type;s!==null&&(s.alternate=null,o.alternate=null,o.flags|=2),s=o.pendingProps;var M=Ri(o,bt.current);ws(o,f),M=Eu(null,o,g,s,M,f);var b=Au();return o.flags|=1,typeof M=="object"&&M!==null&&typeof M.render=="function"&&M.$$typeof===void 0?(o.tag=1,o.memoizedState=null,o.updateQueue=null,En(g)?(b=!0,Ha(o)):b=!1,o.memoizedState=M.state!==null&&M.state!==void 0?M.state:null,du(o),M.updater=$a,o.stateNode=M,M._reactInternals=o,mu(o,g,s,f),o=zu(null,o,g,!0,b,f)):(o.tag=0,Nt&&b&&gu(o),yn(null,o,M,f),o=o.child),o;case 16:g=o.elementType;e:{switch(s!==null&&(s.alternate=null,o.alternate=null,o.flags|=2),s=o.pendingProps,M=g._init,g=M(g._payload),o.type=g,M=o.tag=Xx(g),s=ai(g,s),M){case 0:o=Du(null,o,g,s,f);break e;case 1:o=wp(null,o,g,s,f);break e;case 11:o=xp(null,o,g,s,f);break e;case 14:o=yp(null,o,g,ai(g.type,s),f);break e}throw Error(a(306,g,""))}return o;case 0:return g=o.type,M=o.pendingProps,M=o.elementType===g?M:ai(g,M),Du(s,o,g,M,f);case 1:return g=o.type,M=o.pendingProps,M=o.elementType===g?M:ai(g,M),wp(s,o,g,M,f);case 3:e:{if(bp(o),s===null)throw Error(a(387));g=o.pendingProps,b=o.memoizedState,M=b.element,Id(s,o),Ka(o,g,null,f);var z=o.memoizedState;if(g=z.element,ne&&b.isDehydrated)if(b={element:g,isDehydrated:!1,cache:z.cache,transitions:z.transitions},o.updateQueue.baseState=b,o.memoizedState=b,o.flags&256){M=Error(a(423)),o=Tp(s,o,g,f,M);break e}else if(g!==M){M=Error(a(424)),o=Tp(s,o,g,f,M);break e}else for(ne&&(In=Y(o.stateNode.containerInfo),Rn=o,Nt=!0,li=null,wo=!1),f=Xd(o,null,g,f),o.child=f;f;)f.flags=f.flags&-3|4096,f=f.sibling;else{if(Es(),g===M){o=Fi(s,o,f);break e}yn(s,o,g,f)}o=o.child}return o;case 5:return qd(o),s===null&&yu(o),g=o.type,M=o.pendingProps,b=s!==null?s.memoizedProps:null,z=M.children,Ve(g,M)?z=null:b!==null&&Ve(g,b)&&(o.flags|=32),Sp(s,o),yn(s,o,z,f),o.child;case 6:return s===null&&yu(o),null;case 13:return Ep(s,o,f);case 4:return Mu(o,o.stateNode.containerInfo),g=o.pendingProps,s===null?o.child=As(o,null,g,f):yn(s,o,g,f),o.child;case 11:return g=o.type,M=o.pendingProps,M=o.elementType===g?M:ai(g,M),xp(s,o,g,M,f);case 7:return yn(s,o,o.pendingProps,f),o.child;case 8:return yn(s,o,o.pendingProps.children,f),o.child;case 12:return yn(s,o,o.pendingProps.children,f),o.child;case 10:e:{if(g=o.type._context,M=o.pendingProps,b=o.memoizedProps,z=M.value,Rd(o,g,z),b!==null)if(xi(b.value,z)){if(b.children===M.children&&!nn.current){o=Fi(s,o,f);break e}}else for(b=o.child,b!==null&&(b.return=o);b!==null;){var G=b.dependencies;if(G!==null){z=b.child;for(var ie=G.firstContext;ie!==null;){if(ie.context===g){if(b.tag===1){ie=Di(-1,f&-f),ie.tag=2;var ye=b.updateQueue;if(ye!==null){ye=ye.shared;var ze=ye.pending;ze===null?ie.next=ie:(ie.next=ze.next,ze.next=ie),ye.pending=ie}}b.lanes|=f,ie=b.alternate,ie!==null&&(ie.lanes|=f),fu(b.return,f,o),G.lanes|=f;break}ie=ie.next}}else if(b.tag===10)z=b.type===o.type?null:b.child;else if(b.tag===18){if(z=b.return,z===null)throw Error(a(341));z.lanes|=f,G=z.alternate,G!==null&&(G.lanes|=f),fu(z,f,o),z=b.sibling}else z=b.child;if(z!==null)z.return=b;else for(z=b;z!==null;){if(z===o){z=null;break}if(b=z.sibling,b!==null){b.return=z.return,z=b;break}z=z.return}b=z}yn(s,o,M.children,f),o=o.child}return o;case 9:return M=o.type,g=o.pendingProps.children,ws(o,f),M=Xn(M),g=g(M),o.flags|=1,yn(s,o,g,f),o.child;case 14:return g=o.type,M=ai(g,o.pendingProps),M=ai(g.type,M),yp(s,o,g,M,f);case 15:return _p(s,o,o.type,o.pendingProps,f);case 17:return g=o.type,M=o.pendingProps,M=o.elementType===g?M:ai(g,M),s!==null&&(s.alternate=null,o.alternate=null,o.flags|=2),o.tag=1,En(g)?(s=!0,Ha(o)):s=!1,ws(o,f),Fd(o,g,M),mu(o,g,M,f),zu(null,o,g,!0,s,f);case 19:return Lp(s,o,f);case 22:return Mp(s,o,f)}throw Error(a(156,o.tag))};function em(s,o){return su(s,o)}function Wx(s,o,f,g){this.tag=s,this.key=f,this.sibling=this.child=this.return=this.stateNode=this.type=this.elementType=null,this.index=0,this.ref=null,this.pendingProps=o,this.dependencies=this.memoizedState=this.updateQueue=this.memoizedProps=null,this.mode=g,this.subtreeFlags=this.flags=0,this.deletions=null,this.childLanes=this.lanes=0,this.alternate=null}function Qn(s,o,f,g){return new Wx(s,o,f,g)}function nh(s){return s=s.prototype,!(!s||!s.isReactComponent)}function Xx(s){if(typeof s=="function")return nh(s)?1:0;if(s!=null){if(s=s.$$typeof,s===x)return 11;if(s===w)return 14}return 2}function or(s,o){var f=s.alternate;return f===null?(f=Qn(s.tag,o,s.key,s.mode),f.elementType=s.elementType,f.type=s.type,f.stateNode=s.stateNode,f.alternate=s,s.alternate=f):(f.pendingProps=o,f.type=s.type,f.flags=0,f.subtreeFlags=0,f.deletions=null),f.flags=s.flags&14680064,f.childLanes=s.childLanes,f.lanes=s.lanes,f.child=s.child,f.memoizedProps=s.memoizedProps,f.memoizedState=s.memoizedState,f.updateQueue=s.updateQueue,o=s.dependencies,f.dependencies=o===null?null:{lanes:o.lanes,firstContext:o.firstContext},f.sibling=s.sibling,f.index=s.index,f.ref=s.ref,f}function Dl(s,o,f,g,M,b){var z=2;if(g=s,typeof s=="function")nh(s)&&(z=1);else if(typeof s=="string")z=5;else e:switch(s){case d:return kr(f.children,M,b,o);case p:z=8,M|=8;break;case m:return s=Qn(12,f,o,M|2),s.elementType=m,s.lanes=b,s;case _:return s=Qn(13,f,o,M),s.elementType=_,s.lanes=b,s;case S:return s=Qn(19,f,o,M),s.elementType=S,s.lanes=b,s;case E:return zl(f,M,b,o);default:if(typeof s=="object"&&s!==null)switch(s.$$typeof){case v:z=10;break e;case y:z=9;break e;case x:z=11;break e;case w:z=14;break e;case T:z=16,g=null;break e}throw Error(a(130,s==null?s:typeof s,""))}return o=Qn(z,f,o,M),o.elementType=s,o.type=g,o.lanes=b,o}function kr(s,o,f,g){return s=Qn(7,s,g,o),s.lanes=f,s}function zl(s,o,f,g){return s=Qn(22,s,g,o),s.elementType=E,s.lanes=f,s.stateNode={},s}function ih(s,o,f){return s=Qn(6,s,null,o),s.lanes=f,s}function rh(s,o,f){return o=Qn(4,s.children!==null?s.children:[],s.key,o),o.lanes=f,o.stateNode={containerInfo:s.containerInfo,pendingChildren:null,implementation:s.implementation},o}function qx(s,o,f,g,M){this.tag=o,this.containerInfo=s,this.finishedWork=this.pingCache=this.current=this.pendingChildren=null,this.timeoutHandle=Ye,this.callbackNode=this.pendingContext=this.context=null,this.callbackPriority=0,this.eventTimes=iu(0),this.expirationTimes=iu(-1),this.entangledLanes=this.finishedLanes=this.mutableReadLanes=this.expiredLanes=this.pingedLanes=this.suspendedLanes=this.pendingLanes=0,this.entanglements=iu(0),this.identifierPrefix=g,this.onRecoverableError=M,ne&&(this.mutableSourceEagerHydrationData=null)}function tm(s,o,f,g,M,b,z,G,ie){return s=new qx(s,o,f,G,ie),o===1?(o=1,b===!0&&(o|=8)):o=0,b=Qn(3,null,null,o),s.current=b,b.stateNode=s,b.memoizedState={element:g,isDehydrated:f,cache:null,transitions:null},du(b),s}function nm(s){if(!s)return Wn;s=s._reactInternals;e:{if(L(s)!==s||s.tag!==1)throw Error(a(170));var o=s;do{switch(o.tag){case 3:o=o.stateNode.context;break e;case 1:if(En(o.type)){o=o.stateNode.__reactInternalMemoizedMergedChildContext;break e}}o=o.return}while(o!==null);throw Error(a(171))}if(s.tag===1){var f=s.type;if(En(f))return Ed(s,f,o)}return o}function im(s){var o=s._reactInternals;if(o===void 0)throw typeof s.render=="function"?Error(a(188)):(s=Object.keys(s).join(","),Error(a(268,s)));return s=se(o),s===null?null:s.stateNode}function rm(s,o){if(s=s.memoizedState,s!==null&&s.dehydrated!==null){var f=s.retryLane;s.retryLane=f!==0&&f<o?f:o}}function sh(s,o){rm(s,o),(s=s.alternate)&&rm(s,o)}function Yx(s){return s=se(s),s===null?null:s.stateNode}function Zx(){return null}return t.attemptContinuousHydration=function(s){if(s.tag===13){var o=_n();Jn(s,134217728,o),sh(s,134217728)}},t.attemptHydrationAtCurrentPriority=function(s){if(s.tag===13){var o=_n(),f=rr(s);Jn(s,f,o),sh(s,f)}},t.attemptSynchronousHydration=function(s){switch(s.tag){case 3:var o=s.stateNode;if(o.current.memoizedState.isDehydrated){var f=Mo(o.pendingLanes);f!==0&&(ru(o,f|1),Cn(o,rn()),(ut&6)===0&&(Ds(),yi()))}break;case 13:var g=_n();qp(function(){return Jn(s,1,g)}),sh(s,1)}},t.batchedUpdates=function(s,o){var f=ut;ut|=1;try{return s(o)}finally{ut=f,ut===0&&(Ds(),Ya&&yi())}},t.createComponentSelector=function(s){return{$$typeof:yl,value:s}},t.createContainer=function(s,o,f,g,M,b,z){return tm(s,o,!1,null,f,g,M,b,z)},t.createHasPseudoClassSelector=function(s){return{$$typeof:_l,value:s}},t.createHydrationContainer=function(s,o,f,g,M,b,z,G,ie){return s=tm(f,g,!0,s,M,b,z,G,ie),s.context=nm(null),f=s.current,g=_n(),M=rr(f),b=Di(g,M),b.callback=o!=null?o:null,tr(f,b),s.current.lanes=M,So(s,M,g),Cn(s,g),s},t.createPortal=function(s,o,f){var g=3<arguments.length&&arguments[3]!==void 0?arguments[3]:null;return{$$typeof:h,key:g==null?null:""+g,children:s,containerInfo:o,implementation:f}},t.createRoleSelector=function(s){return{$$typeof:Ml,value:s}},t.createTestNameSelector=function(s){return{$$typeof:Sl,value:s}},t.createTextSelector=function(s){return{$$typeof:wl,value:s}},t.deferredUpdates=function(s){var o=yt,f=Ht.transition;try{return Ht.transition=null,yt=16,s()}finally{yt=o,Ht.transition=f}},t.discreteUpdates=function(s,o,f,g,M){var b=yt,z=Ht.transition;try{return Ht.transition=null,yt=1,s(o,f,g,M)}finally{yt=b,Ht.transition=z,ut===0&&Ds()}},t.findAllNodes=Xu,t.findBoundingRects=function(s,o){if(!mt)throw Error(a(363));o=Xu(s,o),s=[];for(var f=0;f<o.length;f++)s.push(O(o[f]));for(o=s.length-1;0<o;o--){f=s[o];for(var g=f.x,M=g+f.width,b=f.y,z=b+f.height,G=o-1;0<=G;G--)if(o!==G){var ie=s[G],ye=ie.x,ze=ye+ie.width,nt=ie.y,qe=nt+ie.height;if(g>=ye&&b>=nt&&M<=ze&&z<=qe){s.splice(o,1);break}else if(g!==ye||f.width!==ie.width||qe<b||nt>z){if(!(b!==nt||f.height!==ie.height||ze<g||ye>M)){ye>g&&(ie.width+=ye-g,ie.x=g),ze<M&&(ie.width=M-ye),s.splice(o,1);break}}else{nt>b&&(ie.height+=nt-b,ie.y=b),qe<z&&(ie.height=z-nt),s.splice(o,1);break}}}return s},t.findHostInstance=im,t.findHostInstanceWithNoPortals=function(s){return s=q(s),s=s!==null?W(s):null,s===null?null:s.stateNode},t.findHostInstanceWithWarning=function(s){return im(s)},t.flushControlled=function(s){var o=ut;ut|=1;var f=Ht.transition,g=yt;try{Ht.transition=null,yt=1,s()}finally{yt=g,Ht.transition=f,ut=o,ut===0&&(Ds(),yi())}},t.flushPassiveEffects=Fr,t.flushSync=qp,t.focusWithin=function(s,o){if(!mt)throw Error(a(363));for(s=Hu(s),o=Gp(s,o),o=Array.from(o),s=0;s<o.length;){var f=o[s++];if(!Q(f)){if(f.tag===5&&Se(f.stateNode))return!0;for(f=f.child;f!==null;)o.push(f),f=f.sibling}}return!1},t.getCurrentUpdatePriority=function(){return yt},t.getFindAllNodesFailureDescription=function(s,o){if(!mt)throw Error(a(363));var f=0,g=[];s=[Hu(s),0];for(var M=0;M<s.length;){var b=s[M++],z=s[M++],G=o[z];if((b.tag!==5||!Q(b))&&(Gu(b,G)&&(g.push(Wu(G)),z++,z>f&&(f=z)),z<o.length))for(b=b.child;b!==null;)s.push(b,z),b=b.sibling}if(f<o.length){for(s=[];f<o.length;f++)s.push(Wu(o[f]));return`findAllNodes was able to match part of the selector:
  `+(g.join(" > ")+`

No matching component was found for:
  `)+s.join(" > ")}return null},t.getPublicRootInstance=function(s){if(s=s.current,!s.child)return null;switch(s.child.tag){case 5:return te(s.child.stateNode);default:return s.child.stateNode}},t.injectIntoDevTools=function(s){if(s={bundleType:s.bundleType,version:s.version,rendererPackageName:s.rendererPackageName,rendererConfig:s.rendererConfig,overrideHookState:null,overrideHookStateDeletePath:null,overrideHookStateRenamePath:null,overrideProps:null,overridePropsDeletePath:null,overridePropsRenamePath:null,setErrorHandler:null,setSuspenseHandler:null,scheduleUpdate:null,currentDispatcherRef:c.ReactCurrentDispatcher,findHostInstanceByFiber:Yx,findFiberByHostInstance:s.findFiberByHostInstance||Zx,findHostInstancesForRefresh:null,scheduleRefresh:null,scheduleRoot:null,setRefreshHandler:null,getCurrentFiber:null,reconcilerVersion:"18.0.0-fc46dba67-20220329"},typeof __REACT_DEVTOOLS_GLOBAL_HOOK__>"u")s=!1;else{var o=__REACT_DEVTOOLS_GLOBAL_HOOK__;if(o.isDisabled||!o.supportsFiber)s=!0;else{try{qa=o.inject(s),vi=o}catch{}s=!!o.checkDCE}}return s},t.isAlreadyRendering=function(){return!1},t.observeVisibleRects=function(s,o,f,g){if(!mt)throw Error(a(363));s=Xu(s,o);var M=Ae(s,f,g).disconnect;return{disconnect:function(){M()}}},t.registerMutableSourceForHydration=function(s,o){var f=o._getVersion;f=f(o._source),s.mutableSourceEagerHydrationData==null?s.mutableSourceEagerHydrationData=[o,f]:s.mutableSourceEagerHydrationData.push(o,f)},t.runWithPriority=function(s,o){var f=yt;try{return yt=s,o()}finally{yt=f}},t.shouldError=function(){return null},t.shouldSuspend=function(){return!1},t.updateContainer=function(s,o,f,g){var M=o.current,b=_n(),z=rr(M);return f=nm(f),o.context===null?o.context=f:o.pendingContext=f,o=Di(b,z),o.payload={element:s},g=g===void 0?null:g,g!==null&&(o.callback=g),tr(M,o),s=Jn(M,z,b),s!==null&&Qa(s,M,z),z},t};(function(l){l.exports=oE})(Hv);const aE=Jx(Hv.exports);var Pg,Lg;const Wv=l=>l&&l.isOrthographicCamera,lE=l=>l&&l.hasOwnProperty("current"),Fa=typeof window<"u"&&((Pg=window.document)!=null&&Pg.createElement||((Lg=window.navigator)==null?void 0:Lg.product)==="ReactNative")?Ne.exports.useLayoutEffect:Ne.exports.useEffect;function Xv(l){const e=Ne.exports.useRef(l);return Fa(()=>void(e.current=l),[l]),e}function cE({set:l}){return Fa(()=>(l(new Promise(()=>null)),()=>l(!1)),[l]),null}class qv extends Ne.exports.Component{constructor(...e){super(...e),this.state={error:!1}}componentDidCatch(e){this.props.set(e)}render(){return this.state.error?null:this.props.children}}qv.getDerivedStateFromError=()=>({error:!0});const Yv="__default",uE=l=>l&&!!l.memoized&&!!l.changes;function Zv(l){const e=typeof window<"u"?window.devicePixelRatio:1;return Array.isArray(l)?Math.min(Math.max(l[0],e),l[1]):l}const Zo=l=>{var e;return(e=l.__r3f)==null?void 0:e.root.getState()},Wt={obj:l=>l===Object(l)&&!Wt.arr(l)&&typeof l!="function",fun:l=>typeof l=="function",str:l=>typeof l=="string",num:l=>typeof l=="number",boo:l=>typeof l=="boolean",und:l=>l===void 0,arr:l=>Array.isArray(l),equ(l,e,{arrays:t="shallow",objects:n="reference",strict:i=!0}={}){if(typeof l!=typeof e||!!l!=!!e)return!1;if(Wt.str(l)||Wt.num(l))return l===e;const r=Wt.obj(l);if(r&&n==="reference")return l===e;const a=Wt.arr(l);if(a&&t==="reference")return l===e;if((a||r)&&l===e)return!0;let c;for(c in l)if(!(c in e))return!1;for(c in i?e:l)if(l[c]!==e[c])return!1;if(Wt.und(c)){if(a&&l.length===0&&e.length===0||r&&Object.keys(l).length===0&&Object.keys(e).length===0)return!0;if(l!==e)return!1}return!0}};function hE(l){l.dispose&&l.type!=="Scene"&&l.dispose();for(const e in l)e.dispose==null||e.dispose(),delete l[e]}function $s(l,e){const t=l;return(e!=null&&e.primitive||!t.__r3f)&&(t.__r3f={type:"",root:null,previousAttach:null,memoizedProps:{},eventCount:0,handlers:{},objects:[],parent:null,...e}),l}function zf(l,e){let t=l;if(e.includes("-")){const n=e.split("-"),i=n.pop();return t=n.reduce((r,a)=>r[a],l),{target:t,key:i}}else return{target:t,key:e}}const Rg=/-\d+$/;function Vh(l,e,t){if(Wt.str(t)){if(Rg.test(t)){const r=t.replace(Rg,""),{target:a,key:c}=zf(l,r);Array.isArray(a[c])||(a[c]=[])}const{target:n,key:i}=zf(l,t);e.__r3f.previousAttach=n[i],n[i]=e}else e.__r3f.previousAttach=t(l,e)}function Ig(l,e,t){var n,i;if(Wt.str(t)){const{target:r,key:a}=zf(l,t),c=e.__r3f.previousAttach;c===void 0?delete r[a]:r[a]=c}else(n=e.__r3f)==null||n.previousAttach==null||n.previousAttach(l,e);(i=e.__r3f)==null||delete i.previousAttach}function jv(l,{children:e,key:t,ref:n,...i},{children:r,key:a,ref:c,...u}={},h=!1){var d;const p=(d=l==null?void 0:l.__r3f)!=null?d:{},m=Object.entries(i),v=[];if(h){const x=Object.keys(u);for(let _=0;_<x.length;_++)i.hasOwnProperty(x[_])||m.unshift([x[_],Yv+"remove"])}m.forEach(([x,_])=>{var S;if((S=l.__r3f)!=null&&S.primitive&&x==="object"||Wt.equ(_,u[x]))return;if(/^on(Pointer|Click|DoubleClick|ContextMenu|Wheel)/.test(x))return v.push([x,_,!0,[]]);let w=[];x.includes("-")&&(w=x.split("-")),v.push([x,_,!1,w]);for(const T in i){const E=i[T];T.startsWith(`${x}-`)&&v.push([T,E,!1,T.split("-")])}});const y={...i};return p.memoizedProps&&p.memoizedProps.args&&(y.args=p.memoizedProps.args),p.memoizedProps&&p.memoizedProps.attach&&(y.attach=p.memoizedProps.attach),{memoized:y,changes:v}}function Hh(l,e){var t,n,i;const r=(t=l.__r3f)!=null?t:{},a=r.root,c=(n=a==null||a.getState==null?void 0:a.getState())!=null?n:{},{memoized:u,changes:h}=uE(e)?e:jv(l,e),d=r.eventCount;l.__r3f&&(l.__r3f.memoizedProps=u);for(let v=0;v<h.length;v++){let[y,x,_,S]=h[v],w=l,T=w[y];if(S.length&&(T=S.reduce((E,C)=>E[C],l),!(T&&T.set))){const[E,...C]=S.reverse();w=C.reverse().reduce((P,N)=>P[N],l),y=E}if(x===Yv+"remove")if(T&&T.constructor){var p;x=new T.constructor(...(p=u.args)!=null?p:[])}else if(w.constructor){var m;const E=new w.constructor(...(m=w.__r3f.memoizedProps.args)!=null?m:[]);x=E[T],E.dispose&&E.dispose()}else x=0;if(_)x?r.handlers[y]=x:delete r.handlers[y],r.eventCount=Object.keys(r.handlers).length;else if(T&&T.set&&(T.copy||T instanceof ls)){if(Array.isArray(x))T.fromArray?T.fromArray(x):T.set(...x);else if(T.copy&&x&&x.constructor&&T.constructor.name===x.constructor.name)T.copy(x);else if(x!==void 0){const E=T instanceof De;!E&&T.setScalar?T.setScalar(x):T instanceof ls&&x instanceof ls?T.mask=x.mask:T.set(x),!("ColorManagement"in Fc)&&!c.linear&&E&&T.convertSRGBToLinear()}}else w[y]=x,!c.linear&&w[y]instanceof Qt&&(w[y].encoding=Lt);eo(l)}if(r.parent&&c.internal&&l.raycast&&d!==r.eventCount){const v=c.internal.interaction.indexOf(l);v>-1&&c.internal.interaction.splice(v,1),r.eventCount&&c.internal.interaction.push(l)}return h.length&&(i=l.__r3f)!=null&&i.parent&&Nf(l),l}function eo(l){var e,t;const n=(e=l.__r3f)==null||(t=e.root)==null||t.getState==null?void 0:t.getState();n&&n.internal.frames===0&&n.invalidate()}function Nf(l){l.onUpdate==null||l.onUpdate(l)}function fE(l,e){l.manual||(Wv(l)?(l.left=e.width/-2,l.right=e.width/2,l.top=e.height/2,l.bottom=e.height/-2):l.aspect=e.width/e.height,l.updateProjectionMatrix(),l.updateMatrixWorld())}function dE(l,e,t){const n=t.pop(),i=t.reduce((r,a)=>r[a],l);return i[n]=e}function Gh(l){return(l.eventObject||l.object).uuid+"/"+l.index+l.instanceId}function pE(){var l;const e=typeof self<"u"&&self||typeof window<"u"&&window;if(!e)return is.exports.DefaultEventPriority;switch((l=e.event)==null?void 0:l.type){case"click":case"contextmenu":case"dblclick":case"pointercancel":case"pointerdown":case"pointerup":return is.exports.DiscreteEventPriority;case"pointermove":case"pointerout":case"pointerover":case"pointerenter":case"pointerleave":case"wheel":return is.exports.ContinuousEventPriority;default:return is.exports.DefaultEventPriority}}function Jv(l,e,t,n){const i=t.get(e);i&&(t.delete(e),t.size===0&&(l.delete(n),i.target.releasePointerCapture(n)))}function mE(l,e){const{internal:t}=l.getState();t.interaction=t.interaction.filter(n=>n!==e),t.initialHits=t.initialHits.filter(n=>n!==e),t.hovered.forEach((n,i)=>{(n.eventObject===e||n.object===e)&&t.hovered.delete(i)}),t.capturedMap.forEach((n,i)=>{Jv(t.capturedMap,e,n,i)})}function gE(l){function e(u){const{internal:h}=l.getState(),d=u.offsetX-h.initialClick[0],p=u.offsetY-h.initialClick[1];return Math.round(Math.sqrt(d*d+p*p))}function t(u){return u.filter(h=>["Move","Over","Enter","Out","Leave"].some(d=>{var p;return(p=h.__r3f)==null?void 0:p.handlers["onPointer"+d]}))}function n(u,h){const d=l.getState(),p=new Set,m=[],v=h?h(d.internal.interaction):d.internal.interaction;for(let S=0;S<v.length;S++){const w=Zo(v[S]);w&&(w.raycaster.camera=void 0)}d.previousRoot||d.events.compute==null||d.events.compute(u,d);function y(S){const w=Zo(S);if(!w||!w.events.enabled||w.raycaster.camera===null)return[];if(w.raycaster.camera===void 0){var T;w.events.compute==null||w.events.compute(u,w,(T=w.previousRoot)==null?void 0:T.getState()),w.raycaster.camera===void 0&&(w.raycaster.camera=null)}return w.raycaster.camera?w.raycaster.intersectObject(S,!0):[]}let x=v.flatMap(y).sort((S,w)=>{const T=Zo(S.object),E=Zo(w.object);return!T||!E?0:E.events.priority-T.events.priority||S.distance-w.distance}).filter(S=>{const w=Gh(S);return p.has(w)?!1:(p.add(w),!0)});d.events.filter&&(x=d.events.filter(x,d));for(const S of x){let w=S.object;for(;w;){var _;(_=w.__r3f)!=null&&_.eventCount&&m.push({...S,eventObject:w}),w=w.parent}}if("pointerId"in u&&d.internal.capturedMap.has(u.pointerId))for(let S of d.internal.capturedMap.get(u.pointerId).values())m.push(S.intersection);return m}function i(u,h,d,p){const m=l.getState();if(u.length){const v={stopped:!1};for(const y of u){const x=Zo(y.object)||m,{raycaster:_,pointer:S,camera:w,internal:T}=x,E=new I(S.x,S.y,0).unproject(w),C=F=>{var q,se;return(q=(se=T.capturedMap.get(F))==null?void 0:se.has(y.eventObject))!=null?q:!1},P=F=>{const q={intersection:y,target:h.target};T.capturedMap.has(F)?T.capturedMap.get(F).set(y.eventObject,q):T.capturedMap.set(F,new Map([[y.eventObject,q]])),h.target.setPointerCapture(F)},N=F=>{const q=T.capturedMap.get(F);q&&Jv(T.capturedMap,y.eventObject,q,F)};let A={};for(let F in h){let q=h[F];typeof q!="function"&&(A[F]=q)}let L={...y,...A,pointer:S,intersections:u,stopped:v.stopped,delta:d,unprojectedPoint:E,ray:_.ray,camera:w,stopPropagation(){const F="pointerId"in h&&T.capturedMap.get(h.pointerId);if((!F||F.has(y.eventObject))&&(L.stopped=v.stopped=!0,T.hovered.size&&Array.from(T.hovered.values()).find(q=>q.eventObject===y.eventObject))){const q=u.slice(0,u.indexOf(y));r([...q,y])}},target:{hasPointerCapture:C,setPointerCapture:P,releasePointerCapture:N},currentTarget:{hasPointerCapture:C,setPointerCapture:P,releasePointerCapture:N},nativeEvent:h};if(p(L),v.stopped===!0)break}}return u}function r(u){const{internal:h}=l.getState();for(const d of h.hovered.values())if(!u.length||!u.find(p=>p.object===d.object&&p.index===d.index&&p.instanceId===d.instanceId)){const m=d.eventObject.__r3f,v=m==null?void 0:m.handlers;if(h.hovered.delete(Gh(d)),m!=null&&m.eventCount){const y={...d,intersections:u};v.onPointerOut==null||v.onPointerOut(y),v.onPointerLeave==null||v.onPointerLeave(y)}}}function a(u,h){for(let d=0;d<h.length;d++){const p=h[d].__r3f;p==null||p.handlers.onPointerMissed==null||p.handlers.onPointerMissed(u)}}function c(u){switch(u){case"onPointerLeave":case"onPointerCancel":return()=>r([]);case"onLostPointerCapture":return h=>{const{internal:d}=l.getState();"pointerId"in h&&!d.capturedMap.has(h.pointerId)&&(d.capturedMap.delete(h.pointerId),r([]))}}return function(d){const{onPointerMissed:p,internal:m}=l.getState();m.lastEvent.current=d;const v=u==="onPointerMove",y=u==="onClick"||u==="onContextMenu"||u==="onDoubleClick",_=n(d,v?t:void 0),S=y?e(d):0;u==="onPointerDown"&&(m.initialClick=[d.offsetX,d.offsetY],m.initialHits=_.map(T=>T.eventObject)),y&&!_.length&&S<=2&&(a(d,m.interaction),p&&p(d)),v&&r(_);function w(T){const E=T.eventObject,C=E.__r3f,P=C==null?void 0:C.handlers;if(!!(C!=null&&C.eventCount))if(v){if(P.onPointerOver||P.onPointerEnter||P.onPointerOut||P.onPointerLeave){const N=Gh(T),A=m.hovered.get(N);A?A.stopped&&T.stopPropagation():(m.hovered.set(N,T),P.onPointerOver==null||P.onPointerOver(T),P.onPointerEnter==null||P.onPointerEnter(T))}P.onPointerMove==null||P.onPointerMove(T)}else{const N=P[u];N?(!y||m.initialHits.includes(E))&&(a(d,m.interaction.filter(A=>!m.initialHits.includes(A))),N(T)):y&&m.initialHits.includes(E)&&a(d,m.interaction.filter(A=>!m.initialHits.includes(A)))}}i(_,d,S,w)}}return{handlePointer:c}}let Of={},vE=l=>void(Of={...Of,...l});function xE(l,e){function t(d,{args:p=[],attach:m,...v},y){let x=`${d[0].toUpperCase()}${d.slice(1)}`,_;if(d==="primitive"){if(v.object===void 0)throw new Error("R3F: Primitives without 'object' are invalid!");const S=v.object;_=$s(S,{type:d,root:y,attach:m,primitive:!0})}else{const S=Of[x];if(!S)throw new Error(`R3F: ${x} is not part of the THREE namespace! Did you forget to extend? See: https://docs.pmnd.rs/react-three-fiber/api/objects#using-3rd-party-objects-declaratively`);if(!Array.isArray(p))throw new Error("R3F: The args prop must be an array!");_=$s(new S(...p),{type:d,root:y,attach:m,memoizedProps:{args:p}})}return _.__r3f.attach===void 0&&(_ instanceof ct?_.__r3f.attach="geometry":_ instanceof un&&(_.__r3f.attach="material")),x!=="inject"&&Hh(_,v),_}function n(d,p){let m=!1;if(p){var v,y;(v=p.__r3f)!=null&&v.attach?Vh(d,p,p.__r3f.attach):p.isObject3D&&d.isObject3D&&(d.add(p),m=!0),m||(y=d.__r3f)==null||y.objects.push(p),p.__r3f||$s(p,{}),p.__r3f.parent=d,Nf(p),eo(p)}}function i(d,p,m){let v=!1;if(p){var y,x;if((y=p.__r3f)!=null&&y.attach)Vh(d,p,p.__r3f.attach);else if(p.isObject3D&&d.isObject3D){p.parent=d,p.dispatchEvent({type:"added"});const _=d.children.filter(w=>w!==p),S=_.indexOf(m);d.children=[..._.slice(0,S),p,..._.slice(S)],v=!0}v||(x=d.__r3f)==null||x.objects.push(p),p.__r3f||$s(p,{}),p.__r3f.parent=d,Nf(p),eo(p)}}function r(d,p,m=!1){d&&[...d].forEach(v=>a(p,v,m))}function a(d,p,m){if(p){var v,y,x;if(p.__r3f&&(p.__r3f.parent=null),(v=d.__r3f)!=null&&v.objects&&(d.__r3f.objects=d.__r3f.objects.filter(E=>E!==p)),(y=p.__r3f)!=null&&y.attach)Ig(d,p,p.__r3f.attach);else if(p.isObject3D&&d.isObject3D){var _;d.remove(p),(_=p.__r3f)!=null&&_.root&&mE(p.__r3f.root,p)}const w=(x=p.__r3f)==null?void 0:x.primitive,T=m===void 0?p.dispose!==null&&!w:m;if(!w){var S;r((S=p.__r3f)==null?void 0:S.objects,p,T),r(p.children,p,T)}p.__r3f&&(delete p.__r3f.root,delete p.__r3f.objects,delete p.__r3f.handlers,delete p.__r3f.memoizedProps,w||delete p.__r3f),T&&p.dispose&&p.type!=="Scene"&&kc.exports.unstable_scheduleCallback(kc.exports.unstable_IdlePriority,()=>{try{p.dispose()}catch{}}),eo(d)}}function c(d,p,m,v){var y;const x=(y=d.__r3f)==null?void 0:y.parent;if(!x)return;const _=t(p,m,d.__r3f.root);if(d.children){for(const S of d.children)S.__r3f&&n(_,S);d.children=d.children.filter(S=>!S.__r3f)}d.__r3f.objects.forEach(S=>n(_,S)),d.__r3f.objects=[],a(x,d),n(x,_),_.raycast&&_.__r3f.eventCount&&_.__r3f.root.getState().internal.interaction.push(_),[v,v.alternate].forEach(S=>{S!==null&&(S.stateNode=_,S.ref&&(typeof S.ref=="function"?S.ref(_):S.ref.current=_))})}const u=()=>console.warn("Text is not allowed in the R3F tree! This could be stray whitespace or characters.");return{reconciler:aE({createInstance:t,removeChild:a,appendChild:n,appendInitialChild:n,insertBefore:i,supportsMutation:!0,isPrimaryRenderer:!1,supportsPersistence:!1,supportsHydration:!1,noTimeout:-1,appendChildToContainer:(d,p)=>{if(!p)return;const m=d.getState().scene;!m.__r3f||(m.__r3f.root=d,n(m,p))},removeChildFromContainer:(d,p)=>{!p||a(d.getState().scene,p)},insertInContainerBefore:(d,p,m)=>{if(!p||!m)return;const v=d.getState().scene;!v.__r3f||i(v,p,m)},getRootHostContext:()=>null,getChildHostContext:d=>d,finalizeInitialChildren(d){var p;const m=(p=d==null?void 0:d.__r3f)!=null?p:{};return Boolean(m.handlers)},prepareUpdate(d,p,m,v){if(d.__r3f.primitive&&v.object&&v.object!==d)return[!0];{const{args:y=[],children:x,..._}=v,{args:S=[],children:w,...T}=m;if(!Array.isArray(y))throw new Error("R3F: the args prop must be an array!");if(y.some((C,P)=>C!==S[P]))return[!0];const E=jv(d,_,T,!0);return E.changes.length?[!1,E]:null}},commitUpdate(d,[p,m],v,y,x,_){p?c(d,v,x,_):Hh(d,m)},commitMount(d,p,m,v){var y;const x=(y=d.__r3f)!=null?y:{};d.raycast&&x.handlers&&x.eventCount&&d.__r3f.root.getState().internal.interaction.push(d)},getPublicInstance:d=>d,prepareForCommit:()=>null,preparePortalMount:d=>$s(d.getState().scene),resetAfterCommit:()=>{},shouldSetTextContent:()=>!1,clearContainer:()=>!1,hideInstance(d){var p;const{attach:m,parent:v}=(p=d.__r3f)!=null?p:{};m&&v&&Ig(v,d,m),d.isObject3D&&(d.visible=!1),eo(d)},unhideInstance(d,p){var m;const{attach:v,parent:y}=(m=d.__r3f)!=null?m:{};v&&y&&Vh(y,d,v),(d.isObject3D&&p.visible==null||p.visible)&&(d.visible=!0),eo(d)},createTextInstance:u,hideTextInstance:u,unhideTextInstance:u,getCurrentEventPriority:()=>e?e():is.exports.DefaultEventPriority,beforeActiveInstanceBlur:()=>{},afterActiveInstanceBlur:()=>{},detachDeletedInstance:()=>{},now:typeof performance<"u"&&Wt.fun(performance.now)?performance.now:Wt.fun(Date.now)?Date.now:()=>0,scheduleTimeout:Wt.fun(setTimeout)?setTimeout:void 0,cancelTimeout:Wt.fun(clearTimeout)?clearTimeout:void 0}),applyProps:Hh}}const Qv=l=>!!(l!=null&&l.render),Kv=Ne.exports.createContext(null),yE=(l,e)=>{const t=sE((c,u)=>{const h=new I,d=new I,p=new I;function m(S=u().camera,w=d,T=u().size){const{width:E,height:C,top:P,left:N}=T,A=E/C;w instanceof I?p.copy(w):p.set(...w);const L=S.getWorldPosition(h).distanceTo(p);if(Wv(S))return{width:E/S.zoom,height:C/S.zoom,top:P,left:N,factor:1,distance:L,aspect:A};{const F=S.fov*Math.PI/180,q=2*Math.tan(F/2)*L,se=q*(E/C);return{width:se,height:q,top:P,left:N,factor:E/se,distance:L,aspect:A}}}let v;const y=S=>c(w=>({performance:{...w.performance,current:S}})),x=new fe;return{set:c,get:u,gl:null,camera:null,raycaster:null,events:{priority:1,enabled:!0,connected:!1},xr:null,invalidate:(S=1)=>l(u(),S),advance:(S,w)=>e(S,w,u()),legacy:!1,linear:!1,flat:!1,scene:$s(new ed),controls:null,clock:new yd,pointer:x,mouse:x,frameloop:"always",onPointerMissed:void 0,performance:{current:1,min:.5,max:1,debounce:200,regress:()=>{const S=u();v&&clearTimeout(v),S.performance.current!==S.performance.min&&y(S.performance.min),v=setTimeout(()=>y(u().performance.max),S.performance.debounce)}},size:{width:0,height:0,top:0,left:0,updateStyle:!1},viewport:{initialDpr:0,dpr:0,width:0,height:0,top:0,left:0,aspect:0,distance:0,factor:0,getCurrentViewport:m},setEvents:S=>c(w=>({...w,events:{...w.events,...S}})),setSize:(S,w,T,E,C)=>{const P=u().camera,N={width:S,height:w,top:E||0,left:C||0,updateStyle:T};c(A=>({size:N,viewport:{...A.viewport,...m(P,d,N)}}))},setDpr:S=>c(w=>{const T=Zv(S);return{viewport:{...w.viewport,dpr:T,initialDpr:w.viewport.initialDpr||T}}}),setFrameloop:(S="always")=>{const w=u().clock;w.stop(),w.elapsedTime=0,S!=="never"&&(w.start(),w.elapsedTime=0),c(()=>({frameloop:S}))},previousRoot:void 0,internal:{active:!1,priority:0,frames:0,lastEvent:Ne.exports.createRef(),interaction:[],hovered:new Map,subscribers:[],initialClick:[0,0],initialHits:[],capturedMap:new Map,subscribe:(S,w,T)=>{const E=u().internal;return E.priority=E.priority+(w>0?1:0),E.subscribers.push({ref:S,priority:w,store:T}),E.subscribers=E.subscribers.sort((C,P)=>C.priority-P.priority),()=>{const C=u().internal;C!=null&&C.subscribers&&(C.priority=C.priority-(w>0?1:0),C.subscribers=C.subscribers.filter(P=>P.ref!==S))}}}}}),n=t.getState();let i=n.size,r=n.viewport.dpr,a=n.camera;return t.subscribe(()=>{const{camera:c,size:u,viewport:h,gl:d,set:p}=t.getState();(u!==i||h.dpr!==r)&&(i=u,r=h.dpr,fE(c,u),d.setPixelRatio(h.dpr),d.setSize(u.width,u.height,u.updateStyle)),c!==a&&(a=c,p(m=>({viewport:{...m.viewport,...m.viewport.getCurrentViewport(c)}})))}),t.subscribe(c=>l(c)),t};let Sc,_E=new Set,ME=new Set,SE=new Set;function Wh(l,e){if(!!l.size)for(const{callback:t}of l.values())t(e)}function jo(l,e){switch(l){case"before":return Wh(_E,e);case"after":return Wh(ME,e);case"tail":return Wh(SE,e)}}let Xh,qh;function Yh(l,e,t){let n=e.clock.getDelta();for(e.frameloop==="never"&&typeof l=="number"&&(n=l-e.clock.elapsedTime,e.clock.oldTime=e.clock.elapsedTime,e.clock.elapsedTime=l),Xh=e.internal.subscribers,Sc=0;Sc<Xh.length;Sc++)qh=Xh[Sc],qh.ref.current(qh.store.getState(),n,t);return!e.internal.priority&&e.gl.render&&e.gl.render(e.scene,e.camera),e.internal.frames=Math.max(0,e.internal.frames-1),e.frameloop==="always"?1:e.internal.frames}function wE(l){let e=!1,t,n,i;function r(u){n=requestAnimationFrame(r),e=!0,t=0,jo("before",u);for(const d of l.values()){var h;i=d.store.getState(),i.internal.active&&(i.frameloop==="always"||i.internal.frames>0)&&!((h=i.gl.xr)!=null&&h.isPresenting)&&(t+=Yh(u,i))}if(jo("after",u),t===0)return jo("tail",u),e=!1,cancelAnimationFrame(n)}function a(u,h=1){var d;if(!u)return l.forEach(p=>a(p.store.getState()),h);(d=u.gl.xr)!=null&&d.isPresenting||!u.internal.active||u.frameloop==="never"||(u.internal.frames=Math.min(60,u.internal.frames+h),e||(e=!0,requestAnimationFrame(r)))}function c(u,h=!0,d,p){if(h&&jo("before",u),d)Yh(u,d,p);else for(const m of l.values())Yh(u,m.store.getState());h&&jo("after",u)}return{loop:r,invalidate:a,advance:c}}function $v(){const l=Ne.exports.useContext(Kv);if(!l)throw new Error("R3F: Hooks can only be used within the Canvas component!");return l}function Yr(l=t=>t,e){return $v()(l,e)}function ex(l,e=0){const t=$v(),n=t.getState().internal.subscribe,i=Xv(l);return Fa(()=>n(i,e,t),[e,n,t]),null}const uo=new Map,{invalidate:Dg,advance:zg}=wE(uo),{reconciler:Uc,applyProps:wc}=xE(uo,pE),Ks={objects:"shallow",strict:!1},bE=(l,e)=>{const t=typeof l=="function"?l(e):l;return Qv(t)?t:new $f({powerPreference:"high-performance",canvas:e,antialias:!0,alpha:!0,...l})};function TE(l){return l instanceof HTMLCanvasElement}function EE(l,e){if(e)return e;if(TE(l)&&l.parentElement){const{width:t,height:n,top:i,left:r}=l.parentElement.getBoundingClientRect();return{width:t,height:n,top:i,left:r}}return{width:0,height:0,top:0,left:0}}function AE(l){const e=uo.get(l),t=e==null?void 0:e.fiber,n=e==null?void 0:e.store;e&&console.warn("R3F.createRoot should only be called once!");const i=typeof reportError=="function"?reportError:console.error,r=n||yE(Dg,zg),a=t||Uc.createContainer(r,is.exports.ConcurrentRoot,null,!1,null,"",i,null);e||uo.set(l,{fiber:a,store:r});let c,u=!1;return{configure(h={}){let{gl:d,size:p,events:m,onCreated:v,shadows:y=!1,linear:x=!1,flat:_=!1,legacy:S=!1,orthographic:w=!1,frameloop:T="always",dpr:E=[1,2],performance:C,raycaster:P,camera:N,onPointerMissed:A}=h,L=r.getState(),F=L.gl;L.gl||L.set({gl:F=bE(d,l)});let q=L.raycaster;q||L.set({raycaster:q=new Bv});const{params:se,...J}=P||{};if(Wt.equ(J,q,Ks)||wc(q,{...J}),Wt.equ(se,q.params,Ks)||wc(q,{params:{...q.params,...se}}),!L.camera){const pe=N instanceof Sa,V=pe?N:w?new _r(0,0,0,0,.1,1e3):new Ot(75,0,.1,1e3);pe||(V.position.z=5,N&&wc(V,N),N!=null&&N.rotation||V.lookAt(0,0,0)),L.set({camera:V})}if(!L.xr){const pe=(U,le)=>{const re=r.getState();re.frameloop!=="never"&&zg(U,!0,re,le)},V=()=>{const U=r.getState();U.gl.xr.enabled=U.gl.xr.isPresenting,U.gl.xr.setAnimationLoop(U.gl.xr.isPresenting?pe:null),U.gl.xr.isPresenting||Dg(U)},k={connect(){const U=r.getState().gl;U.xr.addEventListener("sessionstart",V),U.xr.addEventListener("sessionend",V)},disconnect(){const U=r.getState().gl;U.xr.removeEventListener("sessionstart",V),U.xr.removeEventListener("sessionend",V)}};F.xr&&k.connect(),L.set({xr:k})}if(F.shadowMap){const pe=Wt.boo(y);if(pe&&F.shadowMap.enabled!==y||!Wt.equ(y,F.shadowMap,Ks)){const V=F.shadowMap.enabled;F.shadowMap.enabled=!!y,pe?F.shadowMap.type=Uf:Object.assign(F.shadowMap,y),V!==F.shadowMap.enabled&&(F.shadowMap.needsUpdate=!0)}}"ColorManagement"in Fc&&dE(Fc,S,["ColorManagement","legacyMode"]);const W=x?ji:Lt,$=_?di:Hf;F.outputEncoding!==W&&(F.outputEncoding=W),F.toneMapping!==$&&(F.toneMapping=$),L.legacy!==S&&L.set(()=>({legacy:S})),L.linear!==x&&L.set(()=>({linear:x})),L.flat!==_&&L.set(()=>({flat:_})),d&&!Wt.fun(d)&&!Qv(d)&&!Wt.equ(d,F,Ks)&&wc(F,d),m&&!L.events.handlers&&L.set({events:m(r)}),E&&L.viewport.dpr!==Zv(E)&&L.setDpr(E);const te=EE(l,p);return Wt.equ(te,L.size,Ks)||L.setSize(te.width,te.height,te.updateStyle,te.top,te.left),L.frameloop!==T&&L.setFrameloop(T),L.onPointerMissed||L.set({onPointerMissed:A}),C&&!Wt.equ(C,L.performance,Ks)&&L.set(pe=>({performance:{...pe.performance,...C}})),c=v,u=!0,this},render(h){return u||this.configure(),Uc.updateContainer(Vt(CE,{store:r,children:h,onCreated:c,rootElement:l}),a,null,()=>{}),r},unmount(){tx(l)}}}function CE({store:l,children:e,onCreated:t,rootElement:n}){return Fa(()=>{const i=l.getState();i.set(r=>({internal:{...r.internal,active:!0}})),t&&t(i),l.getState().events.connected||i.events.connect==null||i.events.connect(n)},[]),Ne.exports.createElement(Kv.Provider,{value:l},e)}function tx(l,e){const t=uo.get(l),n=t==null?void 0:t.fiber;if(n){const i=t==null?void 0:t.store.getState();i&&(i.internal.active=!1),Uc.updateContainer(null,n,null,()=>{i&&setTimeout(()=>{try{var r,a,c,u;i.events.disconnect==null||i.events.disconnect(),(r=i.gl)==null||(a=r.renderLists)==null||a.dispose==null||a.dispose(),(c=i.gl)==null||c.forceContextLoss==null||c.forceContextLoss(),(u=i.gl)!=null&&u.xr&&i.xr.disconnect(),hE(i),uo.delete(l),e&&e(l)}catch{}},500)})}}Uc.injectIntoDevTools({bundleType:0,rendererPackageName:"@react-three/fiber",version:Ne.exports.version});function Ff(l,e,t){var n,i,r,a,c;e==null&&(e=100);function u(){var d=Date.now()-a;d<e&&d>=0?n=setTimeout(u,e-d):(n=null,t||(c=l.apply(r,i),r=i=null))}var h=function(){r=this,i=arguments,a=Date.now();var d=t&&!n;return n||(n=setTimeout(u,e)),d&&(c=l.apply(r,i),r=i=null),c};return h.clear=function(){n&&(clearTimeout(n),n=null)},h.flush=function(){n&&(c=l.apply(r,i),r=i=null,clearTimeout(n),n=null)},h}Ff.debounce=Ff;var Ng=Ff;function PE(l){let{debounce:e,scroll:t,polyfill:n,offsetSize:i}=l===void 0?{debounce:0,scroll:!1,offsetSize:!1}:l;const r=n||(typeof window>"u"?class{}:window.ResizeObserver);if(!r)throw new Error("This browser does not support ResizeObserver out of the box. See: https://github.com/react-spring/react-use-measure/#resize-observer-polyfills");const[a,c]=Ne.exports.useState({left:0,top:0,width:0,height:0,bottom:0,right:0,x:0,y:0}),u=Ne.exports.useRef({element:null,scrollContainers:null,resizeObserver:null,lastBounds:a}),h=e?typeof e=="number"?e:e.scroll:null,d=e?typeof e=="number"?e:e.resize:null,p=Ne.exports.useRef(!1);Ne.exports.useEffect(()=>(p.current=!0,()=>void(p.current=!1)));const[m,v,y]=Ne.exports.useMemo(()=>{const w=()=>{if(!u.current.element)return;const{left:T,top:E,width:C,height:P,bottom:N,right:A,x:L,y:F}=u.current.element.getBoundingClientRect(),q={left:T,top:E,width:C,height:P,bottom:N,right:A,x:L,y:F};u.current.element instanceof HTMLElement&&i&&(q.height=u.current.element.offsetHeight,q.width=u.current.element.offsetWidth),Object.freeze(q),p.current&&!DE(u.current.lastBounds,q)&&c(u.current.lastBounds=q)};return[w,d?Ng(w,d):w,h?Ng(w,h):w]},[c,i,h,d]);function x(){u.current.scrollContainers&&(u.current.scrollContainers.forEach(w=>w.removeEventListener("scroll",y,!0)),u.current.scrollContainers=null),u.current.resizeObserver&&(u.current.resizeObserver.disconnect(),u.current.resizeObserver=null)}function _(){!u.current.element||(u.current.resizeObserver=new r(y),u.current.resizeObserver.observe(u.current.element),t&&u.current.scrollContainers&&u.current.scrollContainers.forEach(w=>w.addEventListener("scroll",y,{capture:!0,passive:!0})))}const S=w=>{!w||w===u.current.element||(x(),u.current.element=w,u.current.scrollContainers=nx(w),_())};return RE(y,Boolean(t)),LE(v),Ne.exports.useEffect(()=>{x(),_()},[t,y,v]),Ne.exports.useEffect(()=>x,[]),[S,a,m]}function LE(l){Ne.exports.useEffect(()=>{const e=l;return window.addEventListener("resize",e),()=>void window.removeEventListener("resize",e)},[l])}function RE(l,e){Ne.exports.useEffect(()=>{if(e){const t=l;return window.addEventListener("scroll",t,{capture:!0,passive:!0}),()=>void window.removeEventListener("scroll",t,!0)}},[l,e])}function nx(l){const e=[];if(!l||l===document.body)return e;const{overflow:t,overflowX:n,overflowY:i}=window.getComputedStyle(l);return[t,n,i].some(r=>r==="auto"||r==="scroll")&&e.push(l),[...e,...nx(l.parentElement)]}const IE=["x","y","top","bottom","left","right","width","height"],DE=(l,e)=>IE.every(t=>l[t]===e[t]);var zE=Object.defineProperty,NE=Object.defineProperties,OE=Object.getOwnPropertyDescriptors,Og=Object.getOwnPropertySymbols,FE=Object.prototype.hasOwnProperty,kE=Object.prototype.propertyIsEnumerable,Fg=(l,e,t)=>e in l?zE(l,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):l[e]=t,kg=(l,e)=>{for(var t in e||(e={}))FE.call(e,t)&&Fg(l,t,e[t]);if(Og)for(var t of Og(e))kE.call(e,t)&&Fg(l,t,e[t]);return l},UE=(l,e)=>NE(l,OE(e));function wd(l,e,t){if(!l)return;if(t(l)===!0)return l;let n=e?l.return:l.child;for(;n;){const i=wd(n,e,t);if(i)return i;n=e?null:n.sibling}}function ix(l){try{return Object.defineProperties(l,{_currentRenderer:{get(){return null},set(){}},_currentRenderer2:{get(){return null},set(){}}})}catch{return l}}const bd=ix(Ne.exports.createContext(null));class rx extends Ne.exports.Component{render(){return Vt(bd.Provider,{value:this._reactInternals,children:this.props.children})}}const{ReactCurrentOwner:BE,ReactCurrentDispatcher:VE}=Ne.exports.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;function HE(){const l=Ne.exports.useContext(bd);if(!l)throw new Error("its-fine: useFiber must be called within a <FiberProvider />!");const e=Ne.exports.useId();return Ne.exports.useMemo(()=>{var n;return(n=BE.current)!=null?n:wd(l,!1,i=>{let r=i.memoizedState;for(;r;){if(r.memoizedState===e)return!0;r=r.next}})},[l,e])}const Jo=[],Ug=new WeakMap;function GE(){var l;const e=HE();Jo.splice(0,Jo.length),wd(e,!0,t=>{var n;const i=(n=t.type)==null?void 0:n._context;i&&i!==bd&&Jo.push(ix(i))});for(const t of Jo){const n=(l=VE.current)==null?void 0:l.readContext(t);Ug.set(t,n)}return Ne.exports.useMemo(()=>Jo.reduce((t,n)=>i=>Ne.exports.createElement(t,null,Ne.exports.createElement(n.Provider,UE(kg({},i),{value:Ug.get(n)}))),t=>Vt(rx,{...kg({},t)})),[])}const Zh={onClick:["click",!1],onContextMenu:["contextmenu",!1],onDoubleClick:["dblclick",!1],onWheel:["wheel",!0],onPointerDown:["pointerdown",!0],onPointerUp:["pointerup",!0],onPointerLeave:["pointerleave",!0],onPointerMove:["pointermove",!0],onPointerCancel:["pointercancel",!0],onLostPointerCapture:["lostpointercapture",!0]};function WE(l){const{handlePointer:e}=gE(l);return{priority:1,enabled:!0,compute(t,n,i){n.pointer.set(t.offsetX/n.size.width*2-1,-(t.offsetY/n.size.height)*2+1),n.raycaster.setFromCamera(n.pointer,n.camera)},connected:void 0,handlers:Object.keys(Zh).reduce((t,n)=>({...t,[n]:e(n)}),{}),connect:t=>{var n;const{set:i,events:r}=l.getState();r.disconnect==null||r.disconnect(),i(a=>({events:{...a.events,connected:t}})),Object.entries((n=r.handlers)!=null?n:[]).forEach(([a,c])=>{const[u,h]=Zh[a];t.addEventListener(u,c,{passive:h})})},disconnect:()=>{const{set:t,events:n}=l.getState();if(n.connected){var i;Object.entries((i=n.handlers)!=null?i:[]).forEach(([r,a])=>{if(n&&n.connected instanceof HTMLElement){const[c]=Zh[r];n.connected.removeEventListener(c,a)}}),t(r=>({events:{...r.events,connected:void 0}}))}}}}const XE=Ne.exports.forwardRef(function({children:e,fallback:t,resize:n,style:i,gl:r,events:a=WE,eventSource:c,eventPrefix:u,shadows:h,linear:d,flat:p,legacy:m,orthographic:v,frameloop:y,dpr:x,performance:_,raycaster:S,camera:w,onPointerMissed:T,onCreated:E,...C},P){Ne.exports.useMemo(()=>vE(Fc),[]);const N=GE(),[A,L]=PE({scroll:!0,debounce:{scroll:50,resize:0},...n}),F=Ne.exports.useRef(null),q=Ne.exports.useRef(null),[se,J]=Ne.exports.useState(null);Ne.exports.useImperativeHandle(P,()=>F.current);const W=Xv(T),[$,te]=Ne.exports.useState(!1),[pe,V]=Ne.exports.useState(!1);if($)throw $;if(pe)throw pe;const k=Ne.exports.useRef(null);return L.width>0&&L.height>0&&se&&(k.current||(k.current=AE(se)),k.current.configure({gl:r,events:a,shadows:h,linear:d,flat:p,legacy:m,orthographic:v,frameloop:y,dpr:x,performance:_,raycaster:S,camera:w,size:L,onPointerMissed:(...le)=>W.current==null?void 0:W.current(...le),onCreated:le=>{le.events.connect==null||le.events.connect(c?lE(c)?c.current:c:q.current),u&&le.setEvents({compute:(re,me)=>{const Ee=re[u+"X"],Ve=re[u+"Y"];me.pointer.set(Ee/me.size.width*2-1,-(Ve/me.size.height)*2+1),me.raycaster.setFromCamera(me.pointer,me.camera)}}),E==null||E(le)}}),k.current.render(Vt(N,{children:Vt(qv,{set:V,children:Vt(Ne.exports.Suspense,{fallback:Vt(cE,{set:te}),children:e})})}))),Fa(()=>{J(F.current)},[]),Ne.exports.useEffect(()=>{if(se)return()=>tx(se)},[se]),Vt("div",{ref:q,style:{position:"relative",width:"100%",height:"100%",overflow:"hidden",pointerEvents:c?"none":"auto",...i},...C,children:Vt("div",{ref:A,style:{width:"100%",height:"100%"},children:Vt("canvas",{ref:F,style:{display:"block"},children:t})})})}),qE=Ne.exports.forwardRef(function(e,t){return Vt(rx,{children:Vt(XE,{...e,ref:t})})});function rt(l,e,t){return e in l?Object.defineProperty(l,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):l[e]=t,l}const Bg=(l,e)=>(l%e+e)%e;class YE extends Ai{constructor(e,t){super(),rt(this,"object",void 0),rt(this,"domElement",void 0),rt(this,"enabled",!0),rt(this,"target",new I),rt(this,"minDistance",0),rt(this,"maxDistance",1/0),rt(this,"minZoom",0),rt(this,"maxZoom",1/0),rt(this,"minPolarAngle",0),rt(this,"maxPolarAngle",Math.PI),rt(this,"minAzimuthAngle",-1/0),rt(this,"maxAzimuthAngle",1/0),rt(this,"enableDamping",!1),rt(this,"dampingFactor",.05),rt(this,"enableZoom",!0),rt(this,"zoomSpeed",1),rt(this,"enableRotate",!0),rt(this,"rotateSpeed",1),rt(this,"enablePan",!0),rt(this,"panSpeed",1),rt(this,"screenSpacePanning",!0),rt(this,"keyPanSpeed",7),rt(this,"autoRotate",!1),rt(this,"autoRotateSpeed",2),rt(this,"reverseOrbit",!1),rt(this,"keys",{LEFT:"ArrowLeft",UP:"ArrowUp",RIGHT:"ArrowRight",BOTTOM:"ArrowDown"}),rt(this,"mouseButtons",{LEFT:Zr.ROTATE,MIDDLE:Zr.DOLLY,RIGHT:Zr.PAN}),rt(this,"touches",{ONE:jr.ROTATE,TWO:jr.DOLLY_PAN}),rt(this,"target0",void 0),rt(this,"position0",void 0),rt(this,"zoom0",void 0),rt(this,"_domElementKeyEvents",null),rt(this,"getPolarAngle",void 0),rt(this,"getAzimuthalAngle",void 0),rt(this,"setPolarAngle",void 0),rt(this,"setAzimuthalAngle",void 0),rt(this,"getDistance",void 0),rt(this,"listenToKeyEvents",void 0),rt(this,"saveState",void 0),rt(this,"reset",void 0),rt(this,"update",void 0),rt(this,"connect",void 0),rt(this,"dispose",void 0),this.object=e,this.domElement=t,this.target0=this.target.clone(),this.position0=this.object.position.clone(),this.zoom0=this.object instanceof Ot?this.object.zoom:1,this.getPolarAngle=()=>d.phi,this.getAzimuthalAngle=()=>d.theta,this.setPolarAngle=B=>{let ee=Bg(B,2*Math.PI),ve=d.phi;ve<0&&(ve+=2*Math.PI),ee<0&&(ee+=2*Math.PI);let Le=Math.abs(ee-ve);2*Math.PI-Le<Le&&(ee<ve?ee+=2*Math.PI:ve+=2*Math.PI),p.phi=ee-ve,n.update()},this.setAzimuthalAngle=B=>{let ee=Bg(B,2*Math.PI),ve=d.theta;ve<0&&(ve+=2*Math.PI),ee<0&&(ee+=2*Math.PI);let Le=Math.abs(ee-ve);2*Math.PI-Le<Le&&(ee<ve?ee+=2*Math.PI:ve+=2*Math.PI),p.theta=ee-ve,n.update()},this.getDistance=()=>n.object.position.distanceTo(n.target),this.listenToKeyEvents=B=>{B.addEventListener("keydown",Q),this._domElementKeyEvents=B},this.saveState=()=>{n.target0.copy(n.target),n.position0.copy(n.object.position),n.zoom0=n.object instanceof Ot?n.object.zoom:1},this.reset=()=>{n.target.copy(n.target0),n.object.position.copy(n.position0),n.object instanceof Ot&&(n.object.zoom=n.zoom0,n.object.updateProjectionMatrix()),n.dispatchEvent(i),n.update(),u=c.NONE},this.update=(()=>{const B=new I,ee=new vn().setFromUnitVectors(e.up,new I(0,1,0)),ve=ee.clone().invert(),Le=new I,Qe=new vn,H=2*Math.PI;return function(){const Me=n.object.position;B.copy(Me).sub(n.target),B.applyQuaternion(ee),d.setFromVector3(B),n.autoRotate&&u===c.NONE&&se(F()),n.enableDamping?(d.theta+=p.theta*n.dampingFactor,d.phi+=p.phi*n.dampingFactor):(d.theta+=p.theta,d.phi+=p.phi);let ce=n.minAzimuthAngle,xe=n.maxAzimuthAngle;return isFinite(ce)&&isFinite(xe)&&(ce<-Math.PI?ce+=H:ce>Math.PI&&(ce-=H),xe<-Math.PI?xe+=H:xe>Math.PI&&(xe-=H),ce<=xe?d.theta=Math.max(ce,Math.min(xe,d.theta)):d.theta=d.theta>(ce+xe)/2?Math.max(ce,d.theta):Math.min(xe,d.theta)),d.phi=Math.max(n.minPolarAngle,Math.min(n.maxPolarAngle,d.phi)),d.makeSafe(),d.radius*=m,d.radius=Math.max(n.minDistance,Math.min(n.maxDistance,d.radius)),n.enableDamping===!0?n.target.addScaledVector(v,n.dampingFactor):n.target.add(v),B.setFromSpherical(d),B.applyQuaternion(ve),Me.copy(n.target).add(B),n.object.lookAt(n.target),n.enableDamping===!0?(p.theta*=1-n.dampingFactor,p.phi*=1-n.dampingFactor,v.multiplyScalar(1-n.dampingFactor)):(p.set(0,0,0),v.set(0,0,0)),m=1,y||Le.distanceToSquared(n.object.position)>h||8*(1-Qe.dot(n.object.quaternion))>h?(n.dispatchEvent(i),Le.copy(n.object.position),Qe.copy(n.object.quaternion),y=!1,!0):!1}})(),this.connect=B=>{B===document&&console.error('THREE.OrbitControls: "document" should not be used as the target "domElement". Please use "renderer.domElement" instead.'),n.domElement=B,n.domElement.style.touchAction="none",n.domElement.addEventListener("contextmenu",Ae),n.domElement.addEventListener("pointerdown",$e),n.domElement.addEventListener("pointercancel",mt),n.domElement.addEventListener("wheel",R)},this.dispose=()=>{var B,ee,ve,Le,Qe,H;(B=n.domElement)===null||B===void 0||B.removeEventListener("contextmenu",Ae),(ee=n.domElement)===null||ee===void 0||ee.removeEventListener("pointerdown",$e),(ve=n.domElement)===null||ve===void 0||ve.removeEventListener("pointercancel",mt),(Le=n.domElement)===null||Le===void 0||Le.removeEventListener("wheel",R),(Qe=n.domElement)===null||Qe===void 0||Qe.ownerDocument.removeEventListener("pointermove",We),(H=n.domElement)===null||H===void 0||H.ownerDocument.removeEventListener("pointerup",He),n._domElementKeyEvents!==null&&n._domElementKeyEvents.removeEventListener("keydown",Q)};const n=this,i={type:"change"},r={type:"start"},a={type:"end"},c={NONE:-1,ROTATE:0,DOLLY:1,PAN:2,TOUCH_ROTATE:3,TOUCH_PAN:4,TOUCH_DOLLY_PAN:5,TOUCH_DOLLY_ROTATE:6};let u=c.NONE;const h=1e-6,d=new Df,p=new Df;let m=1;const v=new I;let y=!1;const x=new fe,_=new fe,S=new fe,w=new fe,T=new fe,E=new fe,C=new fe,P=new fe,N=new fe,A=[],L={};function F(){return 2*Math.PI/60/60*n.autoRotateSpeed}function q(){return Math.pow(.95,n.zoomSpeed)}function se(B){n.reverseOrbit?p.theta+=B:p.theta-=B}function J(B){n.reverseOrbit?p.phi+=B:p.phi-=B}const W=(()=>{const B=new I;return function(ve,Le){B.setFromMatrixColumn(Le,0),B.multiplyScalar(-ve),v.add(B)}})(),$=(()=>{const B=new I;return function(ve,Le){n.screenSpacePanning===!0?B.setFromMatrixColumn(Le,1):(B.setFromMatrixColumn(Le,0),B.crossVectors(n.object.up,B)),B.multiplyScalar(ve),v.add(B)}})(),te=(()=>{const B=new I;return function(ve,Le){const Qe=n.domElement;if(Qe&&n.object instanceof Ot&&n.object.isPerspectiveCamera){const H=n.object.position;B.copy(H).sub(n.target);let Ie=B.length();Ie*=Math.tan(n.object.fov/2*Math.PI/180),W(2*ve*Ie/Qe.clientHeight,n.object.matrix),$(2*Le*Ie/Qe.clientHeight,n.object.matrix)}else Qe&&n.object instanceof _r&&n.object.isOrthographicCamera?(W(ve*(n.object.right-n.object.left)/n.object.zoom/Qe.clientWidth,n.object.matrix),$(Le*(n.object.top-n.object.bottom)/n.object.zoom/Qe.clientHeight,n.object.matrix)):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - pan disabled."),n.enablePan=!1)}})();function pe(B){n.object instanceof Ot&&n.object.isPerspectiveCamera?m/=B:n.object instanceof _r&&n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom*B)),n.object.updateProjectionMatrix(),y=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function V(B){n.object instanceof Ot&&n.object.isPerspectiveCamera?m*=B:n.object instanceof _r&&n.object.isOrthographicCamera?(n.object.zoom=Math.max(n.minZoom,Math.min(n.maxZoom,n.object.zoom/B)),n.object.updateProjectionMatrix(),y=!0):(console.warn("WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled."),n.enableZoom=!1)}function k(B){x.set(B.clientX,B.clientY)}function U(B){C.set(B.clientX,B.clientY)}function le(B){w.set(B.clientX,B.clientY)}function re(B){_.set(B.clientX,B.clientY),S.subVectors(_,x).multiplyScalar(n.rotateSpeed);const ee=n.domElement;ee&&(se(2*Math.PI*S.x/ee.clientHeight),J(2*Math.PI*S.y/ee.clientHeight)),x.copy(_),n.update()}function me(B){P.set(B.clientX,B.clientY),N.subVectors(P,C),N.y>0?pe(q()):N.y<0&&V(q()),C.copy(P),n.update()}function Ee(B){T.set(B.clientX,B.clientY),E.subVectors(T,w).multiplyScalar(n.panSpeed),te(E.x,E.y),w.copy(T),n.update()}function Ve(B){B.deltaY<0?V(q()):B.deltaY>0&&pe(q()),n.update()}function oe(B){let ee=!1;switch(B.code){case n.keys.UP:te(0,n.keyPanSpeed),ee=!0;break;case n.keys.BOTTOM:te(0,-n.keyPanSpeed),ee=!0;break;case n.keys.LEFT:te(n.keyPanSpeed,0),ee=!0;break;case n.keys.RIGHT:te(-n.keyPanSpeed,0),ee=!0;break}ee&&(B.preventDefault(),n.update())}function je(){if(A.length==1)x.set(A[0].pageX,A[0].pageY);else{const B=.5*(A[0].pageX+A[1].pageX),ee=.5*(A[0].pageY+A[1].pageY);x.set(B,ee)}}function Ge(){if(A.length==1)w.set(A[0].pageX,A[0].pageY);else{const B=.5*(A[0].pageX+A[1].pageX),ee=.5*(A[0].pageY+A[1].pageY);w.set(B,ee)}}function Ye(){const B=A[0].pageX-A[1].pageX,ee=A[0].pageY-A[1].pageY,ve=Math.sqrt(B*B+ee*ee);C.set(0,ve)}function be(){n.enableZoom&&Ye(),n.enablePan&&Ge()}function Ze(){n.enableZoom&&Ye(),n.enableRotate&&je()}function he(B){if(A.length==1)_.set(B.pageX,B.pageY);else{const ve=ke(B),Le=.5*(B.pageX+ve.x),Qe=.5*(B.pageY+ve.y);_.set(Le,Qe)}S.subVectors(_,x).multiplyScalar(n.rotateSpeed);const ee=n.domElement;ee&&(se(2*Math.PI*S.x/ee.clientHeight),J(2*Math.PI*S.y/ee.clientHeight)),x.copy(_)}function ne(B){if(A.length==1)T.set(B.pageX,B.pageY);else{const ee=ke(B),ve=.5*(B.pageX+ee.x),Le=.5*(B.pageY+ee.y);T.set(ve,Le)}E.subVectors(T,w).multiplyScalar(n.panSpeed),te(E.x,E.y),w.copy(T)}function _e(B){const ee=ke(B),ve=B.pageX-ee.x,Le=B.pageY-ee.y,Qe=Math.sqrt(ve*ve+Le*Le);P.set(0,Qe),N.set(0,Math.pow(P.y/C.y,n.zoomSpeed)),pe(N.y),C.copy(P)}function Oe(B){n.enableZoom&&_e(B),n.enablePan&&ne(B)}function Te(B){n.enableZoom&&_e(B),n.enableRotate&&he(B)}function $e(B){if(n.enabled!==!1){if(A.length===0){var ee,ve;(ee=n.domElement)===null||ee===void 0||ee.ownerDocument.addEventListener("pointermove",We),(ve=n.domElement)===null||ve===void 0||ve.ownerDocument.addEventListener("pointerup",He)}Je(B),B.pointerType==="touch"?ge(B):wt(B)}}function We(B){n.enabled!==!1&&(B.pointerType==="touch"?Se(B):O(B))}function He(B){if(Ce(B),A.length===0){var ee,ve,Le;(ee=n.domElement)===null||ee===void 0||ee.releasePointerCapture(B.pointerId),(ve=n.domElement)===null||ve===void 0||ve.ownerDocument.removeEventListener("pointermove",We),(Le=n.domElement)===null||Le===void 0||Le.ownerDocument.removeEventListener("pointerup",He)}n.dispatchEvent(a),u=c.NONE}function mt(B){Ce(B)}function wt(B){let ee;switch(B.button){case 0:ee=n.mouseButtons.LEFT;break;case 1:ee=n.mouseButtons.MIDDLE;break;case 2:ee=n.mouseButtons.RIGHT;break;default:ee=-1}switch(ee){case Zr.DOLLY:if(n.enableZoom===!1)return;U(B),u=c.DOLLY;break;case Zr.ROTATE:if(B.ctrlKey||B.metaKey||B.shiftKey){if(n.enablePan===!1)return;le(B),u=c.PAN}else{if(n.enableRotate===!1)return;k(B),u=c.ROTATE}break;case Zr.PAN:if(B.ctrlKey||B.metaKey||B.shiftKey){if(n.enableRotate===!1)return;k(B),u=c.ROTATE}else{if(n.enablePan===!1)return;le(B),u=c.PAN}break;default:u=c.NONE}u!==c.NONE&&n.dispatchEvent(r)}function O(B){if(n.enabled!==!1)switch(u){case c.ROTATE:if(n.enableRotate===!1)return;re(B);break;case c.DOLLY:if(n.enableZoom===!1)return;me(B);break;case c.PAN:if(n.enablePan===!1)return;Ee(B);break}}function R(B){n.enabled===!1||n.enableZoom===!1||u!==c.NONE&&u!==c.ROTATE||(B.preventDefault(),n.dispatchEvent(r),Ve(B),n.dispatchEvent(a))}function Q(B){n.enabled===!1||n.enablePan===!1||oe(B)}function ge(B){switch(de(B),A.length){case 1:switch(n.touches.ONE){case jr.ROTATE:if(n.enableRotate===!1)return;je(),u=c.TOUCH_ROTATE;break;case jr.PAN:if(n.enablePan===!1)return;Ge(),u=c.TOUCH_PAN;break;default:u=c.NONE}break;case 2:switch(n.touches.TWO){case jr.DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;be(),u=c.TOUCH_DOLLY_PAN;break;case jr.DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Ze(),u=c.TOUCH_DOLLY_ROTATE;break;default:u=c.NONE}break;default:u=c.NONE}u!==c.NONE&&n.dispatchEvent(r)}function Se(B){switch(de(B),u){case c.TOUCH_ROTATE:if(n.enableRotate===!1)return;he(B),n.update();break;case c.TOUCH_PAN:if(n.enablePan===!1)return;ne(B),n.update();break;case c.TOUCH_DOLLY_PAN:if(n.enableZoom===!1&&n.enablePan===!1)return;Oe(B),n.update();break;case c.TOUCH_DOLLY_ROTATE:if(n.enableZoom===!1&&n.enableRotate===!1)return;Te(B),n.update();break;default:u=c.NONE}}function Ae(B){n.enabled!==!1&&B.preventDefault()}function Je(B){A.push(B)}function Ce(B){delete L[B.pointerId];for(let ee=0;ee<A.length;ee++)if(A[ee].pointerId==B.pointerId){A.splice(ee,1);return}}function de(B){let ee=L[B.pointerId];ee===void 0&&(ee=new fe,L[B.pointerId]=ee),ee.set(B.pageX,B.pageY)}function ke(B){const ee=B.pointerId===A[0].pointerId?A[1]:A[0];return L[ee.pointerId]}t!==void 0&&this.connect(t),this.update()}}const ZE=Ne.exports.forwardRef(({makeDefault:l,camera:e,regress:t,domElement:n,enableDamping:i=!0,onChange:r,onStart:a,onEnd:c,...u},h)=>{const d=Yr(E=>E.invalidate),p=Yr(E=>E.camera),m=Yr(E=>E.gl),v=Yr(E=>E.events),y=Yr(E=>E.set),x=Yr(E=>E.get),_=Yr(E=>E.performance),S=e||p,w=n||v.connected||m.domElement,T=Ne.exports.useMemo(()=>new YE(S),[S]);return ex(()=>{T.enabled&&T.update()},-1),Ne.exports.useEffect(()=>(T.connect(w),()=>void T.dispose()),[w,t,T,d]),Ne.exports.useEffect(()=>{const E=C=>{d(),t&&_.regress(),r&&r(C)};return T.addEventListener("change",E),a&&T.addEventListener("start",a),c&&T.addEventListener("end",c),()=>{a&&T.removeEventListener("start",a),c&&T.removeEventListener("end",c),T.removeEventListener("change",E)}},[r,a,c,T,d]),Ne.exports.useEffect(()=>{if(l){const E=x().controls;return y({controls:T}),()=>y({controls:E})}},[l,T]),Vt("primitive",{ref:h,object:T,enableDamping:i,...u})});var jE=`#define GLSLIFY 1
vec3 mod289(vec3 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 mod289(vec4 x){return x-floor(x*(1.0/289.0))*289.0;}vec4 permute(vec4 x){return mod289(((x*34.0)+1.0)*x);}vec4 taylorInvSqrt(vec4 r){return 1.79284291400159-0.85373472095314*r;}float snoise(vec3 v){const vec2 C=vec2(1.0/6.0,1.0/3.0);const vec4 D=vec4(0.0,0.5,1.0,2.0);vec3 i=floor(v+dot(v,C.yyy));vec3 x0=v-i+dot(i,C.xxx);vec3 g=step(x0.yzx,x0.xyz);vec3 l=1.0-g;vec3 i1=min(g.xyz,l.zxy);vec3 i2=max(g.xyz,l.zxy);vec3 x1=x0-i1+C.xxx;vec3 x2=x0-i2+C.yyy;vec3 x3=x0-D.yyy;i=mod289(i);vec4 p=permute(permute(permute(i.z+vec4(0.0,i1.z,i2.z,1.0))+i.y+vec4(0.0,i1.y,i2.y,1.0))+i.x+vec4(0.0,i1.x,i2.x,1.0));float n_=0.142857142857;vec3 ns=n_*D.wyz-D.xzx;vec4 j=p-49.0*floor(p*ns.z*ns.z);vec4 x_=floor(j*ns.z);vec4 y_=floor(j-7.0*x_);vec4 x=x_*ns.x+ns.yyyy;vec4 y=y_*ns.x+ns.yyyy;vec4 h=1.0-abs(x)-abs(y);vec4 b0=vec4(x.xy,y.xy);vec4 b1=vec4(x.zw,y.zw);vec4 s0=floor(b0)*2.0+1.0;vec4 s1=floor(b1)*2.0+1.0;vec4 sh=-step(h,vec4(0.0));vec4 a0=b0.xzyw+s0.xzyw*sh.xxyy;vec4 a1=b1.xzyw+s1.xzyw*sh.zzww;vec3 p0=vec3(a0.xy,h.x);vec3 p1=vec3(a0.zw,h.y);vec3 p2=vec3(a1.xy,h.z);vec3 p3=vec3(a1.zw,h.w);vec4 norm=taylorInvSqrt(vec4(dot(p0,p0),dot(p1,p1),dot(p2,p2),dot(p3,p3)));p0*=norm.x;p1*=norm.y;p2*=norm.z;p3*=norm.w;vec4 m=max(0.6-vec4(dot(x0,x0),dot(x1,x1),dot(x2,x2),dot(x3,x3)),0.0);m=m*m;return 42.0*dot(m*m,vec4(dot(p0,x0),dot(p1,x1),dot(p2,x2),dot(p3,x3)));}`;class JE extends hd{constructor(e={}){super(e),this.setValues(e),this._time={value:0},this._distort={value:.4},this._radius={value:1}}onBeforeCompile(e){e.uniforms.time=this._time,e.uniforms.radius=this._radius,e.uniforms.distort=this._distort,e.vertexShader=`
      uniform float time;
      uniform float radius;
      uniform float distort;
      ${jE}
      ${e.vertexShader}
    `,e.vertexShader=e.vertexShader.replace("#include <begin_vertex>",`
        float updateTime = time / 50.0;
        float noise = snoise(vec3(position / 2.0 + updateTime * 5.0));
        vec3 transformed = vec3(position * (noise * pow(distort, 2.0) + radius));
        `)}get time(){return this._time.value}set time(e){this._time.value=e}get distort(){return this._distort.value}set distort(e){this._distort.value=e}get radius(){return this._radius.value}set radius(e){this._radius.value=e}}const QE=Ne.exports.forwardRef(({speed:l=1,...e},t)=>{const[n]=Ne.exports.useState(()=>new JE);return ex(i=>n&&(n.time=i.clock.getElapsedTime()*l)),Vt("primitive",{object:n,ref:t,attach:"material",...e})});function KE(l){const e=l+"Geometry";return Ne.exports.forwardRef(({args:t,children:n,...i},r)=>Vg("mesh",{ref:r,...i,children:[Vt(e,{attach:"geometry",args:t}),n]}))}const $E=KE("sphere"),e3=()=>{const l=Qx(),{width:e}=$x(),t=Ne.exports.useMemo(()=>e>l.breakpoints.sm?2:1.4,[e,l]);return Vt($E,{visible:!0,args:[1.2,200,200],scale:t,children:Vt(QE,{color:l.colors.cyan[7],attach:"material",distort:.35,roughness:5,speed:1.2,poleAmount:.5})})},t3=Kx(l=>({canvas:{height:"100%",maxWidth:"50%",[`@media (max-width: ${l.breakpoints.lg+60}px)`]:{maxWidth:"100%",maxHeight:"55%"}}})),r3=()=>{const{classes:l}=t3();return Vg(qE,{className:l.canvas,children:[Vt(ZE,{enableZoom:!1}),Vt("ambientLight",{intensity:.5}),Vt("directionalLight",{position:[-2,5,2],intensity:1}),Vt(Ne.exports.Suspense,{fallback:null,children:Vt(e3,{})})]})};export{r3 as default};
